import type { TSESTree } from '@typescript-eslint/types';
import type { ScopeManager } from '@typescript-eslint/scope-manager/src/ScopeManager';
import type { ImplicitLibVariableOptions } from '@typescript-eslint/scope-manager/src/variable';
import type { Scope } from '@typescript-eslint/scope-manager/src/scope/Scope';
import { ScopeBase } from '@typescript-eslint/scope-manager/src/scope/ScopeBase';
import { ScopeType } from '@typescript-eslint/scope-manager/src/scope/ScopeType';
declare class GlobalScope extends ScopeBase<ScopeType.global, TSESTree.Program,
    /**
     * The global scope has no parent.
     */
    null> {
    private readonly implicit;
    constructor(scopeManager: ScopeManager, block: GlobalScope['block']);
    defineImplicitVariable(name: string, options: ImplicitLibVariableOptions): void;
    close(scopeManager: ScopeManager): Scope | null;
}
export { GlobalScope };
//# sourceMappingURL=GlobalScope.d.ts.map