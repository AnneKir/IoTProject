{"ast":null,"code":"import { ConnectableObservable } from '../observable/ConnectableObservable';\nimport { isFunction } from '../util/isFunction';\nimport { connect } from './connect';\nexport function multicast(subjectOrSubjectFactory, selector) {\n  var subjectFactory = isFunction(subjectOrSubjectFactory) ? subjectOrSubjectFactory : function () {\n    return subjectOrSubjectFactory;\n  };\n  if (isFunction(selector)) {\n    return connect(selector, {\n      connector: subjectFactory\n    });\n  }\n  return function (source) {\n    return new ConnectableObservable(source, subjectFactory);\n  };\n}","map":{"version":3,"mappings":"AAEA,SAASA,qBAAqB,QAAQ,qCAAqC;AAE3E,SAASC,UAAU,QAAQ,oBAAoB;AAC/C,SAASC,OAAO,QAAQ,WAAW;AA4EnC,OAAM,SAAUC,SAAS,CACvBC,uBAAwD,EACxDC,QAAmD;EAEnD,IAAMC,cAAc,GAAGL,UAAU,CAACG,uBAAuB,CAAC,GAAGA,uBAAuB,GAAG;IAAM,8BAAuB;EAAvB,CAAuB;EAEpH,IAAIH,UAAU,CAACI,QAAQ,CAAC,EAAE;IAIxB,OAAOH,OAAO,CAACG,QAAQ,EAAE;MACvBE,SAAS,EAAED;KACZ,CAAC;;EAGJ,OAAO,UAACE,MAAqB;IAAK,WAAIR,qBAAqB,CAAMQ,MAAM,EAAEF,cAAc,CAAC;EAAtD,CAAsD;AAC1F","names":["ConnectableObservable","isFunction","connect","multicast","subjectOrSubjectFactory","selector","subjectFactory","connector","source"],"sources":["../../../../src/internal/operators/multicast.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}