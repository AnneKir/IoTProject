{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nconst __1 = require(\"../..\");\nconst __2 = require(\"../..\");\nclass Buffer {\n  constructor(capacity, limit, position, mark) {\n    this._cap = 0;\n    this._limit = 0;\n    this._pos = 0;\n    this._mark = -1;\n    if (capacity < 0) throw new __1.IllegalArgumentException('Negative capacity');\n    this._cap = capacity;\n    this.limit(limit);\n    this.position(position);\n    if (mark >= 0) {\n      if (mark > this._pos) throw new __1.IllegalArgumentException('Mark is greater than current position');\n      this._mark = mark;\n    }\n  }\n  capacity() {\n    return this._cap;\n  }\n  clear() {\n    this._limit = this._cap;\n    this._pos = 0;\n    this._mark = -1;\n    return this;\n  }\n  flip() {\n    this._limit = this._pos;\n    this._pos = 0;\n    this._mark = -1;\n    return this;\n  }\n  hasRemaining() {\n    return this.remaining() > 0;\n  }\n  limit(newLimit) {\n    if (!newLimit) return this._limit;\n    if (newLimit < 0 || newLimit > this._cap) throw new __1.IllegalArgumentException('New limit out of bound');\n    if (newLimit < this._mark) this._mark = -1;\n    if (this._pos > newLimit) this._pos = newLimit;\n    this._limit = newLimit;\n    return this;\n  }\n  mark() {\n    this._mark = this._pos;\n    return this;\n  }\n  position(newPosition) {\n    if (newPosition === undefined) return this._pos;\n    if (newPosition < 0 || newPosition > this._limit) throw new __1.IllegalArgumentException('New position out of bound');\n    if (newPosition <= this._mark) this._mark = -1;\n    this._pos = newPosition;\n    return this;\n  }\n  remaining() {\n    return this._limit - this._pos;\n  }\n  reset() {\n    if (this._mark === -1) throw new __2.InvalidMarkException();\n    this._pos = this._mark;\n    return this;\n  }\n  rewind() {\n    this._pos = 0;\n    this._mark = -1;\n    return this;\n  }\n}\nexports.Buffer = Buffer;","map":{"version":3,"mappings":";;;;;AACA;AACA;AAEA;EAOIA,YAAsBC,QAAgB,EAAEC,KAAa,EAAEC,QAAgB,EAAEC,IAAY;IALpE,SAAI,GAAW,CAAC;IACzB,WAAM,GAAW,CAAC;IAClB,SAAI,GAAW,CAAC;IAChB,UAAK,GAAW,CAAC,CAAC;IAGtB,IAAIH,QAAQ,GAAG,CAAC,EACZ,MAAM,IAAII,4BAAwB,CAAE,mBAAmB,CAAC;IAE5D,IAAI,CAACC,IAAI,GAAGL,QAAQ;IACpB,IAAI,CAACC,KAAK,CAACA,KAAK,CAAC;IACjB,IAAI,CAACC,QAAQ,CAACA,QAAQ,CAAC;IAEvB,IAAIC,IAAI,IAAI,CAAC,EAAE;MACX,IAAIA,IAAI,GAAG,IAAI,CAACG,IAAI,EAChB,MAAM,IAAIF,4BAAwB,CAAE,uCAAuC,CAAC;MAChF,IAAI,CAACG,KAAK,GAAGJ,IAAI;;EAEzB;EAEOH,QAAQ;IACX,OAAO,IAAI,CAACK,IAAI;EACpB;EAEOG,KAAK;IACR,IAAI,CAACC,MAAM,GAAG,IAAI,CAACJ,IAAI;IACvB,IAAI,CAACC,IAAI,GAAG,CAAC;IACb,IAAI,CAACC,KAAK,GAAG,CAAC,CAAC;IACf,OAAO,IAAI;EACf;EAEOG,IAAI;IACP,IAAI,CAACD,MAAM,GAAG,IAAI,CAACH,IAAI;IACvB,IAAI,CAACA,IAAI,GAAG,CAAC;IACb,IAAI,CAACC,KAAK,GAAG,CAAC,CAAC;IACf,OAAO,IAAI;EACf;EAEOI,YAAY;IACf,OAAO,IAAI,CAACC,SAAS,EAAE,GAAG,CAAC;EAC/B;EAMOX,KAAK,CAACY,QAAiB;IAE1B,IAAI,CAACA,QAAQ,EACT,OAAO,IAAI,CAACJ,MAAM;IAEtB,IAAKI,QAAQ,GAAG,CAAC,IAAMA,QAAQ,GAAG,IAAI,CAACR,IAAK,EACxC,MAAM,IAAID,4BAAwB,CAAE,wBAAwB,CAAC;IAEjE,IAAIS,QAAQ,GAAG,IAAI,CAACN,KAAK,EACrB,IAAI,CAACA,KAAK,GAAG,CAAC,CAAC;IAEnB,IAAI,IAAI,CAACD,IAAI,GAAGO,QAAQ,EACpB,IAAI,CAACP,IAAI,GAAGO,QAAQ;IAExB,IAAI,CAACJ,MAAM,GAAGI,QAAQ;IACtB,OAAO,IAAI;EACf;EAEOV,IAAI;IACP,IAAI,CAACI,KAAK,GAAG,IAAI,CAACD,IAAI;IACtB,OAAO,IAAI;EACf;EAIOJ,QAAQ,CAACY,WAAoB;IAEhC,IAAIA,WAAW,KAAKC,SAAS,EACzB,OAAO,IAAI,CAACT,IAAI;IAEpB,IAAKQ,WAAW,GAAG,CAAC,IAAMA,WAAW,GAAG,IAAI,CAACL,MAAO,EAChD,MAAM,IAAIL,4BAAwB,CAAE,2BAA2B,CAAC;IAEpE,IAAIU,WAAW,IAAI,IAAI,CAACP,KAAK,EACzB,IAAI,CAACA,KAAK,GAAG,CAAC,CAAC;IAEnB,IAAI,CAACD,IAAI,GAAGQ,WAAW;IACvB,OAAO,IAAI;EACf;EAEOF,SAAS;IACZ,OAAO,IAAI,CAACH,MAAM,GAAG,IAAI,CAACH,IAAI;EAClC;EAEOU,KAAK;IACR,IAAI,IAAI,CAACT,KAAK,KAAK,CAAC,CAAC,EACjB,MAAM,IAAIU,wBAAoB,EAAE;IAEpC,IAAI,CAACX,IAAI,GAAG,IAAI,CAACC,KAAK;IACtB,OAAO,IAAI;EACf;EAEOW,MAAM;IACT,IAAI,CAACZ,IAAI,GAAG,CAAC;IACb,IAAI,CAACC,KAAK,GAAG,CAAC,CAAC;IACf,OAAO,IAAI;EACf;;AAxGJY","names":["constructor","capacity","limit","position","mark","__1","_cap","_pos","_mark","clear","_limit","flip","hasRemaining","remaining","newLimit","newPosition","undefined","reset","__2","rewind","exports"],"sources":["../../../src/collections/buffer/buffer.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}