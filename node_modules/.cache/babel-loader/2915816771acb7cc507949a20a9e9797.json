{"ast":null,"code":"import { reduce } from './reduce';\nexport function count(predicate) {\n  return reduce(function (total, value, i) {\n    return !predicate || predicate(value, i) ? total + 1 : total;\n  }, 0);\n}","map":{"version":3,"mappings":"AACA,SAASA,MAAM,QAAQ,UAAU;AAyDjC,OAAM,SAAUC,KAAK,CAAIC,SAAgD;EACvE,OAAOF,MAAM,CAAC,UAACG,KAAK,EAAEC,KAAK,EAAEC,CAAC;IAAK,OAAC,CAACH,SAAS,IAAIA,SAAS,CAACE,KAAK,EAAEC,CAAC,CAAC,GAAGF,KAAK,GAAG,CAAC,GAAGA,KAAK;EAAtD,CAAuD,EAAE,CAAC,CAAC;AAChG","names":["reduce","count","predicate","total","value","i"],"sources":["../../../../src/internal/operators/count.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}