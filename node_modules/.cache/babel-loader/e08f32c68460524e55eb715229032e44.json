{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Amali\\\\Desktop\\\\Building_the_IoT_w._P2P_and_Cloud_Computing\\\\IoTProject\\\\src\\\\App.tsx\";\n// import logo from './logo.svg';\nimport { Typography } from '@mui/material';\nimport './App.css';\n// import './first';\n// import wrtc from 'wrtc';\n\nimport React from 'react';\nimport SimplePeer from 'simple-peer';\nimport { io } from 'socket.io-client';\nimport { Setup, JoinRequest, State, setModel, getId, setRoom, Peers, JoinRoomButton } from 'react-simple-peer';\n// import { startClient, gotData } from './client';\n// import { Box } from '@mui/system';\n\n// import SimplePeer, {Instance} from \"simple-peer\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport class User {\n  constructor(username, stream) {\n    this.username = void 0;\n    this.stream = void 0;\n    this.connection = void 0;\n    this.username = username;\n    this.connection = new SimplePeer();\n    this.stream = stream;\n  }\n}\nfunction handleOfferRequest(processOfferRequest, socket) {\n  socket.on('offer-request', request => processOfferRequest(request));\n  console.log(\"Received offer-request\");\n  console.log(processOfferRequest);\n  console.log(socket);\n}\nfunction emitOfferResponse(joinRequest, signalData, socket) {\n  socket.emit('offer-response', joinRequest, signalData);\n  console.log(\"Send offer-response\");\n}\nfunction handleJoinResponse(processJoinResponse, socket) {\n  socket.on('join-response', (offer, id, roomCreatorId) => processJoinResponse(offer, id, 'AZE', roomCreatorId));\n  console.log(\"Received join-response\");\n  console.log(processJoinResponse);\n  console.log(socket);\n}\nfunction emitJoinResponse(signalData, room, recievedId, id, socket) {\n  socket.emit('join-ack', {\n    offer: signalData,\n    roomId: room,\n    peerId: recievedId\n  }, id);\n  console.log(\"Join-ack send\");\n}\nfunction handleClientOffer(processClientOffer, socket) {\n  socket.on('client-offer', (data, peerId, sessionInitiator, emitterPeerId) => processClientOffer(data, peerId, sessionInitiator, emitterPeerId));\n  console.log(\"Received client-offer\");\n  console.log(processClientOffer);\n  console.log(socket);\n}\nfunction emitInitiatorOffers(offers, id, room, socket) {\n  socket.emit('initiator-offers', offers, id, room);\n  console.log(\"Sends initiator-offer :)\");\n  console.log(offers);\n  console.log(id);\n  console.log(room);\n  console.log(socket);\n}\nfunction handleLeaving(processLeaving, socket) {\n  socket.on('leaving', id => processLeaving(id));\n  console.log(\"I'm leaving\");\n  console.log(processLeaving);\n  console.log(socket);\n}\nfunction App() {\n  const ws = io('localhost:3000');\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Setup\n    // Wrapper around OfferRequest event listener that provides processing callback for that request.\n    , {\n      onOfferRequest: processOfferRequest => handleOfferRequest(processOfferRequest, ws)\n\n      // Wrapper around OfferRequest event emitter that provides both JoinRequest and SignalingData objects.\n      ,\n      emitOfferResponse: (joinRequest, signalData) => emitOfferResponse(joinRequest, signalData, ws)\n\n      // Wrapper around JoinResponse event listener that provides processing callback for that response.\n      ,\n      onJoinResponse: processJoinResponse => handleJoinResponse(processJoinResponse, ws)\n\n      // Wrapper around JoinAck event emitter that provides SignalingData as well as room id, received peer id and self peer id.\n      ,\n      emitJoinAck: (signalData, room, recievedId, id) => emitJoinResponse(signalData, room, recievedId, id, ws)\n\n      // Wrapper around clientOffer event listener that provides processing callback for that offer.\n      ,\n      onClientOffer: processClientOffer => handleClientOffer(processClientOffer, ws)\n\n      // Wrapper around InitiatorOffers event emitter that provides list of offers, self id and room id.\n      ,\n      emitInitiatorOffers: (offers, id, room) => emitInitiatorOffers(offers, id, room, ws)\n\n      // Wrapper around leaving event listener that provides processing callback for that leaving peer.\n      ,\n      onLeaving: processLeaving => handleLeaving(processLeaving, ws),\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"form-control\",\n            id: \"exampleInputEmail1\",\n            placeholder: \"Username\",\n            autoFocus: true,\n            type: \"text\",\n            onChange: async event => setModel(new User(event.target.value, await navigator.mediaDevices.getUserMedia({\n              audio: false,\n              video: true\n            })))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-10 offset-1\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            className: \"btn btn-primary\",\n            children: [\"State \", /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"badge badge-light\",\n              children: /*#__PURE__*/_jsxDEV(State, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 134,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 133,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-primary m-1\",\n            onClick: () => {\n              const roomId = 'AZE';\n              const room = {\n                initiatorPeerId: getId(),\n                roomId: roomId\n              };\n              setRoom(roomId);\n              ws.emit('create', room);\n              console.log(\"peer \" + getId() + \" tried to create room \" + roomId);\n            },\n            children: \"Create a room\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(JoinRoomButton, {\n            className: \"btn btn-secondary m-1\",\n            room: 'AZE',\n            join: () => {\n              ws.emit('join-request', {\n                roomId: 'AZE',\n                peerId: getId()\n              });\n              console.log(\"peerID: \" + getId());\n              console.log(\"peer \" + +\" tried to join a room\");\n            },\n            children: /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: \"Join a room\"\n            }, void 0, false)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Peers, {\n          children: peers => {\n            console.log(\"trying to add peer :)\");\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"container row\",\n              children: peers.map(peer => /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"col-3\",\n                children: /*#__PURE__*/_jsxDEV(Typography, {\n                  children: \"Peer has been added\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 167,\n                  columnNumber: 21\n                }, this)\n              }, peer.username, false, {\n                fileName: _jsxFileName,\n                lineNumber: 160,\n                columnNumber: 46\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 159,\n              columnNumber: 24\n            }, this);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Typography","React","SimplePeer","io","Setup","JoinRequest","State","setModel","getId","setRoom","Peers","JoinRoomButton","User","constructor","username","stream","connection","handleOfferRequest","processOfferRequest","socket","on","request","console","log","emitOfferResponse","joinRequest","signalData","emit","handleJoinResponse","processJoinResponse","offer","id","roomCreatorId","emitJoinResponse","room","recievedId","roomId","peerId","handleClientOffer","processClientOffer","data","sessionInitiator","emitterPeerId","emitInitiatorOffers","offers","handleLeaving","processLeaving","App","ws","event","target","value","navigator","mediaDevices","getUserMedia","audio","video","initiatorPeerId","peers","map","peer"],"sources":["C:/Users/Amali/Desktop/Building_the_IoT_w._P2P_and_Cloud_Computing/IoTProject/src/App.tsx"],"sourcesContent":["// import logo from './logo.svg';\r\nimport { Grid, Paper, Typography, Button, TextField } from '@mui/material';\r\nimport './App.css';\r\n// import './first';\r\n// import wrtc from 'wrtc';\r\nimport ReactDOM from 'react-dom/client';\r\nimport React from 'react';\r\nimport SimplePeer, { SignalData, Instance } from 'simple-peer';\r\nimport { io, Socket } from 'socket.io-client';\r\nimport { ServerToClientEvents, ClientToServerEvents } from \"./SocketTypes\";\r\nimport {\r\n  Setup,\r\n  JoinRequest,\r\n  ClientOffer,\r\n  State,\r\n  setModel,\r\n  getId,\r\n  setRoom,\r\n  Peers,\r\n  JoinRoomButton,\r\n  PeerVideo,\r\n  ReactSimplePeerModel\r\n} from 'react-simple-peer';\r\n// import { startClient, gotData } from './client';\r\n// import { Box } from '@mui/system';\r\n\r\n\r\n// import SimplePeer, {Instance} from \"simple-peer\";\r\n\r\nexport class User implements ReactSimplePeerModel {\r\n  public username?: string;\r\n  public stream: MediaStream | null;\r\n  public connection: Instance;\r\n\r\n  constructor(username: string, stream: MediaStream) {\r\n    this.username = username;\r\n    this.connection = new SimplePeer()\r\n    this.stream = stream;\r\n  }\r\n}\r\n\r\n\r\n\r\nfunction handleOfferRequest(processOfferRequest: (JoinRequest: JoinRequest) => void, socket: Socket) {\r\n  socket.on('offer-request', (request: JoinRequest) => processOfferRequest(request));\r\n  console.log(\"Received offer-request\")\r\n  console.log(processOfferRequest)\r\n  console.log(socket)\r\n}\r\n\r\nfunction emitOfferResponse(joinRequest: JoinRequest, signalData: SignalData, socket: Socket) {\r\n  socket.emit('offer-response', joinRequest, signalData);\r\n  console.log(\"Send offer-response\")\r\n}\r\n\r\nfunction handleJoinResponse(processJoinResponse: (offer: SignalData, id: string, room: string, roomCreatorId: string) => void, socket: Socket) {\r\n  socket.on('join-response', (offer: SignalData, id: string, roomCreatorId: string) => processJoinResponse(offer, id, 'AZE', roomCreatorId))\r\n  console.log(\"Received join-response\")\r\n  console.log(processJoinResponse)\r\n  console.log(socket)\r\n}\r\n\r\nfunction emitJoinResponse(signalData: SignalData, room: string, recievedId: string, id: string, socket: Socket) {\r\n  socket.emit('join-ack', { offer: signalData, roomId: room, peerId: recievedId }, id);\r\n  console.log(\"Join-ack send\")\r\n}\r\n\r\nfunction handleClientOffer(processClientOffer: (offer: ClientOffer, id: string, isRoomCreator: boolean, emitterId: string) => void, socket: Socket) {\r\n  socket.on('client-offer', (data: ClientOffer, peerId: string, sessionInitiator: boolean, emitterPeerId: string) => processClientOffer(data, peerId, sessionInitiator, emitterPeerId));\r\n  console.log(\"Received client-offer\")\r\n  console.log(processClientOffer)\r\n  console.log(socket)\r\n}\r\n\r\nfunction emitInitiatorOffers(offers: any, id: string, room: string, socket: Socket) {\r\n  socket.emit('initiator-offers', offers, id, room);\r\n  console.log(\"Sends initiator-offer :)\")\r\n  console.log(offers)\r\n  console.log(id)\r\n  console.log(room)\r\n  console.log(socket)\r\n}\r\n\r\nfunction handleLeaving(processLeaving: (id: string) => void, socket: Socket) {\r\n  socket.on('leaving', (id: string) => processLeaving(id));\r\n  console.log(\"I'm leaving\")\r\n  console.log(processLeaving)\r\n  console.log(socket)\r\n}\r\n\r\n\r\nfunction App(): JSX.Element {\r\n\r\n  const ws = io('localhost:3000');\r\n\r\n  return (\r\n    <>\r\n      <Setup\r\n        // Wrapper around OfferRequest event listener that provides processing callback for that request.\r\n        onOfferRequest={(processOfferRequest: (JoinRequest: JoinRequest) => void) => handleOfferRequest(processOfferRequest, ws)}\r\n\r\n        // Wrapper around OfferRequest event emitter that provides both JoinRequest and SignalingData objects.\r\n        emitOfferResponse={(joinRequest: JoinRequest, signalData: SignalData) => emitOfferResponse(joinRequest, signalData, ws)}\r\n\r\n        // Wrapper around JoinResponse event listener that provides processing callback for that response.\r\n        onJoinResponse={(processJoinResponse: (offer: SignalData, id: string, room: string, roomCreatorId: string) => void) => handleJoinResponse(processJoinResponse, ws)}\r\n\r\n        // Wrapper around JoinAck event emitter that provides SignalingData as well as room id, received peer id and self peer id.\r\n        emitJoinAck={(signalData: SignalData, room, recievedId, id) => emitJoinResponse(signalData, room, recievedId, id, ws)}\r\n\r\n        // Wrapper around clientOffer event listener that provides processing callback for that offer.\r\n        onClientOffer={(processClientOffer: (offer: ClientOffer, id: string, isRoomCreator: boolean, emitterId: string) => void) => handleClientOffer(processClientOffer, ws)}\r\n\r\n        // Wrapper around InitiatorOffers event emitter that provides list of offers, self id and room id.\r\n        emitInitiatorOffers={(offers, id, room) => emitInitiatorOffers(offers, id, room, ws)}\r\n\r\n        // Wrapper around leaving event listener that provides processing callback for that leaving peer.\r\n        onLeaving={(processLeaving: (id: string) => void) => handleLeaving(processLeaving, ws)}\r\n      >\r\n\r\n        <div className=\"container\">\r\n          <div className=\"form-group\">\r\n            <input className=\"form-control\" id=\"exampleInputEmail1\" placeholder=\"Username\" autoFocus={true}\r\n              type=\"text\"\r\n              onChange={async event => setModel(new User(event.target.value, await navigator.mediaDevices.getUserMedia({\r\n                audio: false,\r\n                video: true\r\n              })))} />\r\n          </div>\r\n\r\n          <div className=\"col-10 offset-1\">\r\n            <button type=\"button\" className=\"btn btn-primary\">\r\n              State <span className=\"badge badge-light\">\r\n                <State />\r\n              </span>\r\n            </button>\r\n\r\n            <button className=\"btn btn-primary m-1\" onClick={() => {\r\n              const roomId = 'AZE';\r\n              const room = { initiatorPeerId: getId(), roomId: roomId };\r\n              setRoom(roomId);\r\n              ws.emit('create', room);\r\n              console.log(\"peer \" + getId() + \" tried to create room \" + roomId)\r\n            }}>Create a room\r\n            </button>\r\n\r\n            <JoinRoomButton className=\"btn btn-secondary m-1\" room={'AZE'} join={() => {\r\n              ws.emit('join-request', { roomId: 'AZE', peerId: getId() });\r\n              console.log(\"peerID: \" + getId())\r\n              console.log(\"peer \" + + \" tried to join a room\")\r\n            }}><>Join a room</></JoinRoomButton>\r\n          </div>\r\n\r\n\r\n          <Peers>\r\n            {\r\n              peers => {\r\n                console.log(\"trying to add peer :)\")\r\n                return <div className=\"container row\">\r\n                  {peers.map((peer: User) => <div className=\"col-3\" key={peer.username}>\r\n                    {/* <button type=\"button\" className=\"btn btn-primary\">\r\n                      <PeerVideo className=\"center\" style={{ height: '70px' }} peer={peer} />\r\n                      <p className=\"text-center\">\r\n                        {peer.username}\r\n                      </p>\r\n                    </button> */}\r\n                    <Typography>Peer has been added</Typography>\r\n                  </div>\r\n                  )}\r\n                </div>\r\n              }\r\n            }\r\n          </Peers>\r\n\r\n        </div>\r\n      </Setup>\r\n      {/* <Setup\r\n        // Wrapper around OfferRequest event listener that provides processing callback for that request.\r\n        onOfferRequest={(processOfferRequest: (JoinRequest: JoinRequest) => void) => handleOfferRequest(processOfferRequest, ws)}\r\n\r\n        // Wrapper around OfferRequest event emitter that provides both JoinRequest and SignalingData objects.\r\n        emitOfferResponse={(joinRequest: JoinRequest, signalData: SignalData) => emitOfferResponse(joinRequest, signalData, ws)}\r\n\r\n        // Wrapper around JoinResponse event listener that provides processing callback for that response.\r\n        onJoinResponse={(processJoinResponse: (offer: SignalData, id: string, room: string, roomCreatorId: string) => void) => handleJoinResponse(processJoinResponse, ws)}\r\n\r\n        // Wrapper around JoinAck event emitter that provides SignalingData as well as room id, received peer id and self peer id.\r\n        emitJoinAck={(signalData: SignalData, room, recievedId, id) => emitJoinResponse(signalData, room, recievedId, id, ws)}\r\n\r\n        // Wrapper around clientOffer event listener that provides processing callback for that offer.\r\n        onClientOffer={(processClientOffer: (offer: ClientOffer, id: string, isRoomCreator: boolean, emitterId: string) => void) => handleClientOffer(processClientOffer, ws)}\r\n\r\n        // Wrapper around InitiatorOffers event emitter that provides list of offers, self id and room id.\r\n        emitInitiatorOffers={(offers, id, room) => emitInitiatorOffers(offers, id, room, ws)}\r\n\r\n        // Wrapper around leaving event listener that provides processing callback for that leaving peer.\r\n        onLeaving={(processLeaving: (id: string) => void) => handleLeaving(processLeaving, ws)}\r\n      >\r\n        <div className=\"App\">\r\n          <header className=\"App-header\">\r\n\r\n            <input type=\"text\" onChange={event => setModel(new User(event.target.value))} />\r\n\r\n            <p>\r\n              State : <State />\r\n            </p>\r\n\r\n            <button onClick={() => {\r\n              const roomId = 'myroom';\r\n              const room = { initiatorPeerId: getId(), roomId: roomId };\r\n              setRoom(roomId);\r\n              console.log(\"room id: \" + roomId);\r\n              console.log(\"initiater peer id: \" + getId());\r\n              ws.emit('create', room);\r\n              console.log(\"peer \" + getId() + \" tried to create room \" + roomId)\r\n            }}>Create a room\r\n            </button>\r\n\r\n            <button onClick={() => {\r\n              setRoom('myroom');\r\n              ws.emit('join-request', { roomId: 'myroom', peerId: getId() });  // room id should not be 'AZE'\r\n              console.log(\"peerID: \" + getId())\r\n              console.log(\"you tried to join a room\")\r\n            }}>Join a room\r\n            </button>\r\n\r\n            <button onClick={() => {\r\n              setRoom('myroom');\r\n              ws.emit('initiator-offers', { roomId: 'AZE', peerId: getId() });\r\n              console.log(\"peerID: \" + getId())\r\n              console.log(\"you tried to join a room\")\r\n            }}>Initiate a room\r\n            </button>\r\n\r\n            <JoinRoomButton room='42' join={() => 42} className=\"Henry\">\r\n              <Typography>Hello</Typography>\r\n            </JoinRoomButton>\r\n\r\n            <Peers>\r\n              {\r\n                peers => {\r\n                  return <ul>\r\n                    {Array.from<any>(peers).map((set: [string, User]) => <li\r\n                      key={set[1].username}>{set[1].username}</li>)}\r\n                  </ul>\r\n                }\r\n              }\r\n            </Peers>\r\n          </header>\r\n        </div>\r\n      </Setup> */}\r\n      {/* <div className=\"App\">\r\n      <Box padding={4}>\r\n        <Paper elevation={2}>\r\n          <Grid container alignItems={\"center\"} justifyContent={\"center\"} padding={2}>\r\n            <Grid item xs={6}>\r\n              <Typography>This is a fuckign website</Typography>\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n              <Typography>Where u can upload fuckign picutes</Typography>\r\n            </Grid>\r\n            <Grid item marginTop={4} xs={10}>\r\n              This could be a thing\r\n            </Grid>\r\n            <Grid item marginTop={4} xs={\"auto\"}>\r\n              <Button onClick={() => startClient()}> connect </Button>\r\n            </Grid>\r\n            {/* <Grid item marginTop={4} xs={\"auto\"}>\r\n              <Button onClick={()=> startServer()}> start </Button>\r\n            </Grid> */}\r\n      {/* <Grid>\r\n              <Typography>{showReceivedData()}</Typography>\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextField id=\"standard-basic\" label=\"Standard\" variant=\"standard\" />\r\n            </Grid>\r\n          </Grid>\r\n        </Paper>\r\n      </Box> */}\r\n      {/* <header className=\"App-header\"> */}\r\n      {/* <img src={logo} className=\"App-logo\" alt=\"logo\" />\r\n        <p>\r\n          Edit <code>src/App.tsx</code> and save to reload.\r\n        </p>\r\n        <a\r\n          className=\"App-link\"\r\n          href=\"https://reactjs.org\"\r\n          target=\"_blank\"\r\n          rel=\"noopener noreferrer\"\r\n        >\r\n          Learn React\r\n        </a> */}\r\n      {/* <Typography>Welcome</Typography> */}\r\n      {/* </header> */}\r\n      {/* </div> */}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}