{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Amali\\\\Desktop\\\\Building_the_IoT_w._P2P_and_Cloud_Computing\\\\IoTProject\\\\src\\\\App.tsx\";\n// import logo from './logo.svg';\nimport { Grid, Divider, Paper, Typography, IconButton, CardHeader, CardContent, Button } from '@mui/material';\nimport AddCircleOutlinedIcon from '@mui/icons-material/AddCircleOutlined';\nimport './App.css';\n// // import './first';\n// // import wrtc from 'wrtc';\n// import ReactDOM from 'react-dom/client';\n// import React, { useState } from 'react';\n// // import HookMqtt from 'MQTT_Hook';\n// // import paho from 'Paho'';\n// import { HookMqtt } from './components/Hook/index'\n// import { Connection } from './components/Hook/Connection';\n// import { Publisher } from './components/Hook/Publisher';\n// import SimplePeer, { SignalData, Instance } from 'simple-peer';\n// import { io, Socket } from 'socket.io-client';\n// import { ServerToClientEvents, ClientToServerEvents } from \"./SocketTypes\";\n// import {\n//   Setup,\n//   JoinRequest,\n//   ClientOffer,\n//   State,\n//   setModel,\n//   getId,\n//   setRoom,\n//   Peers,\n//   JoinRoomButton,\n//   PeerVideo,\n//   ReactSimplePeerModel\n// } from 'react-simple-peer';\n// import { urlToHttpOptions } from 'url';\nimport mqtt from 'mqtt';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  // const [connectStatus, setConnectStatus] = useState(\"\");\n  // const [client, setClient] = useState<MqttClient>(() => MqttClient);\n  // const mqttConnect = (host: string, mqttOption?: mqtt.IClientOptions) => {\n  //   setConnectStatus('Connecting');\n  //   const client: MqttClient = mqtt.connect(host, mqttOption);\n  //   setClient(() => client);\n  // }\n\n  const url = \"ws://diotp2p.mooo.com:8083\";\n  const options = {\n    port: 8083,\n    host: \"diotp2p.mooo.com\",\n    // clientId: \"peer1\",\n    protocol: 'mqtts',\n    username: \"RainbowDash\",\n    password: \"kw8x5vaTh2kcrSWN\",\n    rejectUnauthorized: false\n  };\n\n  // const clientConnectionOptions = {\n  //   keepalive: 100,\n  //   protocolId: 'MQTT',\n  //   protocolVersion: 4,\n  //   clean: true,\n  //   reconnectPeriod: 1000,\n  //   connectTimeout: 30 * 3000,\n  //   will: {\n  //     topic: 'WillMsg',\n  //     payload: 'Connection Closed abnormally..!',\n  //     qos: 0,\n  //     retain: false\n  //   },\n  //   rejectUnauthorized: false\n  // };\n\n  const client = mqtt.connect(url, options);\n  client.on('connect', function () {\n    console.log(\"Im funckign connetced !!!!!!!!!!!!!!!!\");\n  });\n  function subscribe(topic) {\n    client.subscribe(\"RainbowDash/\" + topic);\n    console.log(\"Subscribed to: \" + topic);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(Paper, {\n      elevation: 2,\n      sx: {\n        width: \"100%\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n        title: \"Rainbow Dash\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n        children: [/*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          padding: 1,\n          alignItems: \"center\",\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 11,\n            children: /*#__PURE__*/_jsxDEV(Typography, {\n              children: \"Subscribed to:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 1,\n            justifySelf: \"end\",\n            children: /*#__PURE__*/_jsxDEV(IconButton, {\n              size: \"small\",\n              onClick: () => 42,\n              children: /*#__PURE__*/_jsxDEV(AddCircleOutlinedIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 95,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            padding: 1,\n            children: [\"i\", /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 10,\n              children: /*#__PURE__*/_jsxDEV(Typography, {\n                children: \"Storskrald\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 102,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 2,\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                size: \"small\",\n                variant: \"contained\",\n                children: \"Upload\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 105,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 5\n  }, this);\n}\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Grid","Divider","Paper","Typography","IconButton","CardHeader","CardContent","Button","AddCircleOutlinedIcon","mqtt","App","url","options","port","host","protocol","username","password","rejectUnauthorized","client","connect","on","console","log","subscribe","topic","width"],"sources":["C:/Users/Amali/Desktop/Building_the_IoT_w._P2P_and_Cloud_Computing/IoTProject/src/App.tsx"],"sourcesContent":["// import logo from './logo.svg';\r\nimport { Grid, Divider, Paper, Typography, IconButton, TextField, CardHeader, CardContent, Button } from '@mui/material';\r\nimport AddCircleOutlinedIcon from '@mui/icons-material/AddCircleOutlined'; import './App.css';\r\n// // import './first';\r\n// // import wrtc from 'wrtc';\r\n// import ReactDOM from 'react-dom/client';\r\n// import React, { useState } from 'react';\r\n// // import HookMqtt from 'MQTT_Hook';\r\n// // import paho from 'Paho'';\r\n// import { HookMqtt } from './components/Hook/index'\r\n// import { Connection } from './components/Hook/Connection';\r\n// import { Publisher } from './components/Hook/Publisher';\r\n// import SimplePeer, { SignalData, Instance } from 'simple-peer';\r\n// import { io, Socket } from 'socket.io-client';\r\n// import { ServerToClientEvents, ClientToServerEvents } from \"./SocketTypes\";\r\n// import {\r\n//   Setup,\r\n//   JoinRequest,\r\n//   ClientOffer,\r\n//   State,\r\n//   setModel,\r\n//   getId,\r\n//   setRoom,\r\n//   Peers,\r\n//   JoinRoomButton,\r\n//   PeerVideo,\r\n//   ReactSimplePeerModel\r\n// } from 'react-simple-peer';\r\n// import { urlToHttpOptions } from 'url';\r\nimport mqtt, { IClientOptions } from 'mqtt';\r\n\r\n\r\nfunction App(): JSX.Element {\r\n\r\n  // const [connectStatus, setConnectStatus] = useState(\"\");\r\n  // const [client, setClient] = useState<MqttClient>(() => MqttClient);\r\n  // const mqttConnect = (host: string, mqttOption?: mqtt.IClientOptions) => {\r\n  //   setConnectStatus('Connecting');\r\n  //   const client: MqttClient = mqtt.connect(host, mqttOption);\r\n  //   setClient(() => client);\r\n  // }\r\n\r\n  const url = \"ws://diotp2p.mooo.com:8083\"\r\n  const options: IClientOptions = {\r\n    port: 8083,\r\n    host: \"diotp2p.mooo.com\",\r\n    // clientId: \"peer1\",\r\n    protocol: 'mqtts',\r\n    username: \"RainbowDash\",\r\n    password: \"kw8x5vaTh2kcrSWN\",\r\n    rejectUnauthorized: false\r\n  }\r\n\r\n  // const clientConnectionOptions = {\r\n  //   keepalive: 100,\r\n  //   protocolId: 'MQTT',\r\n  //   protocolVersion: 4,\r\n  //   clean: true,\r\n  //   reconnectPeriod: 1000,\r\n  //   connectTimeout: 30 * 3000,\r\n  //   will: {\r\n  //     topic: 'WillMsg',\r\n  //     payload: 'Connection Closed abnormally..!',\r\n  //     qos: 0,\r\n  //     retain: false\r\n  //   },\r\n  //   rejectUnauthorized: false\r\n  // };\r\n\r\n  const client = mqtt.connect(url, options)\r\n\r\n  client.on('connect', function () {\r\n    console.log(\"Im funckign connetced !!!!!!!!!!!!!!!!\")\r\n  });\r\n\r\n  function subscribe(topic: string) {\r\n    client.subscribe(\"RainbowDash/\" + topic);\r\n    console.log(\"Subscribed to: \" + topic);\r\n  }\r\n\r\n  return (\r\n    <div className='App'>\r\n      <Paper elevation={2} sx={{ width: \"100%\" }}>\r\n        <CardHeader title={\"Rainbow Dash\"}></CardHeader>\r\n        <CardContent>\r\n          <Divider />\r\n          <Grid container padding={1} alignItems='center'>\r\n            <Grid item xs={11}>\r\n              <Typography>Subscribed to:</Typography>\r\n              {/* <TextField helperText=\"topic\" placeholder=\"topic\" size='small'>Topic</TextField> */}\r\n              {/* Whateves entered into the textfield should be subscribed to */}\r\n            </Grid>\r\n            <Grid item xs={1} justifySelf=\"end\">\r\n              <IconButton size='small' onClick={() => 42}>\r\n                <AddCircleOutlinedIcon />\r\n              </IconButton>\r\n            </Grid>\r\n            <></>\r\n            <Divider />\r\n            <Grid container padding={1}>i\r\n              <Grid item xs={10}>\r\n                <Typography>Storskrald</Typography>\r\n              </Grid>\r\n              <Grid item xs={2}>\r\n                <Button size='small' variant=\"contained\">\r\n                  Upload\r\n                </Button>\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n        </CardContent>\r\n      </Paper>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}