{"ast":null,"code":"import { __values } from \"tslib\";\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\nimport { arrRemove } from '../util/arrRemove';\nexport function bufferCount(bufferSize, startBufferEvery) {\n  if (startBufferEvery === void 0) {\n    startBufferEvery = null;\n  }\n  startBufferEvery = startBufferEvery !== null && startBufferEvery !== void 0 ? startBufferEvery : bufferSize;\n  return operate(function (source, subscriber) {\n    var buffers = [];\n    var count = 0;\n    source.subscribe(createOperatorSubscriber(subscriber, function (value) {\n      var e_1, _a, e_2, _b;\n      var toEmit = null;\n      if (count++ % startBufferEvery === 0) {\n        buffers.push([]);\n      }\n      try {\n        for (var buffers_1 = __values(buffers), buffers_1_1 = buffers_1.next(); !buffers_1_1.done; buffers_1_1 = buffers_1.next()) {\n          var buffer = buffers_1_1.value;\n          buffer.push(value);\n          if (bufferSize <= buffer.length) {\n            toEmit = toEmit !== null && toEmit !== void 0 ? toEmit : [];\n            toEmit.push(buffer);\n          }\n        }\n      } catch (e_1_1) {\n        e_1 = {\n          error: e_1_1\n        };\n      } finally {\n        try {\n          if (buffers_1_1 && !buffers_1_1.done && (_a = buffers_1.return)) _a.call(buffers_1);\n        } finally {\n          if (e_1) throw e_1.error;\n        }\n      }\n      if (toEmit) {\n        try {\n          for (var toEmit_1 = __values(toEmit), toEmit_1_1 = toEmit_1.next(); !toEmit_1_1.done; toEmit_1_1 = toEmit_1.next()) {\n            var buffer = toEmit_1_1.value;\n            arrRemove(buffers, buffer);\n            subscriber.next(buffer);\n          }\n        } catch (e_2_1) {\n          e_2 = {\n            error: e_2_1\n          };\n        } finally {\n          try {\n            if (toEmit_1_1 && !toEmit_1_1.done && (_b = toEmit_1.return)) _b.call(toEmit_1);\n          } finally {\n            if (e_2) throw e_2.error;\n          }\n        }\n      }\n    }, function () {\n      var e_3, _a;\n      try {\n        for (var buffers_2 = __values(buffers), buffers_2_1 = buffers_2.next(); !buffers_2_1.done; buffers_2_1 = buffers_2.next()) {\n          var buffer = buffers_2_1.value;\n          subscriber.next(buffer);\n        }\n      } catch (e_3_1) {\n        e_3 = {\n          error: e_3_1\n        };\n      } finally {\n        try {\n          if (buffers_2_1 && !buffers_2_1.done && (_a = buffers_2.return)) _a.call(buffers_2);\n        } finally {\n          if (e_3) throw e_3.error;\n        }\n      }\n      subscriber.complete();\n    }, undefined, function () {\n      buffers = null;\n    }));\n  });\n}","map":{"version":3,"mappings":";AACA,SAASA,OAAO,QAAQ,cAAc;AACtC,SAASC,wBAAwB,QAAQ,sBAAsB;AAC/D,SAASC,SAAS,QAAQ,mBAAmB;AAqD7C,OAAM,SAAUC,WAAW,CAAIC,UAAkB,EAAEC,gBAAsC;EAAtC;IAAAA,uBAAsC;EAAA;EAGvFA,gBAAgB,GAAGA,gBAAgB,aAAhBA,gBAAgB,cAAhBA,gBAAgB,GAAID,UAAU;EAEjD,OAAOJ,OAAO,CAAC,UAACM,MAAM,EAAEC,UAAU;IAChC,IAAIC,OAAO,GAAU,EAAE;IACvB,IAAIC,KAAK,GAAG,CAAC;IAEbH,MAAM,CAACI,SAAS,CACdT,wBAAwB,CACtBM,UAAU,EACV,UAACI,KAAK;;MACJ,IAAIC,MAAM,GAAiB,IAAI;MAK/B,IAAIH,KAAK,EAAE,GAAGJ,gBAAiB,KAAK,CAAC,EAAE;QACrCG,OAAO,CAACK,IAAI,CAAC,EAAE,CAAC;;;QAIlB,KAAqB,gCAAO,sFAAE;UAAzB,IAAMC,MAAM;UACfA,MAAM,CAACD,IAAI,CAACF,KAAK,CAAC;UAMlB,IAAIP,UAAU,IAAIU,MAAM,CAACC,MAAM,EAAE;YAC/BH,MAAM,GAAGA,MAAM,aAANA,MAAM,cAANA,MAAM,GAAI,EAAE;YACrBA,MAAM,CAACC,IAAI,CAACC,MAAM,CAAC;;;;;;;;;;;;;;MAIvB,IAAIF,MAAM,EAAE;;UAIV,KAAqB,8BAAM,iFAAE;YAAxB,IAAME,MAAM;YACfZ,SAAS,CAACM,OAAO,EAAEM,MAAM,CAAC;YAC1BP,UAAU,CAACS,IAAI,CAACF,MAAM,CAAC;;;;;;;;;;;;;;IAG7B,CAAC,EACD;;;QAGE,KAAqB,gCAAO,sFAAE;UAAzB,IAAMA,MAAM;UACfP,UAAU,CAACS,IAAI,CAACF,MAAM,CAAC;;;;;;;;;;;;;MAEzBP,UAAU,CAACU,QAAQ,EAAE;IACvB,CAAC,EAEDC,SAAS,EACT;MAEEV,OAAO,GAAG,IAAK;IACjB,CAAC,CACF,CACF;EACH,CAAC,CAAC;AACJ","names":["operate","createOperatorSubscriber","arrRemove","bufferCount","bufferSize","startBufferEvery","source","subscriber","buffers","count","subscribe","value","toEmit","push","buffer","length","next","complete","undefined"],"sources":["../../../../src/internal/operators/bufferCount.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}