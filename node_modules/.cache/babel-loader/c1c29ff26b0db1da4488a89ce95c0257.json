{"ast":null,"code":"var isArray = Array.isArray;\nexport function argsOrArgArray(args) {\n  return args.length === 1 && isArray(args[0]) ? args[0] : args;\n}","map":{"version":3,"mappings":"AAAQ,WAAO,GAAKA,KAAK,QAAV;AAMf,OAAM,SAAUC,cAAc,CAAIC,IAAiB;EACjD,OAAOA,IAAI,CAACC,MAAM,KAAK,CAAC,IAAIC,OAAO,CAACF,IAAI,CAAC,CAAC,CAAC,CAAC,GAAGA,IAAI,CAAC,CAAC,CAAC,GAAIA,IAAY;AACxE","names":["Array","argsOrArgArray","args","length","isArray"],"sources":["C:\\Users\\Amali\\Desktop\\Building_the_IoT_w._P2P_and_Cloud_Computing\\IoTProject\\node_modules\\rxjs\\src\\internal\\util\\argsOrArgArray.ts"],"sourcesContent":["const { isArray } = Array;\n\n/**\n * Used in operators and functions that accept either a list of arguments, or an array of arguments\n * as a single argument.\n */\nexport function argsOrArgArray<T>(args: (T | T[])[]): T[] {\n  return args.length === 1 && isArray(args[0]) ? args[0] : (args as T[]);\n}\n"]},"metadata":{},"sourceType":"module"}