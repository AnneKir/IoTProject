{"ast":null,"code":"import { map } from './map';\nexport function mapTo(value) {\n  return map(function () {\n    return value;\n  });\n}","map":{"version":3,"mappings":"AACA,SAASA,GAAG,QAAQ,OAAO;AA4C3B,OAAM,SAAUC,KAAK,CAAIC,KAAQ;EAC/B,OAAOF,GAAG,CAAC;IAAM,YAAK;EAAL,CAAK,CAAC;AACzB","names":["map","mapTo","value"],"sources":["C:\\Users\\Amali\\Desktop\\Building_the_IoT_w._P2P_and_Cloud_Computing\\IoTProject\\node_modules\\rxjs\\src\\internal\\operators\\mapTo.ts"],"sourcesContent":["import { OperatorFunction } from '../types';\r\nimport { map } from './map';\r\n\r\n/** @deprecated To be removed in v9. Use {@link map} instead: `map(() => value)`. */\r\nexport function mapTo<R>(value: R): OperatorFunction<unknown, R>;\r\n/**\r\n * @deprecated Do not specify explicit type parameters. Signatures with type parameters\r\n * that cannot be inferred will be removed in v8. `mapTo` itself will be removed in v9,\r\n * use {@link map} instead: `map(() => value)`.\r\n * */\r\nexport function mapTo<T, R>(value: R): OperatorFunction<T, R>;\r\n\r\n/**\r\n * Emits the given constant value on the output Observable every time the source\r\n * Observable emits a value.\r\n *\r\n * <span class=\"informal\">Like {@link map}, but it maps every source value to\r\n * the same output value every time.</span>\r\n *\r\n * ![](mapTo.png)\r\n *\r\n * Takes a constant `value` as argument, and emits that whenever the source\r\n * Observable emits a value. In other words, ignores the actual source value,\r\n * and simply uses the emission moment to know when to emit the given `value`.\r\n *\r\n * ## Example\r\n *\r\n * Map every click to the string `'Hi'`\r\n *\r\n * ```ts\r\n * import { fromEvent, mapTo } from 'rxjs';\r\n *\r\n * const clicks = fromEvent(document, 'click');\r\n * const greetings = clicks.pipe(mapTo('Hi'));\r\n *\r\n * greetings.subscribe(x => console.log(x));\r\n * ```\r\n *\r\n * @see {@link map}\r\n *\r\n * @param value The value to map each source value to.\r\n * @return A function that returns an Observable that emits the given `value`\r\n * every time the source Observable emits.\r\n * @deprecated To be removed in v9. Use {@link map} instead: `map(() => value)`.\r\n */\r\nexport function mapTo<R>(value: R): OperatorFunction<unknown, R> {\r\n  return map(() => value);\r\n}\r\n"]},"metadata":{},"sourceType":"module"}