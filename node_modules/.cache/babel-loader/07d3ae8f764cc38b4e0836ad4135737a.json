{"ast":null,"code":"var _classCallCheck = require(\"C:/Users/Amali/Desktop/Building_the_IoT_w._P2P_and_Cloud_Computing/IoTProject/node_modules/@babel/runtime/helpers/classCallCheck.js\").default;\nvar _createClass = require(\"C:/Users/Amali/Desktop/Building_the_IoT_w._P2P_and_Cloud_Computing/IoTProject/node_modules/@babel/runtime/helpers/createClass.js\").default;\nvar SocketIOClientWrapper = require('./socket-io-client-wrapper.js');\nvar SimplePeerWrapper = /*#__PURE__*/function () {\n  \"use strict\";\n\n  function SimplePeerWrapper(options) {\n    _classCallCheck(this, SimplePeerWrapper);\n    this.socketClient = new SocketIOClientWrapper(options);\n    this.peerClient = this.socketClient.peerClient;\n  }\n  _createClass(SimplePeerWrapper, [{\n    key: \"connect\",\n    value: function connect() {\n      this.peerClient.init();\n    }\n  }, {\n    key: \"isConnectionStarted\",\n    value: function isConnectionStarted() {\n      return this.peerClient.isPeerStarted();\n    }\n  }, {\n    key: \"send\",\n    value: function send(data) {\n      this.peerClient.sendData(data);\n    }\n  }, {\n    key: \"on\",\n    value: function on(event, callback) {\n      this.peerClient.setEventCallback(event, callback);\n    }\n  }, {\n    key: \"close\",\n    value: function close() {\n      this.peerClient.terminateSession();\n    }\n  }]);\n  return SimplePeerWrapper;\n}();\nmodule.exports = SimplePeerWrapper;","map":{"version":3,"names":["SocketIOClientWrapper","require","SimplePeerWrapper","options","socketClient","peerClient","init","isPeerStarted","data","sendData","event","callback","setEventCallback","terminateSession","module","exports"],"sources":["C:/Users/Amali/Desktop/Building_the_IoT_w._P2P_and_Cloud_Computing/IoTProject/node_modules/simple-peer-wrapper/src/simple-peer-wrapper.js"],"sourcesContent":["const SocketIOClientWrapper = require('./socket-io-client-wrapper.js');\n\nclass SimplePeerWrapper {\n  constructor(options) {\n    this.socketClient = new SocketIOClientWrapper(options);\n    this.peerClient = this.socketClient.peerClient;\n  }\n\n  connect() {\n    this.peerClient.init();\n  }\n\n  isConnectionStarted() {\n    return this.peerClient.isPeerStarted();\n  }\n\n  send(data) {\n    this.peerClient.sendData(data);\n  }\n\n  on(event, callback) {\n    this.peerClient.setEventCallback(event, callback);\n  }\n\n  close() {\n    this.peerClient.terminateSession();\n  }\n}\n\nmodule.exports = SimplePeerWrapper;\n"],"mappings":";;AAAA,IAAMA,qBAAqB,GAAGC,OAAO,CAAC,+BAA+B,CAAC;AAAC,IAEjEC,iBAAiB;EAAA;;EACrB,2BAAYC,OAAO,EAAE;IAAA;IACnB,IAAI,CAACC,YAAY,GAAG,IAAIJ,qBAAqB,CAACG,OAAO,CAAC;IACtD,IAAI,CAACE,UAAU,GAAG,IAAI,CAACD,YAAY,CAACC,UAAU;EAChD;EAAC;IAAA;IAAA,OAED,mBAAU;MACR,IAAI,CAACA,UAAU,CAACC,IAAI,EAAE;IACxB;EAAC;IAAA;IAAA,OAED,+BAAsB;MACpB,OAAO,IAAI,CAACD,UAAU,CAACE,aAAa,EAAE;IACxC;EAAC;IAAA;IAAA,OAED,cAAKC,IAAI,EAAE;MACT,IAAI,CAACH,UAAU,CAACI,QAAQ,CAACD,IAAI,CAAC;IAChC;EAAC;IAAA;IAAA,OAED,YAAGE,KAAK,EAAEC,QAAQ,EAAE;MAClB,IAAI,CAACN,UAAU,CAACO,gBAAgB,CAACF,KAAK,EAAEC,QAAQ,CAAC;IACnD;EAAC;IAAA;IAAA,OAED,iBAAQ;MACN,IAAI,CAACN,UAAU,CAACQ,gBAAgB,EAAE;IACpC;EAAC;EAAA;AAAA;AAGHC,MAAM,CAACC,OAAO,GAAGb,iBAAiB"},"metadata":{},"sourceType":"script"}