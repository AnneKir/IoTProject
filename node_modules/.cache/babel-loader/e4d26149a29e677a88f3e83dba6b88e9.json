{"ast":null,"code":"import { createErrorClass } from './createErrorClass';\nexport var NotFoundError = createErrorClass(function (_super) {\n  return function NotFoundErrorImpl(message) {\n    _super(this);\n    this.name = 'NotFoundError';\n    this.message = message;\n  };\n});","map":{"version":3,"mappings":"AAAA,SAASA,gBAAgB,QAAQ,oBAAoB;AAoBrD,OAAO,IAAMC,aAAa,GAAsBD,gBAAgB,CAC9D,UAACE,MAAM;EACL,gBAASC,iBAAiB,CAAYC,OAAe;IACnDF,MAAM,CAAC,IAAI,CAAC;IACZ,IAAI,CAACG,IAAI,GAAG,eAAe;IAC3B,IAAI,CAACD,OAAO,GAAGA,OAAO;EACxB,CAAC;AAJD,CAIC,CACJ","names":["createErrorClass","NotFoundError","_super","NotFoundErrorImpl","message","name"],"sources":["C:\\Users\\Amali\\Desktop\\Building_the_IoT_w._P2P_and_Cloud_Computing\\IoTProject\\node_modules\\rxjs\\src\\internal\\util\\NotFoundError.ts"],"sourcesContent":["import { createErrorClass } from './createErrorClass';\r\n\r\nexport interface NotFoundError extends Error {}\r\n\r\nexport interface NotFoundErrorCtor {\r\n  /**\r\n   * @deprecated Internal implementation detail. Do not construct error instances.\r\n   * Cannot be tagged as internal: https://github.com/ReactiveX/rxjs/issues/6269\r\n   */\r\n  new (message: string): NotFoundError;\r\n}\r\n\r\n/**\r\n * An error thrown when a value or values are missing from an\r\n * observable sequence.\r\n *\r\n * @see {@link operators/single}\r\n *\r\n * @class NotFoundError\r\n */\r\nexport const NotFoundError: NotFoundErrorCtor = createErrorClass(\r\n  (_super) =>\r\n    function NotFoundErrorImpl(this: any, message: string) {\r\n      _super(this);\r\n      this.name = 'NotFoundError';\r\n      this.message = message;\r\n    }\r\n);\r\n"]},"metadata":{},"sourceType":"module"}