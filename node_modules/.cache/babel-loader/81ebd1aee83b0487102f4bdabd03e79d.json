{"ast":null,"code":"'use strict';\n\nvar BN = require('bn.js');\nvar utils = require('../utils');\nvar assert = utils.assert;\nvar cachedProperty = utils.cachedProperty;\nvar parseBytes = utils.parseBytes;\n\n/**\r\n* @param {EDDSA} eddsa - eddsa instance\r\n* @param {Array<Bytes>|Object} sig -\r\n* @param {Array<Bytes>|Point} [sig.R] - R point as Point or bytes\r\n* @param {Array<Bytes>|bn} [sig.S] - S scalar as bn or bytes\r\n* @param {Array<Bytes>} [sig.Rencoded] - R point encoded\r\n* @param {Array<Bytes>} [sig.Sencoded] - S scalar encoded\r\n*/\nfunction Signature(eddsa, sig) {\n  this.eddsa = eddsa;\n  if (typeof sig !== 'object') sig = parseBytes(sig);\n  if (Array.isArray(sig)) {\n    sig = {\n      R: sig.slice(0, eddsa.encodingLength),\n      S: sig.slice(eddsa.encodingLength)\n    };\n  }\n  assert(sig.R && sig.S, 'Signature without R or S');\n  if (eddsa.isPoint(sig.R)) this._R = sig.R;\n  if (sig.S instanceof BN) this._S = sig.S;\n  this._Rencoded = Array.isArray(sig.R) ? sig.R : sig.Rencoded;\n  this._Sencoded = Array.isArray(sig.S) ? sig.S : sig.Sencoded;\n}\ncachedProperty(Signature, 'S', function S() {\n  return this.eddsa.decodeInt(this.Sencoded());\n});\ncachedProperty(Signature, 'R', function R() {\n  return this.eddsa.decodePoint(this.Rencoded());\n});\ncachedProperty(Signature, 'Rencoded', function Rencoded() {\n  return this.eddsa.encodePoint(this.R());\n});\ncachedProperty(Signature, 'Sencoded', function Sencoded() {\n  return this.eddsa.encodeInt(this.S());\n});\nSignature.prototype.toBytes = function toBytes() {\n  return this.Rencoded().concat(this.Sencoded());\n};\nSignature.prototype.toHex = function toHex() {\n  return utils.encode(this.toBytes(), 'hex').toUpperCase();\n};\nmodule.exports = Signature;","map":{"version":3,"names":["BN","require","utils","assert","cachedProperty","parseBytes","Signature","eddsa","sig","Array","isArray","R","slice","encodingLength","S","isPoint","_R","_S","_Rencoded","Rencoded","_Sencoded","Sencoded","decodeInt","decodePoint","encodePoint","encodeInt","prototype","toBytes","concat","toHex","encode","toUpperCase","module","exports"],"sources":["C:/Users/Amali/Desktop/Building_the_IoT_w._P2P_and_Cloud_Computing/IoTProject/node_modules/elliptic/lib/elliptic/eddsa/signature.js"],"sourcesContent":["'use strict';\r\n\r\nvar BN = require('bn.js');\r\nvar utils = require('../utils');\r\nvar assert = utils.assert;\r\nvar cachedProperty = utils.cachedProperty;\r\nvar parseBytes = utils.parseBytes;\r\n\r\n/**\r\n* @param {EDDSA} eddsa - eddsa instance\r\n* @param {Array<Bytes>|Object} sig -\r\n* @param {Array<Bytes>|Point} [sig.R] - R point as Point or bytes\r\n* @param {Array<Bytes>|bn} [sig.S] - S scalar as bn or bytes\r\n* @param {Array<Bytes>} [sig.Rencoded] - R point encoded\r\n* @param {Array<Bytes>} [sig.Sencoded] - S scalar encoded\r\n*/\r\nfunction Signature(eddsa, sig) {\r\n  this.eddsa = eddsa;\r\n\r\n  if (typeof sig !== 'object')\r\n    sig = parseBytes(sig);\r\n\r\n  if (Array.isArray(sig)) {\r\n    sig = {\r\n      R: sig.slice(0, eddsa.encodingLength),\r\n      S: sig.slice(eddsa.encodingLength),\r\n    };\r\n  }\r\n\r\n  assert(sig.R && sig.S, 'Signature without R or S');\r\n\r\n  if (eddsa.isPoint(sig.R))\r\n    this._R = sig.R;\r\n  if (sig.S instanceof BN)\r\n    this._S = sig.S;\r\n\r\n  this._Rencoded = Array.isArray(sig.R) ? sig.R : sig.Rencoded;\r\n  this._Sencoded = Array.isArray(sig.S) ? sig.S : sig.Sencoded;\r\n}\r\n\r\ncachedProperty(Signature, 'S', function S() {\r\n  return this.eddsa.decodeInt(this.Sencoded());\r\n});\r\n\r\ncachedProperty(Signature, 'R', function R() {\r\n  return this.eddsa.decodePoint(this.Rencoded());\r\n});\r\n\r\ncachedProperty(Signature, 'Rencoded', function Rencoded() {\r\n  return this.eddsa.encodePoint(this.R());\r\n});\r\n\r\ncachedProperty(Signature, 'Sencoded', function Sencoded() {\r\n  return this.eddsa.encodeInt(this.S());\r\n});\r\n\r\nSignature.prototype.toBytes = function toBytes() {\r\n  return this.Rencoded().concat(this.Sencoded());\r\n};\r\n\r\nSignature.prototype.toHex = function toHex() {\r\n  return utils.encode(this.toBytes(), 'hex').toUpperCase();\r\n};\r\n\r\nmodule.exports = Signature;\r\n"],"mappings":"AAAA,YAAY;;AAEZ,IAAIA,EAAE,GAAGC,OAAO,CAAC,OAAO,CAAC;AACzB,IAAIC,KAAK,GAAGD,OAAO,CAAC,UAAU,CAAC;AAC/B,IAAIE,MAAM,GAAGD,KAAK,CAACC,MAAM;AACzB,IAAIC,cAAc,GAAGF,KAAK,CAACE,cAAc;AACzC,IAAIC,UAAU,GAAGH,KAAK,CAACG,UAAU;;AAEjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASC,SAAS,CAACC,KAAK,EAAEC,GAAG,EAAE;EAC7B,IAAI,CAACD,KAAK,GAAGA,KAAK;EAElB,IAAI,OAAOC,GAAG,KAAK,QAAQ,EACzBA,GAAG,GAAGH,UAAU,CAACG,GAAG,CAAC;EAEvB,IAAIC,KAAK,CAACC,OAAO,CAACF,GAAG,CAAC,EAAE;IACtBA,GAAG,GAAG;MACJG,CAAC,EAAEH,GAAG,CAACI,KAAK,CAAC,CAAC,EAAEL,KAAK,CAACM,cAAc,CAAC;MACrCC,CAAC,EAAEN,GAAG,CAACI,KAAK,CAACL,KAAK,CAACM,cAAc;IACnC,CAAC;EACH;EAEAV,MAAM,CAACK,GAAG,CAACG,CAAC,IAAIH,GAAG,CAACM,CAAC,EAAE,0BAA0B,CAAC;EAElD,IAAIP,KAAK,CAACQ,OAAO,CAACP,GAAG,CAACG,CAAC,CAAC,EACtB,IAAI,CAACK,EAAE,GAAGR,GAAG,CAACG,CAAC;EACjB,IAAIH,GAAG,CAACM,CAAC,YAAYd,EAAE,EACrB,IAAI,CAACiB,EAAE,GAAGT,GAAG,CAACM,CAAC;EAEjB,IAAI,CAACI,SAAS,GAAGT,KAAK,CAACC,OAAO,CAACF,GAAG,CAACG,CAAC,CAAC,GAAGH,GAAG,CAACG,CAAC,GAAGH,GAAG,CAACW,QAAQ;EAC5D,IAAI,CAACC,SAAS,GAAGX,KAAK,CAACC,OAAO,CAACF,GAAG,CAACM,CAAC,CAAC,GAAGN,GAAG,CAACM,CAAC,GAAGN,GAAG,CAACa,QAAQ;AAC9D;AAEAjB,cAAc,CAACE,SAAS,EAAE,GAAG,EAAE,SAASQ,CAAC,GAAG;EAC1C,OAAO,IAAI,CAACP,KAAK,CAACe,SAAS,CAAC,IAAI,CAACD,QAAQ,EAAE,CAAC;AAC9C,CAAC,CAAC;AAEFjB,cAAc,CAACE,SAAS,EAAE,GAAG,EAAE,SAASK,CAAC,GAAG;EAC1C,OAAO,IAAI,CAACJ,KAAK,CAACgB,WAAW,CAAC,IAAI,CAACJ,QAAQ,EAAE,CAAC;AAChD,CAAC,CAAC;AAEFf,cAAc,CAACE,SAAS,EAAE,UAAU,EAAE,SAASa,QAAQ,GAAG;EACxD,OAAO,IAAI,CAACZ,KAAK,CAACiB,WAAW,CAAC,IAAI,CAACb,CAAC,EAAE,CAAC;AACzC,CAAC,CAAC;AAEFP,cAAc,CAACE,SAAS,EAAE,UAAU,EAAE,SAASe,QAAQ,GAAG;EACxD,OAAO,IAAI,CAACd,KAAK,CAACkB,SAAS,CAAC,IAAI,CAACX,CAAC,EAAE,CAAC;AACvC,CAAC,CAAC;AAEFR,SAAS,CAACoB,SAAS,CAACC,OAAO,GAAG,SAASA,OAAO,GAAG;EAC/C,OAAO,IAAI,CAACR,QAAQ,EAAE,CAACS,MAAM,CAAC,IAAI,CAACP,QAAQ,EAAE,CAAC;AAChD,CAAC;AAEDf,SAAS,CAACoB,SAAS,CAACG,KAAK,GAAG,SAASA,KAAK,GAAG;EAC3C,OAAO3B,KAAK,CAAC4B,MAAM,CAAC,IAAI,CAACH,OAAO,EAAE,EAAE,KAAK,CAAC,CAACI,WAAW,EAAE;AAC1D,CAAC;AAEDC,MAAM,CAACC,OAAO,GAAG3B,SAAS"},"metadata":{},"sourceType":"script"}