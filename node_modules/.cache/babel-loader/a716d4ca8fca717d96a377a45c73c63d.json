{"ast":null,"code":"var Buffer = require('safe-buffer').Buffer;\n\n// prototype class for hash functions\nfunction Hash(blockSize, finalSize) {\n  this._block = Buffer.alloc(blockSize);\n  this._finalSize = finalSize;\n  this._blockSize = blockSize;\n  this._len = 0;\n}\nHash.prototype.update = function (data, enc) {\n  if (typeof data === 'string') {\n    enc = enc || 'utf8';\n    data = Buffer.from(data, enc);\n  }\n  var block = this._block;\n  var blockSize = this._blockSize;\n  var length = data.length;\n  var accum = this._len;\n  for (var offset = 0; offset < length;) {\n    var assigned = accum % blockSize;\n    var remainder = Math.min(length - offset, blockSize - assigned);\n    for (var i = 0; i < remainder; i++) {\n      block[assigned + i] = data[offset + i];\n    }\n    accum += remainder;\n    offset += remainder;\n    if (accum % blockSize === 0) {\n      this._update(block);\n    }\n  }\n  this._len += length;\n  return this;\n};\nHash.prototype.digest = function (enc) {\n  var rem = this._len % this._blockSize;\n  this._block[rem] = 0x80;\n\n  // zero (rem + 1) trailing bits, where (rem + 1) is the smallest\n  // non-negative solution to the equation (length + 1 + (rem + 1)) === finalSize mod blockSize\n  this._block.fill(0, rem + 1);\n  if (rem >= this._finalSize) {\n    this._update(this._block);\n    this._block.fill(0);\n  }\n  var bits = this._len * 8;\n\n  // uint32\n  if (bits <= 0xffffffff) {\n    this._block.writeUInt32BE(bits, this._blockSize - 4);\n\n    // uint64\n  } else {\n    var lowBits = (bits & 0xffffffff) >>> 0;\n    var highBits = (bits - lowBits) / 0x100000000;\n    this._block.writeUInt32BE(highBits, this._blockSize - 8);\n    this._block.writeUInt32BE(lowBits, this._blockSize - 4);\n  }\n  this._update(this._block);\n  var hash = this._hash();\n  return enc ? hash.toString(enc) : hash;\n};\nHash.prototype._update = function () {\n  throw new Error('_update must be implemented by subclass');\n};\nmodule.exports = Hash;","map":{"version":3,"names":["Buffer","require","Hash","blockSize","finalSize","_block","alloc","_finalSize","_blockSize","_len","prototype","update","data","enc","from","block","length","accum","offset","assigned","remainder","Math","min","i","_update","digest","rem","fill","bits","writeUInt32BE","lowBits","highBits","hash","_hash","toString","Error","module","exports"],"sources":["C:/Users/Amali/Desktop/Building_the_IoT_w._P2P_and_Cloud_Computing/IoTProject/node_modules/sha.js/hash.js"],"sourcesContent":["var Buffer = require('safe-buffer').Buffer\r\n\r\n// prototype class for hash functions\r\nfunction Hash (blockSize, finalSize) {\r\n  this._block = Buffer.alloc(blockSize)\r\n  this._finalSize = finalSize\r\n  this._blockSize = blockSize\r\n  this._len = 0\r\n}\r\n\r\nHash.prototype.update = function (data, enc) {\r\n  if (typeof data === 'string') {\r\n    enc = enc || 'utf8'\r\n    data = Buffer.from(data, enc)\r\n  }\r\n\r\n  var block = this._block\r\n  var blockSize = this._blockSize\r\n  var length = data.length\r\n  var accum = this._len\r\n\r\n  for (var offset = 0; offset < length;) {\r\n    var assigned = accum % blockSize\r\n    var remainder = Math.min(length - offset, blockSize - assigned)\r\n\r\n    for (var i = 0; i < remainder; i++) {\r\n      block[assigned + i] = data[offset + i]\r\n    }\r\n\r\n    accum += remainder\r\n    offset += remainder\r\n\r\n    if ((accum % blockSize) === 0) {\r\n      this._update(block)\r\n    }\r\n  }\r\n\r\n  this._len += length\r\n  return this\r\n}\r\n\r\nHash.prototype.digest = function (enc) {\r\n  var rem = this._len % this._blockSize\r\n\r\n  this._block[rem] = 0x80\r\n\r\n  // zero (rem + 1) trailing bits, where (rem + 1) is the smallest\r\n  // non-negative solution to the equation (length + 1 + (rem + 1)) === finalSize mod blockSize\r\n  this._block.fill(0, rem + 1)\r\n\r\n  if (rem >= this._finalSize) {\r\n    this._update(this._block)\r\n    this._block.fill(0)\r\n  }\r\n\r\n  var bits = this._len * 8\r\n\r\n  // uint32\r\n  if (bits <= 0xffffffff) {\r\n    this._block.writeUInt32BE(bits, this._blockSize - 4)\r\n\r\n  // uint64\r\n  } else {\r\n    var lowBits = (bits & 0xffffffff) >>> 0\r\n    var highBits = (bits - lowBits) / 0x100000000\r\n\r\n    this._block.writeUInt32BE(highBits, this._blockSize - 8)\r\n    this._block.writeUInt32BE(lowBits, this._blockSize - 4)\r\n  }\r\n\r\n  this._update(this._block)\r\n  var hash = this._hash()\r\n\r\n  return enc ? hash.toString(enc) : hash\r\n}\r\n\r\nHash.prototype._update = function () {\r\n  throw new Error('_update must be implemented by subclass')\r\n}\r\n\r\nmodule.exports = Hash\r\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}