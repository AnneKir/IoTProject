{"ast":null,"code":"import { EmptyError } from '../util/EmptyError';\nimport { filter } from './filter';\nimport { take } from './take';\nimport { defaultIfEmpty } from './defaultIfEmpty';\nimport { throwIfEmpty } from './throwIfEmpty';\nimport { identity } from '../util/identity';\nexport function first(predicate, defaultValue) {\n  var hasDefaultValue = arguments.length >= 2;\n  return function (source) {\n    return source.pipe(predicate ? filter(function (v, i) {\n      return predicate(v, i, source);\n    }) : identity, take(1), hasDefaultValue ? defaultIfEmpty(defaultValue) : throwIfEmpty(function () {\n      return new EmptyError();\n    }));\n  };\n}","map":{"version":3,"mappings":"AACA,SAASA,UAAU,QAAQ,oBAAoB;AAE/C,SAASC,MAAM,QAAQ,UAAU;AACjC,SAASC,IAAI,QAAQ,QAAQ;AAC7B,SAASC,cAAc,QAAQ,kBAAkB;AACjD,SAASC,YAAY,QAAQ,gBAAgB;AAC7C,SAASC,QAAQ,QAAQ,kBAAkB;AAyE3C,OAAM,SAAUC,KAAK,CACnBC,SAAgF,EAChFC,YAAgB;EAEhB,IAAMC,eAAe,GAAGC,SAAS,CAACC,MAAM,IAAI,CAAC;EAC7C,OAAO,UAACC,MAAqB;IAC3B,aAAM,CAACC,IAAI,CACTN,SAAS,GAAGN,MAAM,CAAC,UAACa,CAAC,EAAEC,CAAC;MAAK,gBAAS,CAACD,CAAC,EAAEC,CAAC,EAAEH,MAAM,CAAC;IAAvB,CAAuB,CAAC,GAAGP,QAAQ,EAChEH,IAAI,CAAC,CAAC,CAAC,EACPO,eAAe,GAAGN,cAAc,CAACK,YAAa,CAAC,GAAGJ,YAAY,CAAC;MAAM,WAAIJ,UAAU,EAAE;IAAhB,CAAgB,CAAC,CACvF;EAJD,CAIC;AACL","names":["EmptyError","filter","take","defaultIfEmpty","throwIfEmpty","identity","first","predicate","defaultValue","hasDefaultValue","arguments","length","source","pipe","v","i"],"sources":["C:\\Users\\Amali\\Desktop\\Building_the_IoT_w._P2P_and_Cloud_Computing\\IoTProject\\node_modules\\rxjs\\src\\internal\\operators\\first.ts"],"sourcesContent":["import { Observable } from '../Observable';\r\nimport { EmptyError } from '../util/EmptyError';\r\nimport { OperatorFunction, TruthyTypesOf } from '../types';\r\nimport { filter } from './filter';\r\nimport { take } from './take';\r\nimport { defaultIfEmpty } from './defaultIfEmpty';\r\nimport { throwIfEmpty } from './throwIfEmpty';\r\nimport { identity } from '../util/identity';\r\n\r\nexport function first<T, D = T>(predicate?: null, defaultValue?: D): OperatorFunction<T, T | D>;\r\nexport function first<T>(predicate: BooleanConstructor): OperatorFunction<T, TruthyTypesOf<T>>;\r\nexport function first<T, D>(predicate: BooleanConstructor, defaultValue: D): OperatorFunction<T, TruthyTypesOf<T> | D>;\r\nexport function first<T, S extends T>(\r\n  predicate: (value: T, index: number, source: Observable<T>) => value is S,\r\n  defaultValue?: S\r\n): OperatorFunction<T, S>;\r\nexport function first<T, S extends T, D>(\r\n  predicate: (value: T, index: number, source: Observable<T>) => value is S,\r\n  defaultValue: D\r\n): OperatorFunction<T, S | D>;\r\nexport function first<T, D = T>(\r\n  predicate: (value: T, index: number, source: Observable<T>) => boolean,\r\n  defaultValue?: D\r\n): OperatorFunction<T, T | D>;\r\n\r\n/**\r\n * Emits only the first value (or the first value that meets some condition)\r\n * emitted by the source Observable.\r\n *\r\n * <span class=\"informal\">Emits only the first value. Or emits only the first\r\n * value that passes some test.</span>\r\n *\r\n * ![](first.png)\r\n *\r\n * If called with no arguments, `first` emits the first value of the source\r\n * Observable, then completes. If called with a `predicate` function, `first`\r\n * emits the first value of the source that matches the specified condition. Throws an error if\r\n * `defaultValue` was not provided and a matching element is not found.\r\n *\r\n * ## Examples\r\n *\r\n * Emit only the first click that happens on the DOM\r\n *\r\n * ```ts\r\n * import { fromEvent, first } from 'rxjs';\r\n *\r\n * const clicks = fromEvent(document, 'click');\r\n * const result = clicks.pipe(first());\r\n * result.subscribe(x => console.log(x));\r\n * ```\r\n *\r\n * Emits the first click that happens on a DIV\r\n *\r\n * ```ts\r\n * import { fromEvent, first } from 'rxjs';\r\n *\r\n * const div = document.createElement('div');\r\n * div.style.cssText = 'width: 200px; height: 200px; background: #09c;';\r\n * document.body.appendChild(div);\r\n *\r\n * const clicks = fromEvent(document, 'click');\r\n * const result = clicks.pipe(first(ev => (<HTMLElement>ev.target).tagName === 'DIV'));\r\n * result.subscribe(x => console.log(x));\r\n * ```\r\n *\r\n * @see {@link filter}\r\n * @see {@link find}\r\n * @see {@link take}\r\n *\r\n * @throws {EmptyError} Delivers an EmptyError to the Observer's `error`\r\n * callback if the Observable completes before any `next` notification was sent.\r\n * This is how `first()` is different from {@link take}(1) which completes instead.\r\n *\r\n * @param {function(value: T, index: number, source: Observable<T>): boolean} [predicate]\r\n * An optional function called with each item to test for condition matching.\r\n * @param {D} [defaultValue] The default value emitted in case no valid value\r\n * was found on the source.\r\n * @return A function that returns an Observable that emits the first item that\r\n * matches the condition.\r\n */\r\nexport function first<T, D>(\r\n  predicate?: ((value: T, index: number, source: Observable<T>) => boolean) | null,\r\n  defaultValue?: D\r\n): OperatorFunction<T, T | D> {\r\n  const hasDefaultValue = arguments.length >= 2;\r\n  return (source: Observable<T>) =>\r\n    source.pipe(\r\n      predicate ? filter((v, i) => predicate(v, i, source)) : identity,\r\n      take(1),\r\n      hasDefaultValue ? defaultIfEmpty(defaultValue!) : throwIfEmpty(() => new EmptyError())\r\n    );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}