{"ast":null,"code":"\"use strict\";\n\nvar _classCallCheck = require(\"C:/Users/Amali/Desktop/Building_the_IoT_w._P2P_and_Cloud_Computing/IoTProject/node_modules/@babel/runtime/helpers/classCallCheck.js\").default;\nvar _createClass = require(\"C:/Users/Amali/Desktop/Building_the_IoT_w._P2P_and_Cloud_Computing/IoTProject/node_modules/@babel/runtime/helpers/createClass.js\").default;\nvar _assertThisInitialized = require(\"C:/Users/Amali/Desktop/Building_the_IoT_w._P2P_and_Cloud_Computing/IoTProject/node_modules/@babel/runtime/helpers/assertThisInitialized.js\").default;\nvar _inherits = require(\"C:/Users/Amali/Desktop/Building_the_IoT_w._P2P_and_Cloud_Computing/IoTProject/node_modules/@babel/runtime/helpers/inherits.js\").default;\nvar _createSuper = require(\"C:/Users/Amali/Desktop/Building_the_IoT_w._P2P_and_Cloud_Computing/IoTProject/node_modules/@babel/runtime/helpers/createSuper.js\").default;\nvar __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  Object.defineProperty(o, k2, {\n    enumerable: true,\n    get: function get() {\n      return m[k];\n    }\n  });\n} : function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\nvar __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {\n  Object.defineProperty(o, \"default\", {\n    enumerable: true,\n    value: v\n  });\n} : function (o, v) {\n  o[\"default\"] = v;\n});\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) {\n    if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n  }\n  __setModuleDefault(result, mod);\n  return result;\n};\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Manager = void 0;\nvar engine_io_client_1 = require(\"engine.io-client\");\nvar socket_js_1 = require(\"./socket.js\");\nvar parser = __importStar(require(\"socket.io-parser\"));\nvar on_js_1 = require(\"./on.js\");\nvar backo2_js_1 = require(\"./contrib/backo2.js\");\nvar component_emitter_1 = require(\"@socket.io/component-emitter\");\nvar debug_1 = __importDefault(require(\"debug\")); // debug()\nvar debug = debug_1.default(\"socket.io-client:manager\"); // debug()\nvar Manager = /*#__PURE__*/function (_component_emitter_1$) {\n  _inherits(Manager, _component_emitter_1$);\n  var _super = _createSuper(Manager);\n  function Manager(uri, opts) {\n    var _this;\n    _classCallCheck(this, Manager);\n    var _a;\n    _this = _super.call(this);\n    _this.nsps = {};\n    _this.subs = [];\n    if (uri && \"object\" === typeof uri) {\n      opts = uri;\n      uri = undefined;\n    }\n    opts = opts || {};\n    opts.path = opts.path || \"/socket.io\";\n    _this.opts = opts;\n    engine_io_client_1.installTimerFunctions(_assertThisInitialized(_this), opts);\n    _this.reconnection(opts.reconnection !== false);\n    _this.reconnectionAttempts(opts.reconnectionAttempts || Infinity);\n    _this.reconnectionDelay(opts.reconnectionDelay || 1000);\n    _this.reconnectionDelayMax(opts.reconnectionDelayMax || 5000);\n    _this.randomizationFactor((_a = opts.randomizationFactor) !== null && _a !== void 0 ? _a : 0.5);\n    _this.backoff = new backo2_js_1.Backoff({\n      min: _this.reconnectionDelay(),\n      max: _this.reconnectionDelayMax(),\n      jitter: _this.randomizationFactor()\n    });\n    _this.timeout(null == opts.timeout ? 20000 : opts.timeout);\n    _this._readyState = \"closed\";\n    _this.uri = uri;\n    var _parser = opts.parser || parser;\n    _this.encoder = new _parser.Encoder();\n    _this.decoder = new _parser.Decoder();\n    _this._autoConnect = opts.autoConnect !== false;\n    if (_this._autoConnect) _this.open();\n    return _this;\n  }\n  _createClass(Manager, [{\n    key: \"reconnection\",\n    value: function reconnection(v) {\n      if (!arguments.length) return this._reconnection;\n      this._reconnection = !!v;\n      return this;\n    }\n  }, {\n    key: \"reconnectionAttempts\",\n    value: function reconnectionAttempts(v) {\n      if (v === undefined) return this._reconnectionAttempts;\n      this._reconnectionAttempts = v;\n      return this;\n    }\n  }, {\n    key: \"reconnectionDelay\",\n    value: function reconnectionDelay(v) {\n      var _a;\n      if (v === undefined) return this._reconnectionDelay;\n      this._reconnectionDelay = v;\n      (_a = this.backoff) === null || _a === void 0 ? void 0 : _a.setMin(v);\n      return this;\n    }\n  }, {\n    key: \"randomizationFactor\",\n    value: function randomizationFactor(v) {\n      var _a;\n      if (v === undefined) return this._randomizationFactor;\n      this._randomizationFactor = v;\n      (_a = this.backoff) === null || _a === void 0 ? void 0 : _a.setJitter(v);\n      return this;\n    }\n  }, {\n    key: \"reconnectionDelayMax\",\n    value: function reconnectionDelayMax(v) {\n      var _a;\n      if (v === undefined) return this._reconnectionDelayMax;\n      this._reconnectionDelayMax = v;\n      (_a = this.backoff) === null || _a === void 0 ? void 0 : _a.setMax(v);\n      return this;\n    }\n  }, {\n    key: \"timeout\",\n    value: function timeout(v) {\n      if (!arguments.length) return this._timeout;\n      this._timeout = v;\n      return this;\n    }\n    /**\n     * Starts trying to reconnect if reconnection is enabled and we have not\n     * started reconnecting yet\n     *\n     * @private\n     */\n  }, {\n    key: \"maybeReconnectOnOpen\",\n    value: function maybeReconnectOnOpen() {\n      // Only try to reconnect if it's the first time we're connecting\n      if (!this._reconnecting && this._reconnection && this.backoff.attempts === 0) {\n        // keeps reconnection from firing twice for the same reconnection loop\n        this.reconnect();\n      }\n    }\n    /**\n     * Sets the current transport `socket`.\n     *\n     * @param {Function} fn - optional, callback\n     * @return self\n     * @public\n     */\n  }, {\n    key: \"open\",\n    value: function open(fn) {\n      var _this2 = this;\n      debug(\"readyState %s\", this._readyState);\n      if (~this._readyState.indexOf(\"open\")) return this;\n      debug(\"opening %s\", this.uri);\n      this.engine = new engine_io_client_1.Socket(this.uri, this.opts);\n      var socket = this.engine;\n      var self = this;\n      this._readyState = \"opening\";\n      this.skipReconnect = false;\n      // emit `open`\n      var openSubDestroy = on_js_1.on(socket, \"open\", function () {\n        self.onopen();\n        fn && fn();\n      });\n      // emit `error`\n      var errorSub = on_js_1.on(socket, \"error\", function (err) {\n        debug(\"error\");\n        self.cleanup();\n        self._readyState = \"closed\";\n        _this2.emitReserved(\"error\", err);\n        if (fn) {\n          fn(err);\n        } else {\n          // Only do this if there is no fn to handle the error\n          self.maybeReconnectOnOpen();\n        }\n      });\n      if (false !== this._timeout) {\n        var timeout = this._timeout;\n        debug(\"connect attempt will timeout after %d\", timeout);\n        if (timeout === 0) {\n          openSubDestroy(); // prevents a race condition with the 'open' event\n        }\n        // set timer\n        var timer = this.setTimeoutFn(function () {\n          debug(\"connect attempt timed out after %d\", timeout);\n          openSubDestroy();\n          socket.close();\n          // @ts-ignore\n          socket.emit(\"error\", new Error(\"timeout\"));\n        }, timeout);\n        if (this.opts.autoUnref) {\n          timer.unref();\n        }\n        this.subs.push(function subDestroy() {\n          clearTimeout(timer);\n        });\n      }\n      this.subs.push(openSubDestroy);\n      this.subs.push(errorSub);\n      return this;\n    }\n    /**\n     * Alias for open()\n     *\n     * @return self\n     * @public\n     */\n  }, {\n    key: \"connect\",\n    value: function connect(fn) {\n      return this.open(fn);\n    }\n    /**\n     * Called upon transport open.\n     *\n     * @private\n     */\n  }, {\n    key: \"onopen\",\n    value: function onopen() {\n      debug(\"open\");\n      // clear old subs\n      this.cleanup();\n      // mark as open\n      this._readyState = \"open\";\n      this.emitReserved(\"open\");\n      // add new subs\n      var socket = this.engine;\n      this.subs.push(on_js_1.on(socket, \"ping\", this.onping.bind(this)), on_js_1.on(socket, \"data\", this.ondata.bind(this)), on_js_1.on(socket, \"error\", this.onerror.bind(this)), on_js_1.on(socket, \"close\", this.onclose.bind(this)), on_js_1.on(this.decoder, \"decoded\", this.ondecoded.bind(this)));\n    }\n    /**\n     * Called upon a ping.\n     *\n     * @private\n     */\n  }, {\n    key: \"onping\",\n    value: function onping() {\n      this.emitReserved(\"ping\");\n    }\n    /**\n     * Called with data.\n     *\n     * @private\n     */\n  }, {\n    key: \"ondata\",\n    value: function ondata(data) {\n      try {\n        this.decoder.add(data);\n      } catch (e) {\n        this.onclose(\"parse error\", e);\n      }\n    }\n    /**\n     * Called when parser fully decodes a packet.\n     *\n     * @private\n     */\n  }, {\n    key: \"ondecoded\",\n    value: function ondecoded(packet) {\n      var _this3 = this;\n      // the nextTick call prevents an exception in a user-provided event listener from triggering a disconnection due to a \"parse error\"\n      engine_io_client_1.nextTick(function () {\n        _this3.emitReserved(\"packet\", packet);\n      }, this.setTimeoutFn);\n    }\n    /**\n     * Called upon socket error.\n     *\n     * @private\n     */\n  }, {\n    key: \"onerror\",\n    value: function onerror(err) {\n      debug(\"error\", err);\n      this.emitReserved(\"error\", err);\n    }\n    /**\n     * Creates a new socket for the given `nsp`.\n     *\n     * @return {Socket}\n     * @public\n     */\n  }, {\n    key: \"socket\",\n    value: function socket(nsp, opts) {\n      var socket = this.nsps[nsp];\n      if (!socket) {\n        socket = new socket_js_1.Socket(this, nsp, opts);\n        this.nsps[nsp] = socket;\n      }\n      return socket;\n    }\n    /**\n     * Called upon a socket close.\n     *\n     * @param socket\n     * @private\n     */\n  }, {\n    key: \"_destroy\",\n    value: function _destroy(socket) {\n      var nsps = Object.keys(this.nsps);\n      for (var _i = 0, _nsps = nsps; _i < _nsps.length; _i++) {\n        var nsp = _nsps[_i];\n        var _socket = this.nsps[nsp];\n        if (_socket.active) {\n          debug(\"socket %s is still active, skipping close\", nsp);\n          return;\n        }\n      }\n      this._close();\n    }\n    /**\n     * Writes a packet.\n     *\n     * @param packet\n     * @private\n     */\n  }, {\n    key: \"_packet\",\n    value: function _packet(packet) {\n      debug(\"writing packet %j\", packet);\n      var encodedPackets = this.encoder.encode(packet);\n      for (var i = 0; i < encodedPackets.length; i++) {\n        this.engine.write(encodedPackets[i], packet.options);\n      }\n    }\n    /**\n     * Clean up transport subscriptions and packet buffer.\n     *\n     * @private\n     */\n  }, {\n    key: \"cleanup\",\n    value: function cleanup() {\n      debug(\"cleanup\");\n      this.subs.forEach(function (subDestroy) {\n        return subDestroy();\n      });\n      this.subs.length = 0;\n      this.decoder.destroy();\n    }\n    /**\n     * Close the current socket.\n     *\n     * @private\n     */\n  }, {\n    key: \"_close\",\n    value: function _close() {\n      debug(\"disconnect\");\n      this.skipReconnect = true;\n      this._reconnecting = false;\n      this.onclose(\"forced close\");\n      if (this.engine) this.engine.close();\n    }\n    /**\n     * Alias for close()\n     *\n     * @private\n     */\n  }, {\n    key: \"disconnect\",\n    value: function disconnect() {\n      return this._close();\n    }\n    /**\n     * Called upon engine close.\n     *\n     * @private\n     */\n  }, {\n    key: \"onclose\",\n    value: function onclose(reason, description) {\n      debug(\"closed due to %s\", reason);\n      this.cleanup();\n      this.backoff.reset();\n      this._readyState = \"closed\";\n      this.emitReserved(\"close\", reason, description);\n      if (this._reconnection && !this.skipReconnect) {\n        this.reconnect();\n      }\n    }\n    /**\n     * Attempt a reconnection.\n     *\n     * @private\n     */\n  }, {\n    key: \"reconnect\",\n    value: function reconnect() {\n      var _this4 = this;\n      if (this._reconnecting || this.skipReconnect) return this;\n      var self = this;\n      if (this.backoff.attempts >= this._reconnectionAttempts) {\n        debug(\"reconnect failed\");\n        this.backoff.reset();\n        this.emitReserved(\"reconnect_failed\");\n        this._reconnecting = false;\n      } else {\n        var delay = this.backoff.duration();\n        debug(\"will wait %dms before reconnect attempt\", delay);\n        this._reconnecting = true;\n        var timer = this.setTimeoutFn(function () {\n          if (self.skipReconnect) return;\n          debug(\"attempting reconnect\");\n          _this4.emitReserved(\"reconnect_attempt\", self.backoff.attempts);\n          // check again for the case socket closed in above events\n          if (self.skipReconnect) return;\n          self.open(function (err) {\n            if (err) {\n              debug(\"reconnect attempt error\");\n              self._reconnecting = false;\n              self.reconnect();\n              _this4.emitReserved(\"reconnect_error\", err);\n            } else {\n              debug(\"reconnect success\");\n              self.onreconnect();\n            }\n          });\n        }, delay);\n        if (this.opts.autoUnref) {\n          timer.unref();\n        }\n        this.subs.push(function subDestroy() {\n          clearTimeout(timer);\n        });\n      }\n    }\n    /**\n     * Called upon successful reconnect.\n     *\n     * @private\n     */\n  }, {\n    key: \"onreconnect\",\n    value: function onreconnect() {\n      var attempt = this.backoff.attempts;\n      this._reconnecting = false;\n      this.backoff.reset();\n      this.emitReserved(\"reconnect\", attempt);\n    }\n  }]);\n  return Manager;\n}(component_emitter_1.Emitter);\nexports.Manager = Manager;","map":{"version":3,"names":["__createBinding","Object","create","o","m","k","k2","undefined","defineProperty","enumerable","get","__setModuleDefault","v","value","__importStar","mod","__esModule","result","prototype","hasOwnProperty","call","__importDefault","exports","Manager","engine_io_client_1","require","socket_js_1","parser","on_js_1","backo2_js_1","component_emitter_1","debug_1","debug","default","uri","opts","_a","nsps","subs","path","installTimerFunctions","reconnection","reconnectionAttempts","Infinity","reconnectionDelay","reconnectionDelayMax","randomizationFactor","backoff","Backoff","min","max","jitter","timeout","_readyState","_parser","encoder","Encoder","decoder","Decoder","_autoConnect","autoConnect","open","arguments","length","_reconnection","_reconnectionAttempts","_reconnectionDelay","setMin","_randomizationFactor","setJitter","_reconnectionDelayMax","setMax","_timeout","_reconnecting","attempts","reconnect","fn","indexOf","engine","Socket","socket","self","skipReconnect","openSubDestroy","on","onopen","errorSub","err","cleanup","emitReserved","maybeReconnectOnOpen","timer","setTimeoutFn","close","emit","Error","autoUnref","unref","push","subDestroy","clearTimeout","onping","bind","ondata","onerror","onclose","ondecoded","data","add","e","packet","nextTick","nsp","keys","active","_close","encodedPackets","encode","i","write","options","forEach","destroy","reason","description","reset","delay","duration","onreconnect","attempt","Emitter"],"sources":["C:/Users/Amali/Desktop/Building_the_IoT_w._P2P_and_Cloud_Computing/IoTProject/node_modules/socket.io-client/build/cjs/manager.js"],"sourcesContent":["\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Manager = void 0;\nconst engine_io_client_1 = require(\"engine.io-client\");\nconst socket_js_1 = require(\"./socket.js\");\nconst parser = __importStar(require(\"socket.io-parser\"));\nconst on_js_1 = require(\"./on.js\");\nconst backo2_js_1 = require(\"./contrib/backo2.js\");\nconst component_emitter_1 = require(\"@socket.io/component-emitter\");\nconst debug_1 = __importDefault(require(\"debug\")); // debug()\nconst debug = debug_1.default(\"socket.io-client:manager\"); // debug()\nclass Manager extends component_emitter_1.Emitter {\n    constructor(uri, opts) {\n        var _a;\n        super();\n        this.nsps = {};\n        this.subs = [];\n        if (uri && \"object\" === typeof uri) {\n            opts = uri;\n            uri = undefined;\n        }\n        opts = opts || {};\n        opts.path = opts.path || \"/socket.io\";\n        this.opts = opts;\n        engine_io_client_1.installTimerFunctions(this, opts);\n        this.reconnection(opts.reconnection !== false);\n        this.reconnectionAttempts(opts.reconnectionAttempts || Infinity);\n        this.reconnectionDelay(opts.reconnectionDelay || 1000);\n        this.reconnectionDelayMax(opts.reconnectionDelayMax || 5000);\n        this.randomizationFactor((_a = opts.randomizationFactor) !== null && _a !== void 0 ? _a : 0.5);\n        this.backoff = new backo2_js_1.Backoff({\n            min: this.reconnectionDelay(),\n            max: this.reconnectionDelayMax(),\n            jitter: this.randomizationFactor(),\n        });\n        this.timeout(null == opts.timeout ? 20000 : opts.timeout);\n        this._readyState = \"closed\";\n        this.uri = uri;\n        const _parser = opts.parser || parser;\n        this.encoder = new _parser.Encoder();\n        this.decoder = new _parser.Decoder();\n        this._autoConnect = opts.autoConnect !== false;\n        if (this._autoConnect)\n            this.open();\n    }\n    reconnection(v) {\n        if (!arguments.length)\n            return this._reconnection;\n        this._reconnection = !!v;\n        return this;\n    }\n    reconnectionAttempts(v) {\n        if (v === undefined)\n            return this._reconnectionAttempts;\n        this._reconnectionAttempts = v;\n        return this;\n    }\n    reconnectionDelay(v) {\n        var _a;\n        if (v === undefined)\n            return this._reconnectionDelay;\n        this._reconnectionDelay = v;\n        (_a = this.backoff) === null || _a === void 0 ? void 0 : _a.setMin(v);\n        return this;\n    }\n    randomizationFactor(v) {\n        var _a;\n        if (v === undefined)\n            return this._randomizationFactor;\n        this._randomizationFactor = v;\n        (_a = this.backoff) === null || _a === void 0 ? void 0 : _a.setJitter(v);\n        return this;\n    }\n    reconnectionDelayMax(v) {\n        var _a;\n        if (v === undefined)\n            return this._reconnectionDelayMax;\n        this._reconnectionDelayMax = v;\n        (_a = this.backoff) === null || _a === void 0 ? void 0 : _a.setMax(v);\n        return this;\n    }\n    timeout(v) {\n        if (!arguments.length)\n            return this._timeout;\n        this._timeout = v;\n        return this;\n    }\n    /**\n     * Starts trying to reconnect if reconnection is enabled and we have not\n     * started reconnecting yet\n     *\n     * @private\n     */\n    maybeReconnectOnOpen() {\n        // Only try to reconnect if it's the first time we're connecting\n        if (!this._reconnecting &&\n            this._reconnection &&\n            this.backoff.attempts === 0) {\n            // keeps reconnection from firing twice for the same reconnection loop\n            this.reconnect();\n        }\n    }\n    /**\n     * Sets the current transport `socket`.\n     *\n     * @param {Function} fn - optional, callback\n     * @return self\n     * @public\n     */\n    open(fn) {\n        debug(\"readyState %s\", this._readyState);\n        if (~this._readyState.indexOf(\"open\"))\n            return this;\n        debug(\"opening %s\", this.uri);\n        this.engine = new engine_io_client_1.Socket(this.uri, this.opts);\n        const socket = this.engine;\n        const self = this;\n        this._readyState = \"opening\";\n        this.skipReconnect = false;\n        // emit `open`\n        const openSubDestroy = on_js_1.on(socket, \"open\", function () {\n            self.onopen();\n            fn && fn();\n        });\n        // emit `error`\n        const errorSub = on_js_1.on(socket, \"error\", (err) => {\n            debug(\"error\");\n            self.cleanup();\n            self._readyState = \"closed\";\n            this.emitReserved(\"error\", err);\n            if (fn) {\n                fn(err);\n            }\n            else {\n                // Only do this if there is no fn to handle the error\n                self.maybeReconnectOnOpen();\n            }\n        });\n        if (false !== this._timeout) {\n            const timeout = this._timeout;\n            debug(\"connect attempt will timeout after %d\", timeout);\n            if (timeout === 0) {\n                openSubDestroy(); // prevents a race condition with the 'open' event\n            }\n            // set timer\n            const timer = this.setTimeoutFn(() => {\n                debug(\"connect attempt timed out after %d\", timeout);\n                openSubDestroy();\n                socket.close();\n                // @ts-ignore\n                socket.emit(\"error\", new Error(\"timeout\"));\n            }, timeout);\n            if (this.opts.autoUnref) {\n                timer.unref();\n            }\n            this.subs.push(function subDestroy() {\n                clearTimeout(timer);\n            });\n        }\n        this.subs.push(openSubDestroy);\n        this.subs.push(errorSub);\n        return this;\n    }\n    /**\n     * Alias for open()\n     *\n     * @return self\n     * @public\n     */\n    connect(fn) {\n        return this.open(fn);\n    }\n    /**\n     * Called upon transport open.\n     *\n     * @private\n     */\n    onopen() {\n        debug(\"open\");\n        // clear old subs\n        this.cleanup();\n        // mark as open\n        this._readyState = \"open\";\n        this.emitReserved(\"open\");\n        // add new subs\n        const socket = this.engine;\n        this.subs.push(on_js_1.on(socket, \"ping\", this.onping.bind(this)), on_js_1.on(socket, \"data\", this.ondata.bind(this)), on_js_1.on(socket, \"error\", this.onerror.bind(this)), on_js_1.on(socket, \"close\", this.onclose.bind(this)), on_js_1.on(this.decoder, \"decoded\", this.ondecoded.bind(this)));\n    }\n    /**\n     * Called upon a ping.\n     *\n     * @private\n     */\n    onping() {\n        this.emitReserved(\"ping\");\n    }\n    /**\n     * Called with data.\n     *\n     * @private\n     */\n    ondata(data) {\n        try {\n            this.decoder.add(data);\n        }\n        catch (e) {\n            this.onclose(\"parse error\", e);\n        }\n    }\n    /**\n     * Called when parser fully decodes a packet.\n     *\n     * @private\n     */\n    ondecoded(packet) {\n        // the nextTick call prevents an exception in a user-provided event listener from triggering a disconnection due to a \"parse error\"\n        engine_io_client_1.nextTick(() => {\n            this.emitReserved(\"packet\", packet);\n        }, this.setTimeoutFn);\n    }\n    /**\n     * Called upon socket error.\n     *\n     * @private\n     */\n    onerror(err) {\n        debug(\"error\", err);\n        this.emitReserved(\"error\", err);\n    }\n    /**\n     * Creates a new socket for the given `nsp`.\n     *\n     * @return {Socket}\n     * @public\n     */\n    socket(nsp, opts) {\n        let socket = this.nsps[nsp];\n        if (!socket) {\n            socket = new socket_js_1.Socket(this, nsp, opts);\n            this.nsps[nsp] = socket;\n        }\n        return socket;\n    }\n    /**\n     * Called upon a socket close.\n     *\n     * @param socket\n     * @private\n     */\n    _destroy(socket) {\n        const nsps = Object.keys(this.nsps);\n        for (const nsp of nsps) {\n            const socket = this.nsps[nsp];\n            if (socket.active) {\n                debug(\"socket %s is still active, skipping close\", nsp);\n                return;\n            }\n        }\n        this._close();\n    }\n    /**\n     * Writes a packet.\n     *\n     * @param packet\n     * @private\n     */\n    _packet(packet) {\n        debug(\"writing packet %j\", packet);\n        const encodedPackets = this.encoder.encode(packet);\n        for (let i = 0; i < encodedPackets.length; i++) {\n            this.engine.write(encodedPackets[i], packet.options);\n        }\n    }\n    /**\n     * Clean up transport subscriptions and packet buffer.\n     *\n     * @private\n     */\n    cleanup() {\n        debug(\"cleanup\");\n        this.subs.forEach((subDestroy) => subDestroy());\n        this.subs.length = 0;\n        this.decoder.destroy();\n    }\n    /**\n     * Close the current socket.\n     *\n     * @private\n     */\n    _close() {\n        debug(\"disconnect\");\n        this.skipReconnect = true;\n        this._reconnecting = false;\n        this.onclose(\"forced close\");\n        if (this.engine)\n            this.engine.close();\n    }\n    /**\n     * Alias for close()\n     *\n     * @private\n     */\n    disconnect() {\n        return this._close();\n    }\n    /**\n     * Called upon engine close.\n     *\n     * @private\n     */\n    onclose(reason, description) {\n        debug(\"closed due to %s\", reason);\n        this.cleanup();\n        this.backoff.reset();\n        this._readyState = \"closed\";\n        this.emitReserved(\"close\", reason, description);\n        if (this._reconnection && !this.skipReconnect) {\n            this.reconnect();\n        }\n    }\n    /**\n     * Attempt a reconnection.\n     *\n     * @private\n     */\n    reconnect() {\n        if (this._reconnecting || this.skipReconnect)\n            return this;\n        const self = this;\n        if (this.backoff.attempts >= this._reconnectionAttempts) {\n            debug(\"reconnect failed\");\n            this.backoff.reset();\n            this.emitReserved(\"reconnect_failed\");\n            this._reconnecting = false;\n        }\n        else {\n            const delay = this.backoff.duration();\n            debug(\"will wait %dms before reconnect attempt\", delay);\n            this._reconnecting = true;\n            const timer = this.setTimeoutFn(() => {\n                if (self.skipReconnect)\n                    return;\n                debug(\"attempting reconnect\");\n                this.emitReserved(\"reconnect_attempt\", self.backoff.attempts);\n                // check again for the case socket closed in above events\n                if (self.skipReconnect)\n                    return;\n                self.open((err) => {\n                    if (err) {\n                        debug(\"reconnect attempt error\");\n                        self._reconnecting = false;\n                        self.reconnect();\n                        this.emitReserved(\"reconnect_error\", err);\n                    }\n                    else {\n                        debug(\"reconnect success\");\n                        self.onreconnect();\n                    }\n                });\n            }, delay);\n            if (this.opts.autoUnref) {\n                timer.unref();\n            }\n            this.subs.push(function subDestroy() {\n                clearTimeout(timer);\n            });\n        }\n    }\n    /**\n     * Called upon successful reconnect.\n     *\n     * @private\n     */\n    onreconnect() {\n        const attempt = this.backoff.attempts;\n        this._reconnecting = false;\n        this.backoff.reset();\n        this.emitReserved(\"reconnect\", attempt);\n    }\n}\nexports.Manager = Manager;\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}