{"ast":null,"code":"import { asyncScheduler } from '../scheduler/async';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\nexport function timeInterval(scheduler) {\n  if (scheduler === void 0) {\n    scheduler = asyncScheduler;\n  }\n  return operate(function (source, subscriber) {\n    var last = scheduler.now();\n    source.subscribe(createOperatorSubscriber(subscriber, function (value) {\n      var now = scheduler.now();\n      var interval = now - last;\n      last = now;\n      subscriber.next(new TimeInterval(value, interval));\n    }));\n  });\n}\nvar TimeInterval = function () {\n  function TimeInterval(value, interval) {\n    this.value = value;\n    this.interval = interval;\n  }\n  return TimeInterval;\n}();\nexport { TimeInterval };","map":{"version":3,"mappings":"AAAA,SAASA,cAAc,QAAQ,oBAAoB;AAEnD,SAASC,OAAO,QAAQ,cAAc;AACtC,SAASC,wBAAwB,QAAQ,sBAAsB;AAyC/D,OAAM,SAAUC,YAAY,CAAIC,SAAyC;EAAzC;IAAAA,0BAAyC;EAAA;EACvE,OAAOH,OAAO,CAAC,UAACI,MAAM,EAAEC,UAAU;IAChC,IAAIC,IAAI,GAAGH,SAAS,CAACI,GAAG,EAAE;IAC1BH,MAAM,CAACI,SAAS,CACdP,wBAAwB,CAACI,UAAU,EAAE,UAACI,KAAK;MACzC,IAAMF,GAAG,GAAGJ,SAAS,CAACI,GAAG,EAAE;MAC3B,IAAMG,QAAQ,GAAGH,GAAG,GAAGD,IAAI;MAC3BA,IAAI,GAAGC,GAAG;MACVF,UAAU,CAACM,IAAI,CAAC,IAAIC,YAAY,CAACH,KAAK,EAAEC,QAAQ,CAAC,CAAC;IACpD,CAAC,CAAC,CACH;EACH,CAAC,CAAC;AACJ;AAKA;EAIE,sBAAmBD,KAAQ,EAASC,QAAgB;IAAjC,UAAK,GAALD,KAAK;IAAY,aAAQ,GAARC,QAAQ;EAAW;EACzD,mBAAC;AAAD,CAAC,EALD","names":["asyncScheduler","operate","createOperatorSubscriber","timeInterval","scheduler","source","subscriber","last","now","subscribe","value","interval","next","TimeInterval"],"sources":["C:\\Users\\Amali\\Desktop\\Building_the_IoT_w._P2P_and_Cloud_Computing\\IoTProject\\node_modules\\rxjs\\src\\internal\\operators\\timeInterval.ts"],"sourcesContent":["import { asyncScheduler } from '../scheduler/async';\r\nimport { SchedulerLike, OperatorFunction } from '../types';\r\nimport { operate } from '../util/lift';\r\nimport { createOperatorSubscriber } from './OperatorSubscriber';\r\n\r\n/**\r\n * Emits an object containing the current value, and the time that has\r\n * passed between emitting the current value and the previous value, which is\r\n * calculated by using the provided `scheduler`'s `now()` method to retrieve\r\n * the current time at each emission, then calculating the difference. The `scheduler`\r\n * defaults to {@link asyncScheduler}, so by default, the `interval` will be in\r\n * milliseconds.\r\n *\r\n * <span class=\"informal\">Convert an Observable that emits items into one that\r\n * emits indications of the amount of time elapsed between those emissions.</span>\r\n *\r\n * ![](timeInterval.png)\r\n *\r\n * ## Example\r\n *\r\n * Emit interval between current value with the last value\r\n *\r\n * ```ts\r\n * import { interval, timeInterval } from 'rxjs';\r\n *\r\n * const seconds = interval(1000);\r\n *\r\n * seconds\r\n *   .pipe(timeInterval())\r\n *   .subscribe(value => console.log(value));\r\n *\r\n * // NOTE: The values will never be this precise,\r\n * // intervals created with `interval` or `setInterval`\r\n * // are non-deterministic.\r\n *\r\n * // { value: 0, interval: 1000 }\r\n * // { value: 1, interval: 1000 }\r\n * // { value: 2, interval: 1000 }\r\n * ```\r\n *\r\n * @param {SchedulerLike} [scheduler] Scheduler used to get the current time.\r\n * @return A function that returns an Observable that emits information about\r\n * value and interval.\r\n */\r\nexport function timeInterval<T>(scheduler: SchedulerLike = asyncScheduler): OperatorFunction<T, TimeInterval<T>> {\r\n  return operate((source, subscriber) => {\r\n    let last = scheduler.now();\r\n    source.subscribe(\r\n      createOperatorSubscriber(subscriber, (value) => {\r\n        const now = scheduler.now();\r\n        const interval = now - last;\r\n        last = now;\r\n        subscriber.next(new TimeInterval(value, interval));\r\n      })\r\n    );\r\n  });\r\n}\r\n\r\n// TODO(benlesh): make this an interface, export the interface, but not the implemented class,\r\n// there's no reason users should be manually creating this type.\r\n\r\nexport class TimeInterval<T> {\r\n  /**\r\n   * @deprecated Internal implementation detail, do not construct directly. Will be made an interface in v8.\r\n   */\r\n  constructor(public value: T, public interval: number) {}\r\n}\r\n"]},"metadata":{},"sourceType":"module"}