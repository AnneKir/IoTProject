{"ast":null,"code":"'use strict';\n\n/**\n * Topic Alias receiving manager\n * This holds alias to topic map\n * @param {Number} [max] - topic alias maximum entries\n */\nfunction TopicAliasRecv(max) {\n  if (!(this instanceof TopicAliasRecv)) {\n    return new TopicAliasRecv(max);\n  }\n  this.aliasToTopic = {};\n  this.max = max;\n}\n\n/**\n * Insert or update topic - alias entry.\n * @param {String} [topic] - topic\n * @param {Number} [alias] - topic alias\n * @returns {Boolean} - if success return true otherwise false\n */\nTopicAliasRecv.prototype.put = function (topic, alias) {\n  if (alias === 0 || alias > this.max) {\n    return false;\n  }\n  this.aliasToTopic[alias] = topic;\n  this.length = Object.keys(this.aliasToTopic).length;\n  return true;\n};\n\n/**\n * Get topic by alias\n * @param {String} [topic] - topic\n * @returns {Number} - if mapped topic exists return topic alias, otherwise return undefined\n */\nTopicAliasRecv.prototype.getTopicByAlias = function (alias) {\n  return this.aliasToTopic[alias];\n};\n\n/**\n * Clear all entries\n */\nTopicAliasRecv.prototype.clear = function () {\n  this.aliasToTopic = {};\n};\nmodule.exports = TopicAliasRecv;","map":{"version":3,"names":["TopicAliasRecv","max","aliasToTopic","prototype","put","topic","alias","length","Object","keys","getTopicByAlias","clear","module","exports"],"sources":["/Users/athallenberg/Dropbox/Kandidat/IoT/IoTProject/node_modules/mqtt/lib/topic-alias-recv.js"],"sourcesContent":["'use strict'\n\n/**\n * Topic Alias receiving manager\n * This holds alias to topic map\n * @param {Number} [max] - topic alias maximum entries\n */\nfunction TopicAliasRecv (max) {\n  if (!(this instanceof TopicAliasRecv)) {\n    return new TopicAliasRecv(max)\n  }\n  this.aliasToTopic = {}\n  this.max = max\n}\n\n/**\n * Insert or update topic - alias entry.\n * @param {String} [topic] - topic\n * @param {Number} [alias] - topic alias\n * @returns {Boolean} - if success return true otherwise false\n */\nTopicAliasRecv.prototype.put = function (topic, alias) {\n  if (alias === 0 || alias > this.max) {\n    return false\n  }\n  this.aliasToTopic[alias] = topic\n  this.length = Object.keys(this.aliasToTopic).length\n  return true\n}\n\n/**\n * Get topic by alias\n * @param {String} [topic] - topic\n * @returns {Number} - if mapped topic exists return topic alias, otherwise return undefined\n */\nTopicAliasRecv.prototype.getTopicByAlias = function (alias) {\n  return this.aliasToTopic[alias]\n}\n\n/**\n * Clear all entries\n */\nTopicAliasRecv.prototype.clear = function () {\n  this.aliasToTopic = {}\n}\n\nmodule.exports = TopicAliasRecv\n"],"mappings":"AAAA,YAAY;;AAEZ;AACA;AACA;AACA;AACA;AACA,SAASA,cAAc,CAAEC,GAAG,EAAE;EAC5B,IAAI,EAAE,IAAI,YAAYD,cAAc,CAAC,EAAE;IACrC,OAAO,IAAIA,cAAc,CAACC,GAAG,CAAC;EAChC;EACA,IAAI,CAACC,YAAY,GAAG,CAAC,CAAC;EACtB,IAAI,CAACD,GAAG,GAAGA,GAAG;AAChB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACAD,cAAc,CAACG,SAAS,CAACC,GAAG,GAAG,UAAUC,KAAK,EAAEC,KAAK,EAAE;EACrD,IAAIA,KAAK,KAAK,CAAC,IAAIA,KAAK,GAAG,IAAI,CAACL,GAAG,EAAE;IACnC,OAAO,KAAK;EACd;EACA,IAAI,CAACC,YAAY,CAACI,KAAK,CAAC,GAAGD,KAAK;EAChC,IAAI,CAACE,MAAM,GAAGC,MAAM,CAACC,IAAI,CAAC,IAAI,CAACP,YAAY,CAAC,CAACK,MAAM;EACnD,OAAO,IAAI;AACb,CAAC;;AAED;AACA;AACA;AACA;AACA;AACAP,cAAc,CAACG,SAAS,CAACO,eAAe,GAAG,UAAUJ,KAAK,EAAE;EAC1D,OAAO,IAAI,CAACJ,YAAY,CAACI,KAAK,CAAC;AACjC,CAAC;;AAED;AACA;AACA;AACAN,cAAc,CAACG,SAAS,CAACQ,KAAK,GAAG,YAAY;EAC3C,IAAI,CAACT,YAAY,GAAG,CAAC,CAAC;AACxB,CAAC;AAEDU,MAAM,CAACC,OAAO,GAAGb,cAAc"},"metadata":{},"sourceType":"script"}