{"ast":null,"code":"import { iterator as Symbol_iterator } from '../symbol/iterator';\nimport { isFunction } from './isFunction';\nexport function isIterable(input) {\n  return isFunction(input === null || input === void 0 ? void 0 : input[Symbol_iterator]);\n}","map":{"version":3,"mappings":"AAAA,SAASA,QAAQ,IAAIC,eAAe,QAAQ,oBAAoB;AAChE,SAASC,UAAU,QAAQ,cAAc;AAGzC,OAAM,SAAUC,UAAU,CAACC,KAAU;EACnC,OAAOF,UAAU,CAACE,KAAK,aAALA,KAAK,uBAALA,KAAK,CAAGH,eAAe,CAAC,CAAC;AAC7C","names":["iterator","Symbol_iterator","isFunction","isIterable","input"],"sources":["C:\\Users\\Amali\\Desktop\\Building_the_IoT_w._P2P_and_Cloud_Computing\\IoTProject\\node_modules\\rxjs\\src\\internal\\util\\isIterable.ts"],"sourcesContent":["import { iterator as Symbol_iterator } from '../symbol/iterator';\r\nimport { isFunction } from './isFunction';\r\n\r\n/** Identifies an input as being an Iterable */\r\nexport function isIterable(input: any): input is Iterable<any> {\r\n  return isFunction(input?.[Symbol_iterator]);\r\n}\r\n"]},"metadata":{},"sourceType":"module"}