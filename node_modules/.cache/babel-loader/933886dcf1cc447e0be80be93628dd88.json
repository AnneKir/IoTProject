{"ast":null,"code":"import { Observable } from '../Observable';\nimport { iterator as Symbol_iterator } from '../symbol/iterator';\nimport { isFunction } from '../util/isFunction';\nimport { executeSchedule } from '../util/executeSchedule';\nexport function scheduleIterable(input, scheduler) {\n  return new Observable(function (subscriber) {\n    var iterator;\n    executeSchedule(subscriber, scheduler, function () {\n      iterator = input[Symbol_iterator]();\n      executeSchedule(subscriber, scheduler, function () {\n        var _a;\n        var value;\n        var done;\n        try {\n          _a = iterator.next(), value = _a.value, done = _a.done;\n        } catch (err) {\n          subscriber.error(err);\n          return;\n        }\n        if (done) {\n          subscriber.complete();\n        } else {\n          subscriber.next(value);\n        }\n      }, 0, true);\n    });\n    return function () {\n      return isFunction(iterator === null || iterator === void 0 ? void 0 : iterator.return) && iterator.return();\n    };\n  });\n}","map":{"version":3,"mappings":"AAAA,SAASA,UAAU,QAAQ,eAAe;AAE1C,SAASC,QAAQ,IAAIC,eAAe,QAAQ,oBAAoB;AAChE,SAASC,UAAU,QAAQ,oBAAoB;AAC/C,SAASC,eAAe,QAAQ,yBAAyB;AAOzD,OAAM,SAAUC,gBAAgB,CAAIC,KAAkB,EAAEC,SAAwB;EAC9E,OAAO,IAAIP,UAAU,CAAI,UAACQ,UAAU;IAClC,IAAIP,QAAwB;IAK5BG,eAAe,CAACI,UAAU,EAAED,SAAS,EAAE;MAErCN,QAAQ,GAAIK,KAAa,CAACJ,eAAe,CAAC,EAAE;MAE5CE,eAAe,CACbI,UAAU,EACVD,SAAS,EACT;;QACE,IAAIE,KAAQ;QACZ,IAAIC,IAAyB;QAC7B,IAAI;UAEDC,KAAkBV,QAAQ,CAACW,IAAI,EAAE,EAA/BH,KAAK,aAAEC,IAAI;SACf,CAAC,OAAOG,GAAG,EAAE;UAEZL,UAAU,CAACM,KAAK,CAACD,GAAG,CAAC;UACrB;;QAGF,IAAIH,IAAI,EAAE;UAKRF,UAAU,CAACO,QAAQ,EAAE;SACtB,MAAM;UAELP,UAAU,CAACI,IAAI,CAACH,KAAK,CAAC;;MAE1B,CAAC,EACD,CAAC,EACD,IAAI,CACL;IACH,CAAC,CAAC;IAMF,OAAO;MAAM,iBAAU,CAACR,QAAQ,aAARA,QAAQ,uBAARA,QAAQ,CAAEe,MAAM,CAAC,IAAIf,QAAQ,CAACe,MAAM,EAAE;IAAjD,CAAiD;EAChE,CAAC,CAAC;AACJ","names":["Observable","iterator","Symbol_iterator","isFunction","executeSchedule","scheduleIterable","input","scheduler","subscriber","value","done","_a","next","err","error","complete","return"],"sources":["../../../../src/internal/scheduled/scheduleIterable.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}