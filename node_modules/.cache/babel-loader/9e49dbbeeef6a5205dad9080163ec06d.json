{"ast":null,"code":"var _classCallCheck = require(\"C:/Users/Amali/Desktop/Building_the_IoT_w._P2P_and_Cloud_Computing/IoTProject/node_modules/@babel/runtime/helpers/classCallCheck.js\").default;\nvar _createClass = require(\"C:/Users/Amali/Desktop/Building_the_IoT_w._P2P_and_Cloud_Computing/IoTProject/node_modules/@babel/runtime/helpers/createClass.js\").default;\nvar _possibleConstructorReturn = require(\"C:/Users/Amali/Desktop/Building_the_IoT_w._P2P_and_Cloud_Computing/IoTProject/node_modules/@babel/runtime/helpers/possibleConstructorReturn.js\").default;\nvar _inherits = require(\"C:/Users/Amali/Desktop/Building_the_IoT_w._P2P_and_Cloud_Computing/IoTProject/node_modules/@babel/runtime/helpers/inherits.js\").default;\nvar _createSuper = require(\"C:/Users/Amali/Desktop/Building_the_IoT_w._P2P_and_Cloud_Computing/IoTProject/node_modules/@babel/runtime/helpers/createSuper.js\").default;\n/*! simple-peer. MIT License. Feross Aboukhadijeh <https://feross.org/opensource> */\nvar debug = require('debug')('simple-peer');\nvar getBrowserRTC = require('get-browser-rtc');\nvar randombytes = require('randombytes');\nvar stream = require('readable-stream');\nvar queueMicrotask = require('queue-microtask'); // TODO: remove when Node 10 is not supported\nvar errCode = require('err-code');\nvar _require = require('buffer'),\n  Buffer = _require.Buffer;\nvar MAX_BUFFERED_AMOUNT = 64 * 1024;\nvar ICECOMPLETE_TIMEOUT = 5 * 1000;\nvar CHANNEL_CLOSING_TIMEOUT = 5 * 1000;\n\n// HACK: Filter trickle lines when trickle is disabled #354\nfunction filterTrickle(sdp) {\n  return sdp.replace(/a=ice-options:trickle\\s\\n/g, '');\n}\nfunction warn(message) {\n  console.warn(message);\n}\n\n/**\n * WebRTC peer connection. Same API as node core `net.Socket`, plus a few extra methods.\n * Duplex stream.\n * @param {Object} opts\n */\nvar Peer = /*#__PURE__*/function (_stream$Duplex) {\n  \"use strict\";\n\n  _inherits(Peer, _stream$Duplex);\n  var _super = _createSuper(Peer);\n  function Peer(opts) {\n    var _this;\n    _classCallCheck(this, Peer);\n    opts = Object.assign({\n      allowHalfOpen: false\n    }, opts);\n    _this = _super.call(this, opts);\n    _this._id = randombytes(4).toString('hex').slice(0, 7);\n    _this._debug('new peer %o', opts);\n    _this.channelName = opts.initiator ? opts.channelName || randombytes(20).toString('hex') : null;\n    _this.initiator = opts.initiator || false;\n    _this.channelConfig = opts.channelConfig || Peer.channelConfig;\n    _this.channelNegotiated = _this.channelConfig.negotiated;\n    _this.config = Object.assign({}, Peer.config, opts.config);\n    _this.offerOptions = opts.offerOptions || {};\n    _this.answerOptions = opts.answerOptions || {};\n    _this.sdpTransform = opts.sdpTransform || function (sdp) {\n      return sdp;\n    };\n    _this.streams = opts.streams || (opts.stream ? [opts.stream] : []); // support old \"stream\" option\n    _this.trickle = opts.trickle !== undefined ? opts.trickle : true;\n    _this.allowHalfTrickle = opts.allowHalfTrickle !== undefined ? opts.allowHalfTrickle : false;\n    _this.iceCompleteTimeout = opts.iceCompleteTimeout || ICECOMPLETE_TIMEOUT;\n    _this.destroyed = false;\n    _this.destroying = false;\n    _this._connected = false;\n    _this.remoteAddress = undefined;\n    _this.remoteFamily = undefined;\n    _this.remotePort = undefined;\n    _this.localAddress = undefined;\n    _this.localFamily = undefined;\n    _this.localPort = undefined;\n    _this._wrtc = opts.wrtc && typeof opts.wrtc === 'object' ? opts.wrtc : getBrowserRTC();\n    if (!_this._wrtc) {\n      if (typeof window === 'undefined') {\n        throw errCode(new Error('No WebRTC support: Specify `opts.wrtc` option in this environment'), 'ERR_WEBRTC_SUPPORT');\n      } else {\n        throw errCode(new Error('No WebRTC support: Not a supported browser'), 'ERR_WEBRTC_SUPPORT');\n      }\n    }\n    _this._pcReady = false;\n    _this._channelReady = false;\n    _this._iceComplete = false; // ice candidate trickle done (got null candidate)\n    _this._iceCompleteTimer = null; // send an offer/answer anyway after some timeout\n    _this._channel = null;\n    _this._pendingCandidates = [];\n    _this._isNegotiating = false; // is this peer waiting for negotiation to complete?\n    _this._firstNegotiation = true;\n    _this._batchedNegotiation = false; // batch synchronous negotiations\n    _this._queuedNegotiation = false; // is there a queued negotiation request?\n    _this._sendersAwaitingStable = [];\n    _this._senderMap = new Map();\n    _this._closingInterval = null;\n    _this._remoteTracks = [];\n    _this._remoteStreams = [];\n    _this._chunk = null;\n    _this._cb = null;\n    _this._interval = null;\n    try {\n      _this._pc = new _this._wrtc.RTCPeerConnection(_this.config);\n    } catch (err) {\n      _this.destroy(errCode(err, 'ERR_PC_CONSTRUCTOR'));\n      return _possibleConstructorReturn(_this);\n    }\n\n    // We prefer feature detection whenever possible, but sometimes that's not\n    // possible for certain implementations.\n    _this._isReactNativeWebrtc = typeof _this._pc._peerConnectionId === 'number';\n    _this._pc.oniceconnectionstatechange = function () {\n      _this._onIceStateChange();\n    };\n    _this._pc.onicegatheringstatechange = function () {\n      _this._onIceStateChange();\n    };\n    _this._pc.onconnectionstatechange = function () {\n      _this._onConnectionStateChange();\n    };\n    _this._pc.onsignalingstatechange = function () {\n      _this._onSignalingStateChange();\n    };\n    _this._pc.onicecandidate = function (event) {\n      _this._onIceCandidate(event);\n    };\n\n    // HACK: Fix for odd Firefox behavior, see: https://github.com/feross/simple-peer/pull/783\n    if (typeof _this._pc.peerIdentity === 'object') {\n      _this._pc.peerIdentity.catch(function (err) {\n        _this.destroy(errCode(err, 'ERR_PC_PEER_IDENTITY'));\n      });\n    }\n\n    // Other spec events, unused by this implementation:\n    // - onconnectionstatechange\n    // - onicecandidateerror\n    // - onfingerprintfailure\n    // - onnegotiationneeded\n\n    if (_this.initiator || _this.channelNegotiated) {\n      _this._setupData({\n        channel: _this._pc.createDataChannel(_this.channelName, _this.channelConfig)\n      });\n    } else {\n      _this._pc.ondatachannel = function (event) {\n        _this._setupData(event);\n      };\n    }\n    if (_this.streams) {\n      _this.streams.forEach(function (stream) {\n        _this.addStream(stream);\n      });\n    }\n    _this._pc.ontrack = function (event) {\n      _this._onTrack(event);\n    };\n    _this._debug('initial negotiation');\n    _this._needsNegotiation();\n    _this._onFinishBound = function () {\n      _this._onFinish();\n    };\n    _this.once('finish', _this._onFinishBound);\n    return _this;\n  }\n  _createClass(Peer, [{\n    key: \"bufferSize\",\n    get: function get() {\n      return this._channel && this._channel.bufferedAmount || 0;\n    }\n\n    // HACK: it's possible channel.readyState is \"closing\" before peer.destroy() fires\n    // https://bugs.chromium.org/p/chromium/issues/detail?id=882743\n  }, {\n    key: \"connected\",\n    get: function get() {\n      return this._connected && this._channel.readyState === 'open';\n    }\n  }, {\n    key: \"address\",\n    value: function address() {\n      return {\n        port: this.localPort,\n        family: this.localFamily,\n        address: this.localAddress\n      };\n    }\n  }, {\n    key: \"signal\",\n    value: function signal(data) {\n      var _this2 = this;\n      if (this.destroying) return;\n      if (this.destroyed) throw errCode(new Error('cannot signal after peer is destroyed'), 'ERR_DESTROYED');\n      if (typeof data === 'string') {\n        try {\n          data = JSON.parse(data);\n        } catch (err) {\n          data = {};\n        }\n      }\n      this._debug('signal()');\n      if (data.renegotiate && this.initiator) {\n        this._debug('got request to renegotiate');\n        this._needsNegotiation();\n      }\n      if (data.transceiverRequest && this.initiator) {\n        this._debug('got request for transceiver');\n        this.addTransceiver(data.transceiverRequest.kind, data.transceiverRequest.init);\n      }\n      if (data.candidate) {\n        if (this._pc.remoteDescription && this._pc.remoteDescription.type) {\n          this._addIceCandidate(data.candidate);\n        } else {\n          this._pendingCandidates.push(data.candidate);\n        }\n      }\n      if (data.sdp) {\n        this._pc.setRemoteDescription(new this._wrtc.RTCSessionDescription(data)).then(function () {\n          if (_this2.destroyed) return;\n          _this2._pendingCandidates.forEach(function (candidate) {\n            _this2._addIceCandidate(candidate);\n          });\n          _this2._pendingCandidates = [];\n          if (_this2._pc.remoteDescription.type === 'offer') _this2._createAnswer();\n        }).catch(function (err) {\n          _this2.destroy(errCode(err, 'ERR_SET_REMOTE_DESCRIPTION'));\n        });\n      }\n      if (!data.sdp && !data.candidate && !data.renegotiate && !data.transceiverRequest) {\n        this.destroy(errCode(new Error('signal() called with invalid signal data'), 'ERR_SIGNALING'));\n      }\n    }\n  }, {\n    key: \"_addIceCandidate\",\n    value: function _addIceCandidate(candidate) {\n      var _this3 = this;\n      var iceCandidateObj = new this._wrtc.RTCIceCandidate(candidate);\n      this._pc.addIceCandidate(iceCandidateObj).catch(function (err) {\n        if (!iceCandidateObj.address || iceCandidateObj.address.endsWith('.local')) {\n          warn('Ignoring unsupported ICE candidate.');\n        } else {\n          _this3.destroy(errCode(err, 'ERR_ADD_ICE_CANDIDATE'));\n        }\n      });\n    }\n\n    /**\n     * Send text/binary data to the remote peer.\n     * @param {ArrayBufferView|ArrayBuffer|Buffer|string|Blob} chunk\n     */\n  }, {\n    key: \"send\",\n    value: function send(chunk) {\n      if (this.destroying) return;\n      if (this.destroyed) throw errCode(new Error('cannot send after peer is destroyed'), 'ERR_DESTROYED');\n      this._channel.send(chunk);\n    }\n\n    /**\n     * Add a Transceiver to the connection.\n     * @param {String} kind\n     * @param {Object} init\n     */\n  }, {\n    key: \"addTransceiver\",\n    value: function addTransceiver(kind, init) {\n      if (this.destroying) return;\n      if (this.destroyed) throw errCode(new Error('cannot addTransceiver after peer is destroyed'), 'ERR_DESTROYED');\n      this._debug('addTransceiver()');\n      if (this.initiator) {\n        try {\n          this._pc.addTransceiver(kind, init);\n          this._needsNegotiation();\n        } catch (err) {\n          this.destroy(errCode(err, 'ERR_ADD_TRANSCEIVER'));\n        }\n      } else {\n        this.emit('signal', {\n          // request initiator to renegotiate\n          type: 'transceiverRequest',\n          transceiverRequest: {\n            kind: kind,\n            init: init\n          }\n        });\n      }\n    }\n\n    /**\n     * Add a MediaStream to the connection.\n     * @param {MediaStream} stream\n     */\n  }, {\n    key: \"addStream\",\n    value: function addStream(stream) {\n      var _this4 = this;\n      if (this.destroying) return;\n      if (this.destroyed) throw errCode(new Error('cannot addStream after peer is destroyed'), 'ERR_DESTROYED');\n      this._debug('addStream()');\n      stream.getTracks().forEach(function (track) {\n        _this4.addTrack(track, stream);\n      });\n    }\n\n    /**\n     * Add a MediaStreamTrack to the connection.\n     * @param {MediaStreamTrack} track\n     * @param {MediaStream} stream\n     */\n  }, {\n    key: \"addTrack\",\n    value: function addTrack(track, stream) {\n      if (this.destroying) return;\n      if (this.destroyed) throw errCode(new Error('cannot addTrack after peer is destroyed'), 'ERR_DESTROYED');\n      this._debug('addTrack()');\n      var submap = this._senderMap.get(track) || new Map(); // nested Maps map [track, stream] to sender\n      var sender = submap.get(stream);\n      if (!sender) {\n        sender = this._pc.addTrack(track, stream);\n        submap.set(stream, sender);\n        this._senderMap.set(track, submap);\n        this._needsNegotiation();\n      } else if (sender.removed) {\n        throw errCode(new Error('Track has been removed. You should enable/disable tracks that you want to re-add.'), 'ERR_SENDER_REMOVED');\n      } else {\n        throw errCode(new Error('Track has already been added to that stream.'), 'ERR_SENDER_ALREADY_ADDED');\n      }\n    }\n\n    /**\n     * Replace a MediaStreamTrack by another in the connection.\n     * @param {MediaStreamTrack} oldTrack\n     * @param {MediaStreamTrack} newTrack\n     * @param {MediaStream} stream\n     */\n  }, {\n    key: \"replaceTrack\",\n    value: function replaceTrack(oldTrack, newTrack, stream) {\n      if (this.destroying) return;\n      if (this.destroyed) throw errCode(new Error('cannot replaceTrack after peer is destroyed'), 'ERR_DESTROYED');\n      this._debug('replaceTrack()');\n      var submap = this._senderMap.get(oldTrack);\n      var sender = submap ? submap.get(stream) : null;\n      if (!sender) {\n        throw errCode(new Error('Cannot replace track that was never added.'), 'ERR_TRACK_NOT_ADDED');\n      }\n      if (newTrack) this._senderMap.set(newTrack, submap);\n      if (sender.replaceTrack != null) {\n        sender.replaceTrack(newTrack);\n      } else {\n        this.destroy(errCode(new Error('replaceTrack is not supported in this browser'), 'ERR_UNSUPPORTED_REPLACETRACK'));\n      }\n    }\n\n    /**\n     * Remove a MediaStreamTrack from the connection.\n     * @param {MediaStreamTrack} track\n     * @param {MediaStream} stream\n     */\n  }, {\n    key: \"removeTrack\",\n    value: function removeTrack(track, stream) {\n      if (this.destroying) return;\n      if (this.destroyed) throw errCode(new Error('cannot removeTrack after peer is destroyed'), 'ERR_DESTROYED');\n      this._debug('removeSender()');\n      var submap = this._senderMap.get(track);\n      var sender = submap ? submap.get(stream) : null;\n      if (!sender) {\n        throw errCode(new Error('Cannot remove track that was never added.'), 'ERR_TRACK_NOT_ADDED');\n      }\n      try {\n        sender.removed = true;\n        this._pc.removeTrack(sender);\n      } catch (err) {\n        if (err.name === 'NS_ERROR_UNEXPECTED') {\n          this._sendersAwaitingStable.push(sender); // HACK: Firefox must wait until (signalingState === stable) https://bugzilla.mozilla.org/show_bug.cgi?id=1133874\n        } else {\n          this.destroy(errCode(err, 'ERR_REMOVE_TRACK'));\n        }\n      }\n      this._needsNegotiation();\n    }\n\n    /**\n     * Remove a MediaStream from the connection.\n     * @param {MediaStream} stream\n     */\n  }, {\n    key: \"removeStream\",\n    value: function removeStream(stream) {\n      var _this5 = this;\n      if (this.destroying) return;\n      if (this.destroyed) throw errCode(new Error('cannot removeStream after peer is destroyed'), 'ERR_DESTROYED');\n      this._debug('removeSenders()');\n      stream.getTracks().forEach(function (track) {\n        _this5.removeTrack(track, stream);\n      });\n    }\n  }, {\n    key: \"_needsNegotiation\",\n    value: function _needsNegotiation() {\n      var _this6 = this;\n      this._debug('_needsNegotiation');\n      if (this._batchedNegotiation) return; // batch synchronous renegotiations\n      this._batchedNegotiation = true;\n      queueMicrotask(function () {\n        _this6._batchedNegotiation = false;\n        if (_this6.initiator || !_this6._firstNegotiation) {\n          _this6._debug('starting batched negotiation');\n          _this6.negotiate();\n        } else {\n          _this6._debug('non-initiator initial negotiation request discarded');\n        }\n        _this6._firstNegotiation = false;\n      });\n    }\n  }, {\n    key: \"negotiate\",\n    value: function negotiate() {\n      var _this7 = this;\n      if (this.destroying) return;\n      if (this.destroyed) throw errCode(new Error('cannot negotiate after peer is destroyed'), 'ERR_DESTROYED');\n      if (this.initiator) {\n        if (this._isNegotiating) {\n          this._queuedNegotiation = true;\n          this._debug('already negotiating, queueing');\n        } else {\n          this._debug('start negotiation');\n          setTimeout(function () {\n            // HACK: Chrome crashes if we immediately call createOffer\n            _this7._createOffer();\n          }, 0);\n        }\n      } else {\n        if (this._isNegotiating) {\n          this._queuedNegotiation = true;\n          this._debug('already negotiating, queueing');\n        } else {\n          this._debug('requesting negotiation from initiator');\n          this.emit('signal', {\n            // request initiator to renegotiate\n            type: 'renegotiate',\n            renegotiate: true\n          });\n        }\n      }\n      this._isNegotiating = true;\n    }\n\n    // TODO: Delete this method once readable-stream is updated to contain a default\n    // implementation of destroy() that automatically calls _destroy()\n    // See: https://github.com/nodejs/readable-stream/issues/283\n  }, {\n    key: \"destroy\",\n    value: function destroy(err) {\n      this._destroy(err, function () {});\n    }\n  }, {\n    key: \"_destroy\",\n    value: function _destroy(err, cb) {\n      var _this8 = this;\n      if (this.destroyed || this.destroying) return;\n      this.destroying = true;\n      this._debug('destroying (error: %s)', err && (err.message || err));\n      queueMicrotask(function () {\n        // allow events concurrent with the call to _destroy() to fire (see #692)\n        _this8.destroyed = true;\n        _this8.destroying = false;\n        _this8._debug('destroy (error: %s)', err && (err.message || err));\n        _this8.readable = _this8.writable = false;\n        if (!_this8._readableState.ended) _this8.push(null);\n        if (!_this8._writableState.finished) _this8.end();\n        _this8._connected = false;\n        _this8._pcReady = false;\n        _this8._channelReady = false;\n        _this8._remoteTracks = null;\n        _this8._remoteStreams = null;\n        _this8._senderMap = null;\n        clearInterval(_this8._closingInterval);\n        _this8._closingInterval = null;\n        clearInterval(_this8._interval);\n        _this8._interval = null;\n        _this8._chunk = null;\n        _this8._cb = null;\n        if (_this8._onFinishBound) _this8.removeListener('finish', _this8._onFinishBound);\n        _this8._onFinishBound = null;\n        if (_this8._channel) {\n          try {\n            _this8._channel.close();\n          } catch (err) {}\n\n          // allow events concurrent with destruction to be handled\n          _this8._channel.onmessage = null;\n          _this8._channel.onopen = null;\n          _this8._channel.onclose = null;\n          _this8._channel.onerror = null;\n        }\n        if (_this8._pc) {\n          try {\n            _this8._pc.close();\n          } catch (err) {}\n\n          // allow events concurrent with destruction to be handled\n          _this8._pc.oniceconnectionstatechange = null;\n          _this8._pc.onicegatheringstatechange = null;\n          _this8._pc.onsignalingstatechange = null;\n          _this8._pc.onicecandidate = null;\n          _this8._pc.ontrack = null;\n          _this8._pc.ondatachannel = null;\n        }\n        _this8._pc = null;\n        _this8._channel = null;\n        if (err) _this8.emit('error', err);\n        _this8.emit('close');\n        cb();\n      });\n    }\n  }, {\n    key: \"_setupData\",\n    value: function _setupData(event) {\n      var _this9 = this;\n      if (!event.channel) {\n        // In some situations `pc.createDataChannel()` returns `undefined` (in wrtc),\n        // which is invalid behavior. Handle it gracefully.\n        // See: https://github.com/feross/simple-peer/issues/163\n        return this.destroy(errCode(new Error('Data channel event is missing `channel` property'), 'ERR_DATA_CHANNEL'));\n      }\n      this._channel = event.channel;\n      this._channel.binaryType = 'arraybuffer';\n      if (typeof this._channel.bufferedAmountLowThreshold === 'number') {\n        this._channel.bufferedAmountLowThreshold = MAX_BUFFERED_AMOUNT;\n      }\n      this.channelName = this._channel.label;\n      this._channel.onmessage = function (event) {\n        _this9._onChannelMessage(event);\n      };\n      this._channel.onbufferedamountlow = function () {\n        _this9._onChannelBufferedAmountLow();\n      };\n      this._channel.onopen = function () {\n        _this9._onChannelOpen();\n      };\n      this._channel.onclose = function () {\n        _this9._onChannelClose();\n      };\n      this._channel.onerror = function (event) {\n        var err = event.error instanceof Error ? event.error : new Error(\"Datachannel error: \".concat(event.message, \" \").concat(event.filename, \":\").concat(event.lineno, \":\").concat(event.colno));\n        _this9.destroy(errCode(err, 'ERR_DATA_CHANNEL'));\n      };\n\n      // HACK: Chrome will sometimes get stuck in readyState \"closing\", let's check for this condition\n      // https://bugs.chromium.org/p/chromium/issues/detail?id=882743\n      var isClosing = false;\n      this._closingInterval = setInterval(function () {\n        // No \"onclosing\" event\n        if (_this9._channel && _this9._channel.readyState === 'closing') {\n          if (isClosing) _this9._onChannelClose(); // closing timed out: equivalent to onclose firing\n          isClosing = true;\n        } else {\n          isClosing = false;\n        }\n      }, CHANNEL_CLOSING_TIMEOUT);\n    }\n  }, {\n    key: \"_read\",\n    value: function _read() {}\n  }, {\n    key: \"_write\",\n    value: function _write(chunk, encoding, cb) {\n      if (this.destroyed) return cb(errCode(new Error('cannot write after peer is destroyed'), 'ERR_DATA_CHANNEL'));\n      if (this._connected) {\n        try {\n          this.send(chunk);\n        } catch (err) {\n          return this.destroy(errCode(err, 'ERR_DATA_CHANNEL'));\n        }\n        if (this._channel.bufferedAmount > MAX_BUFFERED_AMOUNT) {\n          this._debug('start backpressure: bufferedAmount %d', this._channel.bufferedAmount);\n          this._cb = cb;\n        } else {\n          cb(null);\n        }\n      } else {\n        this._debug('write before connect');\n        this._chunk = chunk;\n        this._cb = cb;\n      }\n    }\n\n    // When stream finishes writing, close socket. Half open connections are not\n    // supported.\n  }, {\n    key: \"_onFinish\",\n    value: function _onFinish() {\n      var _this10 = this;\n      if (this.destroyed) return;\n\n      // Wait a bit before destroying so the socket flushes.\n      // TODO: is there a more reliable way to accomplish this?\n      var destroySoon = function destroySoon() {\n        setTimeout(function () {\n          return _this10.destroy();\n        }, 1000);\n      };\n      if (this._connected) {\n        destroySoon();\n      } else {\n        this.once('connect', destroySoon);\n      }\n    }\n  }, {\n    key: \"_startIceCompleteTimeout\",\n    value: function _startIceCompleteTimeout() {\n      var _this11 = this;\n      if (this.destroyed) return;\n      if (this._iceCompleteTimer) return;\n      this._debug('started iceComplete timeout');\n      this._iceCompleteTimer = setTimeout(function () {\n        if (!_this11._iceComplete) {\n          _this11._iceComplete = true;\n          _this11._debug('iceComplete timeout completed');\n          _this11.emit('iceTimeout');\n          _this11.emit('_iceComplete');\n        }\n      }, this.iceCompleteTimeout);\n    }\n  }, {\n    key: \"_createOffer\",\n    value: function _createOffer() {\n      var _this12 = this;\n      if (this.destroyed) return;\n      this._pc.createOffer(this.offerOptions).then(function (offer) {\n        if (_this12.destroyed) return;\n        if (!_this12.trickle && !_this12.allowHalfTrickle) offer.sdp = filterTrickle(offer.sdp);\n        offer.sdp = _this12.sdpTransform(offer.sdp);\n        var sendOffer = function sendOffer() {\n          if (_this12.destroyed) return;\n          var signal = _this12._pc.localDescription || offer;\n          _this12._debug('signal');\n          _this12.emit('signal', {\n            type: signal.type,\n            sdp: signal.sdp\n          });\n        };\n        var onSuccess = function onSuccess() {\n          _this12._debug('createOffer success');\n          if (_this12.destroyed) return;\n          if (_this12.trickle || _this12._iceComplete) sendOffer();else _this12.once('_iceComplete', sendOffer); // wait for candidates\n        };\n\n        var onError = function onError(err) {\n          _this12.destroy(errCode(err, 'ERR_SET_LOCAL_DESCRIPTION'));\n        };\n        _this12._pc.setLocalDescription(offer).then(onSuccess).catch(onError);\n      }).catch(function (err) {\n        _this12.destroy(errCode(err, 'ERR_CREATE_OFFER'));\n      });\n    }\n  }, {\n    key: \"_requestMissingTransceivers\",\n    value: function _requestMissingTransceivers() {\n      var _this13 = this;\n      if (this._pc.getTransceivers) {\n        this._pc.getTransceivers().forEach(function (transceiver) {\n          if (!transceiver.mid && transceiver.sender.track && !transceiver.requested) {\n            transceiver.requested = true; // HACK: Safari returns negotiated transceivers with a null mid\n            _this13.addTransceiver(transceiver.sender.track.kind);\n          }\n        });\n      }\n    }\n  }, {\n    key: \"_createAnswer\",\n    value: function _createAnswer() {\n      var _this14 = this;\n      if (this.destroyed) return;\n      this._pc.createAnswer(this.answerOptions).then(function (answer) {\n        if (_this14.destroyed) return;\n        if (!_this14.trickle && !_this14.allowHalfTrickle) answer.sdp = filterTrickle(answer.sdp);\n        answer.sdp = _this14.sdpTransform(answer.sdp);\n        var sendAnswer = function sendAnswer() {\n          if (_this14.destroyed) return;\n          var signal = _this14._pc.localDescription || answer;\n          _this14._debug('signal');\n          _this14.emit('signal', {\n            type: signal.type,\n            sdp: signal.sdp\n          });\n          if (!_this14.initiator) _this14._requestMissingTransceivers();\n        };\n        var onSuccess = function onSuccess() {\n          if (_this14.destroyed) return;\n          if (_this14.trickle || _this14._iceComplete) sendAnswer();else _this14.once('_iceComplete', sendAnswer);\n        };\n        var onError = function onError(err) {\n          _this14.destroy(errCode(err, 'ERR_SET_LOCAL_DESCRIPTION'));\n        };\n        _this14._pc.setLocalDescription(answer).then(onSuccess).catch(onError);\n      }).catch(function (err) {\n        _this14.destroy(errCode(err, 'ERR_CREATE_ANSWER'));\n      });\n    }\n  }, {\n    key: \"_onConnectionStateChange\",\n    value: function _onConnectionStateChange() {\n      if (this.destroyed) return;\n      if (this._pc.connectionState === 'failed') {\n        this.destroy(errCode(new Error('Connection failed.'), 'ERR_CONNECTION_FAILURE'));\n      }\n    }\n  }, {\n    key: \"_onIceStateChange\",\n    value: function _onIceStateChange() {\n      if (this.destroyed) return;\n      var iceConnectionState = this._pc.iceConnectionState;\n      var iceGatheringState = this._pc.iceGatheringState;\n      this._debug('iceStateChange (connection: %s) (gathering: %s)', iceConnectionState, iceGatheringState);\n      this.emit('iceStateChange', iceConnectionState, iceGatheringState);\n      if (iceConnectionState === 'connected' || iceConnectionState === 'completed') {\n        this._pcReady = true;\n        this._maybeReady();\n      }\n      if (iceConnectionState === 'failed') {\n        this.destroy(errCode(new Error('Ice connection failed.'), 'ERR_ICE_CONNECTION_FAILURE'));\n      }\n      if (iceConnectionState === 'closed') {\n        this.destroy(errCode(new Error('Ice connection closed.'), 'ERR_ICE_CONNECTION_CLOSED'));\n      }\n    }\n  }, {\n    key: \"getStats\",\n    value: function getStats(cb) {\n      var _this15 = this;\n      // statreports can come with a value array instead of properties\n      var flattenValues = function flattenValues(report) {\n        if (Object.prototype.toString.call(report.values) === '[object Array]') {\n          report.values.forEach(function (value) {\n            Object.assign(report, value);\n          });\n        }\n        return report;\n      };\n\n      // Promise-based getStats() (standard)\n      if (this._pc.getStats.length === 0 || this._isReactNativeWebrtc) {\n        this._pc.getStats().then(function (res) {\n          var reports = [];\n          res.forEach(function (report) {\n            reports.push(flattenValues(report));\n          });\n          cb(null, reports);\n        }, function (err) {\n          return cb(err);\n        });\n\n        // Single-parameter callback-based getStats() (non-standard)\n      } else if (this._pc.getStats.length > 0) {\n        this._pc.getStats(function (res) {\n          // If we destroy connection in `connect` callback this code might happen to run when actual connection is already closed\n          if (_this15.destroyed) return;\n          var reports = [];\n          res.result().forEach(function (result) {\n            var report = {};\n            result.names().forEach(function (name) {\n              report[name] = result.stat(name);\n            });\n            report.id = result.id;\n            report.type = result.type;\n            report.timestamp = result.timestamp;\n            reports.push(flattenValues(report));\n          });\n          cb(null, reports);\n        }, function (err) {\n          return cb(err);\n        });\n\n        // Unknown browser, skip getStats() since it's anyone's guess which style of\n        // getStats() they implement.\n      } else {\n        cb(null, []);\n      }\n    }\n  }, {\n    key: \"_maybeReady\",\n    value: function _maybeReady() {\n      var _this16 = this;\n      this._debug('maybeReady pc %s channel %s', this._pcReady, this._channelReady);\n      if (this._connected || this._connecting || !this._pcReady || !this._channelReady) return;\n      this._connecting = true;\n\n      // HACK: We can't rely on order here, for details see https://github.com/js-platform/node-webrtc/issues/339\n      var findCandidatePair = function findCandidatePair() {\n        if (_this16.destroyed) return;\n        _this16.getStats(function (err, items) {\n          if (_this16.destroyed) return;\n\n          // Treat getStats error as non-fatal. It's not essential.\n          if (err) items = [];\n          var remoteCandidates = {};\n          var localCandidates = {};\n          var candidatePairs = {};\n          var foundSelectedCandidatePair = false;\n          items.forEach(function (item) {\n            // TODO: Once all browsers support the hyphenated stats report types, remove\n            // the non-hypenated ones\n            if (item.type === 'remotecandidate' || item.type === 'remote-candidate') {\n              remoteCandidates[item.id] = item;\n            }\n            if (item.type === 'localcandidate' || item.type === 'local-candidate') {\n              localCandidates[item.id] = item;\n            }\n            if (item.type === 'candidatepair' || item.type === 'candidate-pair') {\n              candidatePairs[item.id] = item;\n            }\n          });\n          var setSelectedCandidatePair = function setSelectedCandidatePair(selectedCandidatePair) {\n            foundSelectedCandidatePair = true;\n            var local = localCandidates[selectedCandidatePair.localCandidateId];\n            if (local && (local.ip || local.address)) {\n              // Spec\n              _this16.localAddress = local.ip || local.address;\n              _this16.localPort = Number(local.port);\n            } else if (local && local.ipAddress) {\n              // Firefox\n              _this16.localAddress = local.ipAddress;\n              _this16.localPort = Number(local.portNumber);\n            } else if (typeof selectedCandidatePair.googLocalAddress === 'string') {\n              // TODO: remove this once Chrome 58 is released\n              local = selectedCandidatePair.googLocalAddress.split(':');\n              _this16.localAddress = local[0];\n              _this16.localPort = Number(local[1]);\n            }\n            if (_this16.localAddress) {\n              _this16.localFamily = _this16.localAddress.includes(':') ? 'IPv6' : 'IPv4';\n            }\n            var remote = remoteCandidates[selectedCandidatePair.remoteCandidateId];\n            if (remote && (remote.ip || remote.address)) {\n              // Spec\n              _this16.remoteAddress = remote.ip || remote.address;\n              _this16.remotePort = Number(remote.port);\n            } else if (remote && remote.ipAddress) {\n              // Firefox\n              _this16.remoteAddress = remote.ipAddress;\n              _this16.remotePort = Number(remote.portNumber);\n            } else if (typeof selectedCandidatePair.googRemoteAddress === 'string') {\n              // TODO: remove this once Chrome 58 is released\n              remote = selectedCandidatePair.googRemoteAddress.split(':');\n              _this16.remoteAddress = remote[0];\n              _this16.remotePort = Number(remote[1]);\n            }\n            if (_this16.remoteAddress) {\n              _this16.remoteFamily = _this16.remoteAddress.includes(':') ? 'IPv6' : 'IPv4';\n            }\n            _this16._debug('connect local: %s:%s remote: %s:%s', _this16.localAddress, _this16.localPort, _this16.remoteAddress, _this16.remotePort);\n          };\n          items.forEach(function (item) {\n            // Spec-compliant\n            if (item.type === 'transport' && item.selectedCandidatePairId) {\n              setSelectedCandidatePair(candidatePairs[item.selectedCandidatePairId]);\n            }\n\n            // Old implementations\n            if (item.type === 'googCandidatePair' && item.googActiveConnection === 'true' || (item.type === 'candidatepair' || item.type === 'candidate-pair') && item.selected) {\n              setSelectedCandidatePair(item);\n            }\n          });\n\n          // Ignore candidate pair selection in browsers like Safari 11 that do not have any local or remote candidates\n          // But wait until at least 1 candidate pair is available\n          if (!foundSelectedCandidatePair && (!Object.keys(candidatePairs).length || Object.keys(localCandidates).length)) {\n            setTimeout(findCandidatePair, 100);\n            return;\n          } else {\n            _this16._connecting = false;\n            _this16._connected = true;\n          }\n          if (_this16._chunk) {\n            try {\n              _this16.send(_this16._chunk);\n            } catch (err) {\n              return _this16.destroy(errCode(err, 'ERR_DATA_CHANNEL'));\n            }\n            _this16._chunk = null;\n            _this16._debug('sent chunk from \"write before connect\"');\n            var cb = _this16._cb;\n            _this16._cb = null;\n            cb(null);\n          }\n\n          // If `bufferedAmountLowThreshold` and 'onbufferedamountlow' are unsupported,\n          // fallback to using setInterval to implement backpressure.\n          if (typeof _this16._channel.bufferedAmountLowThreshold !== 'number') {\n            _this16._interval = setInterval(function () {\n              return _this16._onInterval();\n            }, 150);\n            if (_this16._interval.unref) _this16._interval.unref();\n          }\n          _this16._debug('connect');\n          _this16.emit('connect');\n        });\n      };\n      findCandidatePair();\n    }\n  }, {\n    key: \"_onInterval\",\n    value: function _onInterval() {\n      if (!this._cb || !this._channel || this._channel.bufferedAmount > MAX_BUFFERED_AMOUNT) {\n        return;\n      }\n      this._onChannelBufferedAmountLow();\n    }\n  }, {\n    key: \"_onSignalingStateChange\",\n    value: function _onSignalingStateChange() {\n      var _this17 = this;\n      if (this.destroyed) return;\n      if (this._pc.signalingState === 'stable') {\n        this._isNegotiating = false;\n\n        // HACK: Firefox doesn't yet support removing tracks when signalingState !== 'stable'\n        this._debug('flushing sender queue', this._sendersAwaitingStable);\n        this._sendersAwaitingStable.forEach(function (sender) {\n          _this17._pc.removeTrack(sender);\n          _this17._queuedNegotiation = true;\n        });\n        this._sendersAwaitingStable = [];\n        if (this._queuedNegotiation) {\n          this._debug('flushing negotiation queue');\n          this._queuedNegotiation = false;\n          this._needsNegotiation(); // negotiate again\n        } else {\n          this._debug('negotiated');\n          this.emit('negotiated');\n        }\n      }\n      this._debug('signalingStateChange %s', this._pc.signalingState);\n      this.emit('signalingStateChange', this._pc.signalingState);\n    }\n  }, {\n    key: \"_onIceCandidate\",\n    value: function _onIceCandidate(event) {\n      if (this.destroyed) return;\n      if (event.candidate && this.trickle) {\n        this.emit('signal', {\n          type: 'candidate',\n          candidate: {\n            candidate: event.candidate.candidate,\n            sdpMLineIndex: event.candidate.sdpMLineIndex,\n            sdpMid: event.candidate.sdpMid\n          }\n        });\n      } else if (!event.candidate && !this._iceComplete) {\n        this._iceComplete = true;\n        this.emit('_iceComplete');\n      }\n      // as soon as we've received one valid candidate start timeout\n      if (event.candidate) {\n        this._startIceCompleteTimeout();\n      }\n    }\n  }, {\n    key: \"_onChannelMessage\",\n    value: function _onChannelMessage(event) {\n      if (this.destroyed) return;\n      var data = event.data;\n      if (data instanceof ArrayBuffer) data = Buffer.from(data);\n      this.push(data);\n    }\n  }, {\n    key: \"_onChannelBufferedAmountLow\",\n    value: function _onChannelBufferedAmountLow() {\n      if (this.destroyed || !this._cb) return;\n      this._debug('ending backpressure: bufferedAmount %d', this._channel.bufferedAmount);\n      var cb = this._cb;\n      this._cb = null;\n      cb(null);\n    }\n  }, {\n    key: \"_onChannelOpen\",\n    value: function _onChannelOpen() {\n      if (this._connected || this.destroyed) return;\n      this._debug('on channel open');\n      this._channelReady = true;\n      this._maybeReady();\n    }\n  }, {\n    key: \"_onChannelClose\",\n    value: function _onChannelClose() {\n      if (this.destroyed) return;\n      this._debug('on channel close');\n      this.destroy();\n    }\n  }, {\n    key: \"_onTrack\",\n    value: function _onTrack(event) {\n      var _this18 = this;\n      if (this.destroyed) return;\n      event.streams.forEach(function (eventStream) {\n        _this18._debug('on track');\n        _this18.emit('track', event.track, eventStream);\n        _this18._remoteTracks.push({\n          track: event.track,\n          stream: eventStream\n        });\n        if (_this18._remoteStreams.some(function (remoteStream) {\n          return remoteStream.id === eventStream.id;\n        })) return; // Only fire one 'stream' event, even though there may be multiple tracks per stream\n\n        _this18._remoteStreams.push(eventStream);\n        queueMicrotask(function () {\n          _this18._debug('on stream');\n          _this18.emit('stream', eventStream); // ensure all tracks have been added\n        });\n      });\n    }\n  }, {\n    key: \"_debug\",\n    value: function _debug() {\n      var args = [].slice.call(arguments);\n      args[0] = '[' + this._id + '] ' + args[0];\n      debug.apply(null, args);\n    }\n  }]);\n  return Peer;\n}(stream.Duplex);\nPeer.WEBRTC_SUPPORT = !!getBrowserRTC();\n\n/**\n * Expose peer and data channel config for overriding all Peer\n * instances. Otherwise, just set opts.config or opts.channelConfig\n * when constructing a Peer.\n */\nPeer.config = {\n  iceServers: [{\n    urls: ['stun:stun.l.google.com:19302', 'stun:global.stun.twilio.com:3478']\n  }],\n  sdpSemantics: 'unified-plan'\n};\nPeer.channelConfig = {};\nmodule.exports = Peer;","map":{"version":3,"names":["debug","require","getBrowserRTC","randombytes","stream","queueMicrotask","errCode","Buffer","MAX_BUFFERED_AMOUNT","ICECOMPLETE_TIMEOUT","CHANNEL_CLOSING_TIMEOUT","filterTrickle","sdp","replace","warn","message","console","Peer","opts","Object","assign","allowHalfOpen","_id","toString","slice","_debug","channelName","initiator","channelConfig","channelNegotiated","negotiated","config","offerOptions","answerOptions","sdpTransform","streams","trickle","undefined","allowHalfTrickle","iceCompleteTimeout","destroyed","destroying","_connected","remoteAddress","remoteFamily","remotePort","localAddress","localFamily","localPort","_wrtc","wrtc","window","Error","_pcReady","_channelReady","_iceComplete","_iceCompleteTimer","_channel","_pendingCandidates","_isNegotiating","_firstNegotiation","_batchedNegotiation","_queuedNegotiation","_sendersAwaitingStable","_senderMap","Map","_closingInterval","_remoteTracks","_remoteStreams","_chunk","_cb","_interval","_pc","RTCPeerConnection","err","destroy","_isReactNativeWebrtc","_peerConnectionId","oniceconnectionstatechange","_onIceStateChange","onicegatheringstatechange","onconnectionstatechange","_onConnectionStateChange","onsignalingstatechange","_onSignalingStateChange","onicecandidate","event","_onIceCandidate","peerIdentity","catch","_setupData","channel","createDataChannel","ondatachannel","forEach","addStream","ontrack","_onTrack","_needsNegotiation","_onFinishBound","_onFinish","once","bufferedAmount","readyState","port","family","address","data","JSON","parse","renegotiate","transceiverRequest","addTransceiver","kind","init","candidate","remoteDescription","type","_addIceCandidate","push","setRemoteDescription","RTCSessionDescription","then","_createAnswer","iceCandidateObj","RTCIceCandidate","addIceCandidate","endsWith","chunk","send","emit","getTracks","track","addTrack","submap","get","sender","set","removed","oldTrack","newTrack","replaceTrack","removeTrack","name","negotiate","setTimeout","_createOffer","_destroy","cb","readable","writable","_readableState","ended","_writableState","finished","end","clearInterval","removeListener","close","onmessage","onopen","onclose","onerror","binaryType","bufferedAmountLowThreshold","label","_onChannelMessage","onbufferedamountlow","_onChannelBufferedAmountLow","_onChannelOpen","_onChannelClose","error","filename","lineno","colno","isClosing","setInterval","encoding","destroySoon","createOffer","offer","sendOffer","signal","localDescription","onSuccess","onError","setLocalDescription","getTransceivers","transceiver","mid","requested","createAnswer","answer","sendAnswer","_requestMissingTransceivers","connectionState","iceConnectionState","iceGatheringState","_maybeReady","flattenValues","report","prototype","call","values","value","getStats","length","res","reports","result","names","stat","id","timestamp","_connecting","findCandidatePair","items","remoteCandidates","localCandidates","candidatePairs","foundSelectedCandidatePair","item","setSelectedCandidatePair","selectedCandidatePair","local","localCandidateId","ip","Number","ipAddress","portNumber","googLocalAddress","split","includes","remote","remoteCandidateId","googRemoteAddress","selectedCandidatePairId","googActiveConnection","selected","keys","_onInterval","unref","signalingState","sdpMLineIndex","sdpMid","_startIceCompleteTimeout","ArrayBuffer","from","eventStream","some","remoteStream","args","arguments","apply","Duplex","WEBRTC_SUPPORT","iceServers","urls","sdpSemantics","module","exports"],"sources":["C:/Users/Amali/Desktop/Building_the_IoT_w._P2P_and_Cloud_Computing/IoTProject/node_modules/simple-peer/index.js"],"sourcesContent":["/*! simple-peer. MIT License. Feross Aboukhadijeh <https://feross.org/opensource> */\nconst debug = require('debug')('simple-peer')\nconst getBrowserRTC = require('get-browser-rtc')\nconst randombytes = require('randombytes')\nconst stream = require('readable-stream')\nconst queueMicrotask = require('queue-microtask') // TODO: remove when Node 10 is not supported\nconst errCode = require('err-code')\nconst { Buffer } = require('buffer')\n\nconst MAX_BUFFERED_AMOUNT = 64 * 1024\nconst ICECOMPLETE_TIMEOUT = 5 * 1000\nconst CHANNEL_CLOSING_TIMEOUT = 5 * 1000\n\n// HACK: Filter trickle lines when trickle is disabled #354\nfunction filterTrickle (sdp) {\n  return sdp.replace(/a=ice-options:trickle\\s\\n/g, '')\n}\n\nfunction warn (message) {\n  console.warn(message)\n}\n\n/**\n * WebRTC peer connection. Same API as node core `net.Socket`, plus a few extra methods.\n * Duplex stream.\n * @param {Object} opts\n */\nclass Peer extends stream.Duplex {\n  constructor (opts) {\n    opts = Object.assign({\n      allowHalfOpen: false\n    }, opts)\n\n    super(opts)\n\n    this._id = randombytes(4).toString('hex').slice(0, 7)\n    this._debug('new peer %o', opts)\n\n    this.channelName = opts.initiator\n      ? opts.channelName || randombytes(20).toString('hex')\n      : null\n\n    this.initiator = opts.initiator || false\n    this.channelConfig = opts.channelConfig || Peer.channelConfig\n    this.channelNegotiated = this.channelConfig.negotiated\n    this.config = Object.assign({}, Peer.config, opts.config)\n    this.offerOptions = opts.offerOptions || {}\n    this.answerOptions = opts.answerOptions || {}\n    this.sdpTransform = opts.sdpTransform || (sdp => sdp)\n    this.streams = opts.streams || (opts.stream ? [opts.stream] : []) // support old \"stream\" option\n    this.trickle = opts.trickle !== undefined ? opts.trickle : true\n    this.allowHalfTrickle = opts.allowHalfTrickle !== undefined ? opts.allowHalfTrickle : false\n    this.iceCompleteTimeout = opts.iceCompleteTimeout || ICECOMPLETE_TIMEOUT\n\n    this.destroyed = false\n    this.destroying = false\n    this._connected = false\n\n    this.remoteAddress = undefined\n    this.remoteFamily = undefined\n    this.remotePort = undefined\n    this.localAddress = undefined\n    this.localFamily = undefined\n    this.localPort = undefined\n\n    this._wrtc = (opts.wrtc && typeof opts.wrtc === 'object')\n      ? opts.wrtc\n      : getBrowserRTC()\n\n    if (!this._wrtc) {\n      if (typeof window === 'undefined') {\n        throw errCode(new Error('No WebRTC support: Specify `opts.wrtc` option in this environment'), 'ERR_WEBRTC_SUPPORT')\n      } else {\n        throw errCode(new Error('No WebRTC support: Not a supported browser'), 'ERR_WEBRTC_SUPPORT')\n      }\n    }\n\n    this._pcReady = false\n    this._channelReady = false\n    this._iceComplete = false // ice candidate trickle done (got null candidate)\n    this._iceCompleteTimer = null // send an offer/answer anyway after some timeout\n    this._channel = null\n    this._pendingCandidates = []\n\n    this._isNegotiating = false // is this peer waiting for negotiation to complete?\n    this._firstNegotiation = true\n    this._batchedNegotiation = false // batch synchronous negotiations\n    this._queuedNegotiation = false // is there a queued negotiation request?\n    this._sendersAwaitingStable = []\n    this._senderMap = new Map()\n    this._closingInterval = null\n\n    this._remoteTracks = []\n    this._remoteStreams = []\n\n    this._chunk = null\n    this._cb = null\n    this._interval = null\n\n    try {\n      this._pc = new (this._wrtc.RTCPeerConnection)(this.config)\n    } catch (err) {\n      this.destroy(errCode(err, 'ERR_PC_CONSTRUCTOR'))\n      return\n    }\n\n    // We prefer feature detection whenever possible, but sometimes that's not\n    // possible for certain implementations.\n    this._isReactNativeWebrtc = typeof this._pc._peerConnectionId === 'number'\n\n    this._pc.oniceconnectionstatechange = () => {\n      this._onIceStateChange()\n    }\n    this._pc.onicegatheringstatechange = () => {\n      this._onIceStateChange()\n    }\n    this._pc.onconnectionstatechange = () => {\n      this._onConnectionStateChange()\n    }\n    this._pc.onsignalingstatechange = () => {\n      this._onSignalingStateChange()\n    }\n    this._pc.onicecandidate = event => {\n      this._onIceCandidate(event)\n    }\n\n    // HACK: Fix for odd Firefox behavior, see: https://github.com/feross/simple-peer/pull/783\n    if (typeof this._pc.peerIdentity === 'object') {\n      this._pc.peerIdentity.catch(err => {\n        this.destroy(errCode(err, 'ERR_PC_PEER_IDENTITY'))\n      })\n    }\n\n    // Other spec events, unused by this implementation:\n    // - onconnectionstatechange\n    // - onicecandidateerror\n    // - onfingerprintfailure\n    // - onnegotiationneeded\n\n    if (this.initiator || this.channelNegotiated) {\n      this._setupData({\n        channel: this._pc.createDataChannel(this.channelName, this.channelConfig)\n      })\n    } else {\n      this._pc.ondatachannel = event => {\n        this._setupData(event)\n      }\n    }\n\n    if (this.streams) {\n      this.streams.forEach(stream => {\n        this.addStream(stream)\n      })\n    }\n    this._pc.ontrack = event => {\n      this._onTrack(event)\n    }\n\n    this._debug('initial negotiation')\n    this._needsNegotiation()\n\n    this._onFinishBound = () => {\n      this._onFinish()\n    }\n    this.once('finish', this._onFinishBound)\n  }\n\n  get bufferSize () {\n    return (this._channel && this._channel.bufferedAmount) || 0\n  }\n\n  // HACK: it's possible channel.readyState is \"closing\" before peer.destroy() fires\n  // https://bugs.chromium.org/p/chromium/issues/detail?id=882743\n  get connected () {\n    return (this._connected && this._channel.readyState === 'open')\n  }\n\n  address () {\n    return { port: this.localPort, family: this.localFamily, address: this.localAddress }\n  }\n\n  signal (data) {\n    if (this.destroying) return\n    if (this.destroyed) throw errCode(new Error('cannot signal after peer is destroyed'), 'ERR_DESTROYED')\n    if (typeof data === 'string') {\n      try {\n        data = JSON.parse(data)\n      } catch (err) {\n        data = {}\n      }\n    }\n    this._debug('signal()')\n\n    if (data.renegotiate && this.initiator) {\n      this._debug('got request to renegotiate')\n      this._needsNegotiation()\n    }\n    if (data.transceiverRequest && this.initiator) {\n      this._debug('got request for transceiver')\n      this.addTransceiver(data.transceiverRequest.kind, data.transceiverRequest.init)\n    }\n    if (data.candidate) {\n      if (this._pc.remoteDescription && this._pc.remoteDescription.type) {\n        this._addIceCandidate(data.candidate)\n      } else {\n        this._pendingCandidates.push(data.candidate)\n      }\n    }\n    if (data.sdp) {\n      this._pc.setRemoteDescription(new (this._wrtc.RTCSessionDescription)(data))\n        .then(() => {\n          if (this.destroyed) return\n\n          this._pendingCandidates.forEach(candidate => {\n            this._addIceCandidate(candidate)\n          })\n          this._pendingCandidates = []\n\n          if (this._pc.remoteDescription.type === 'offer') this._createAnswer()\n        })\n        .catch(err => {\n          this.destroy(errCode(err, 'ERR_SET_REMOTE_DESCRIPTION'))\n        })\n    }\n    if (!data.sdp && !data.candidate && !data.renegotiate && !data.transceiverRequest) {\n      this.destroy(errCode(new Error('signal() called with invalid signal data'), 'ERR_SIGNALING'))\n    }\n  }\n\n  _addIceCandidate (candidate) {\n    const iceCandidateObj = new this._wrtc.RTCIceCandidate(candidate)\n    this._pc.addIceCandidate(iceCandidateObj)\n      .catch(err => {\n        if (!iceCandidateObj.address || iceCandidateObj.address.endsWith('.local')) {\n          warn('Ignoring unsupported ICE candidate.')\n        } else {\n          this.destroy(errCode(err, 'ERR_ADD_ICE_CANDIDATE'))\n        }\n      })\n  }\n\n  /**\n   * Send text/binary data to the remote peer.\n   * @param {ArrayBufferView|ArrayBuffer|Buffer|string|Blob} chunk\n   */\n  send (chunk) {\n    if (this.destroying) return\n    if (this.destroyed) throw errCode(new Error('cannot send after peer is destroyed'), 'ERR_DESTROYED')\n    this._channel.send(chunk)\n  }\n\n  /**\n   * Add a Transceiver to the connection.\n   * @param {String} kind\n   * @param {Object} init\n   */\n  addTransceiver (kind, init) {\n    if (this.destroying) return\n    if (this.destroyed) throw errCode(new Error('cannot addTransceiver after peer is destroyed'), 'ERR_DESTROYED')\n    this._debug('addTransceiver()')\n\n    if (this.initiator) {\n      try {\n        this._pc.addTransceiver(kind, init)\n        this._needsNegotiation()\n      } catch (err) {\n        this.destroy(errCode(err, 'ERR_ADD_TRANSCEIVER'))\n      }\n    } else {\n      this.emit('signal', { // request initiator to renegotiate\n        type: 'transceiverRequest',\n        transceiverRequest: { kind, init }\n      })\n    }\n  }\n\n  /**\n   * Add a MediaStream to the connection.\n   * @param {MediaStream} stream\n   */\n  addStream (stream) {\n    if (this.destroying) return\n    if (this.destroyed) throw errCode(new Error('cannot addStream after peer is destroyed'), 'ERR_DESTROYED')\n    this._debug('addStream()')\n\n    stream.getTracks().forEach(track => {\n      this.addTrack(track, stream)\n    })\n  }\n\n  /**\n   * Add a MediaStreamTrack to the connection.\n   * @param {MediaStreamTrack} track\n   * @param {MediaStream} stream\n   */\n  addTrack (track, stream) {\n    if (this.destroying) return\n    if (this.destroyed) throw errCode(new Error('cannot addTrack after peer is destroyed'), 'ERR_DESTROYED')\n    this._debug('addTrack()')\n\n    const submap = this._senderMap.get(track) || new Map() // nested Maps map [track, stream] to sender\n    let sender = submap.get(stream)\n    if (!sender) {\n      sender = this._pc.addTrack(track, stream)\n      submap.set(stream, sender)\n      this._senderMap.set(track, submap)\n      this._needsNegotiation()\n    } else if (sender.removed) {\n      throw errCode(new Error('Track has been removed. You should enable/disable tracks that you want to re-add.'), 'ERR_SENDER_REMOVED')\n    } else {\n      throw errCode(new Error('Track has already been added to that stream.'), 'ERR_SENDER_ALREADY_ADDED')\n    }\n  }\n\n  /**\n   * Replace a MediaStreamTrack by another in the connection.\n   * @param {MediaStreamTrack} oldTrack\n   * @param {MediaStreamTrack} newTrack\n   * @param {MediaStream} stream\n   */\n  replaceTrack (oldTrack, newTrack, stream) {\n    if (this.destroying) return\n    if (this.destroyed) throw errCode(new Error('cannot replaceTrack after peer is destroyed'), 'ERR_DESTROYED')\n    this._debug('replaceTrack()')\n\n    const submap = this._senderMap.get(oldTrack)\n    const sender = submap ? submap.get(stream) : null\n    if (!sender) {\n      throw errCode(new Error('Cannot replace track that was never added.'), 'ERR_TRACK_NOT_ADDED')\n    }\n    if (newTrack) this._senderMap.set(newTrack, submap)\n\n    if (sender.replaceTrack != null) {\n      sender.replaceTrack(newTrack)\n    } else {\n      this.destroy(errCode(new Error('replaceTrack is not supported in this browser'), 'ERR_UNSUPPORTED_REPLACETRACK'))\n    }\n  }\n\n  /**\n   * Remove a MediaStreamTrack from the connection.\n   * @param {MediaStreamTrack} track\n   * @param {MediaStream} stream\n   */\n  removeTrack (track, stream) {\n    if (this.destroying) return\n    if (this.destroyed) throw errCode(new Error('cannot removeTrack after peer is destroyed'), 'ERR_DESTROYED')\n    this._debug('removeSender()')\n\n    const submap = this._senderMap.get(track)\n    const sender = submap ? submap.get(stream) : null\n    if (!sender) {\n      throw errCode(new Error('Cannot remove track that was never added.'), 'ERR_TRACK_NOT_ADDED')\n    }\n    try {\n      sender.removed = true\n      this._pc.removeTrack(sender)\n    } catch (err) {\n      if (err.name === 'NS_ERROR_UNEXPECTED') {\n        this._sendersAwaitingStable.push(sender) // HACK: Firefox must wait until (signalingState === stable) https://bugzilla.mozilla.org/show_bug.cgi?id=1133874\n      } else {\n        this.destroy(errCode(err, 'ERR_REMOVE_TRACK'))\n      }\n    }\n    this._needsNegotiation()\n  }\n\n  /**\n   * Remove a MediaStream from the connection.\n   * @param {MediaStream} stream\n   */\n  removeStream (stream) {\n    if (this.destroying) return\n    if (this.destroyed) throw errCode(new Error('cannot removeStream after peer is destroyed'), 'ERR_DESTROYED')\n    this._debug('removeSenders()')\n\n    stream.getTracks().forEach(track => {\n      this.removeTrack(track, stream)\n    })\n  }\n\n  _needsNegotiation () {\n    this._debug('_needsNegotiation')\n    if (this._batchedNegotiation) return // batch synchronous renegotiations\n    this._batchedNegotiation = true\n    queueMicrotask(() => {\n      this._batchedNegotiation = false\n      if (this.initiator || !this._firstNegotiation) {\n        this._debug('starting batched negotiation')\n        this.negotiate()\n      } else {\n        this._debug('non-initiator initial negotiation request discarded')\n      }\n      this._firstNegotiation = false\n    })\n  }\n\n  negotiate () {\n    if (this.destroying) return\n    if (this.destroyed) throw errCode(new Error('cannot negotiate after peer is destroyed'), 'ERR_DESTROYED')\n\n    if (this.initiator) {\n      if (this._isNegotiating) {\n        this._queuedNegotiation = true\n        this._debug('already negotiating, queueing')\n      } else {\n        this._debug('start negotiation')\n        setTimeout(() => { // HACK: Chrome crashes if we immediately call createOffer\n          this._createOffer()\n        }, 0)\n      }\n    } else {\n      if (this._isNegotiating) {\n        this._queuedNegotiation = true\n        this._debug('already negotiating, queueing')\n      } else {\n        this._debug('requesting negotiation from initiator')\n        this.emit('signal', { // request initiator to renegotiate\n          type: 'renegotiate',\n          renegotiate: true\n        })\n      }\n    }\n    this._isNegotiating = true\n  }\n\n  // TODO: Delete this method once readable-stream is updated to contain a default\n  // implementation of destroy() that automatically calls _destroy()\n  // See: https://github.com/nodejs/readable-stream/issues/283\n  destroy (err) {\n    this._destroy(err, () => {})\n  }\n\n  _destroy (err, cb) {\n    if (this.destroyed || this.destroying) return\n    this.destroying = true\n\n    this._debug('destroying (error: %s)', err && (err.message || err))\n\n    queueMicrotask(() => { // allow events concurrent with the call to _destroy() to fire (see #692)\n      this.destroyed = true\n      this.destroying = false\n\n      this._debug('destroy (error: %s)', err && (err.message || err))\n\n      this.readable = this.writable = false\n\n      if (!this._readableState.ended) this.push(null)\n      if (!this._writableState.finished) this.end()\n\n      this._connected = false\n      this._pcReady = false\n      this._channelReady = false\n      this._remoteTracks = null\n      this._remoteStreams = null\n      this._senderMap = null\n\n      clearInterval(this._closingInterval)\n      this._closingInterval = null\n\n      clearInterval(this._interval)\n      this._interval = null\n      this._chunk = null\n      this._cb = null\n\n      if (this._onFinishBound) this.removeListener('finish', this._onFinishBound)\n      this._onFinishBound = null\n\n      if (this._channel) {\n        try {\n          this._channel.close()\n        } catch (err) {}\n\n        // allow events concurrent with destruction to be handled\n        this._channel.onmessage = null\n        this._channel.onopen = null\n        this._channel.onclose = null\n        this._channel.onerror = null\n      }\n      if (this._pc) {\n        try {\n          this._pc.close()\n        } catch (err) {}\n\n        // allow events concurrent with destruction to be handled\n        this._pc.oniceconnectionstatechange = null\n        this._pc.onicegatheringstatechange = null\n        this._pc.onsignalingstatechange = null\n        this._pc.onicecandidate = null\n        this._pc.ontrack = null\n        this._pc.ondatachannel = null\n      }\n      this._pc = null\n      this._channel = null\n\n      if (err) this.emit('error', err)\n      this.emit('close')\n      cb()\n    })\n  }\n\n  _setupData (event) {\n    if (!event.channel) {\n      // In some situations `pc.createDataChannel()` returns `undefined` (in wrtc),\n      // which is invalid behavior. Handle it gracefully.\n      // See: https://github.com/feross/simple-peer/issues/163\n      return this.destroy(errCode(new Error('Data channel event is missing `channel` property'), 'ERR_DATA_CHANNEL'))\n    }\n\n    this._channel = event.channel\n    this._channel.binaryType = 'arraybuffer'\n\n    if (typeof this._channel.bufferedAmountLowThreshold === 'number') {\n      this._channel.bufferedAmountLowThreshold = MAX_BUFFERED_AMOUNT\n    }\n\n    this.channelName = this._channel.label\n\n    this._channel.onmessage = event => {\n      this._onChannelMessage(event)\n    }\n    this._channel.onbufferedamountlow = () => {\n      this._onChannelBufferedAmountLow()\n    }\n    this._channel.onopen = () => {\n      this._onChannelOpen()\n    }\n    this._channel.onclose = () => {\n      this._onChannelClose()\n    }\n    this._channel.onerror = event => {\n      const err = event.error instanceof Error\n        ? event.error\n        : new Error(`Datachannel error: ${event.message} ${event.filename}:${event.lineno}:${event.colno}`)\n      this.destroy(errCode(err, 'ERR_DATA_CHANNEL'))\n    }\n\n    // HACK: Chrome will sometimes get stuck in readyState \"closing\", let's check for this condition\n    // https://bugs.chromium.org/p/chromium/issues/detail?id=882743\n    let isClosing = false\n    this._closingInterval = setInterval(() => { // No \"onclosing\" event\n      if (this._channel && this._channel.readyState === 'closing') {\n        if (isClosing) this._onChannelClose() // closing timed out: equivalent to onclose firing\n        isClosing = true\n      } else {\n        isClosing = false\n      }\n    }, CHANNEL_CLOSING_TIMEOUT)\n  }\n\n  _read () {}\n\n  _write (chunk, encoding, cb) {\n    if (this.destroyed) return cb(errCode(new Error('cannot write after peer is destroyed'), 'ERR_DATA_CHANNEL'))\n\n    if (this._connected) {\n      try {\n        this.send(chunk)\n      } catch (err) {\n        return this.destroy(errCode(err, 'ERR_DATA_CHANNEL'))\n      }\n      if (this._channel.bufferedAmount > MAX_BUFFERED_AMOUNT) {\n        this._debug('start backpressure: bufferedAmount %d', this._channel.bufferedAmount)\n        this._cb = cb\n      } else {\n        cb(null)\n      }\n    } else {\n      this._debug('write before connect')\n      this._chunk = chunk\n      this._cb = cb\n    }\n  }\n\n  // When stream finishes writing, close socket. Half open connections are not\n  // supported.\n  _onFinish () {\n    if (this.destroyed) return\n\n    // Wait a bit before destroying so the socket flushes.\n    // TODO: is there a more reliable way to accomplish this?\n    const destroySoon = () => {\n      setTimeout(() => this.destroy(), 1000)\n    }\n\n    if (this._connected) {\n      destroySoon()\n    } else {\n      this.once('connect', destroySoon)\n    }\n  }\n\n  _startIceCompleteTimeout () {\n    if (this.destroyed) return\n    if (this._iceCompleteTimer) return\n    this._debug('started iceComplete timeout')\n    this._iceCompleteTimer = setTimeout(() => {\n      if (!this._iceComplete) {\n        this._iceComplete = true\n        this._debug('iceComplete timeout completed')\n        this.emit('iceTimeout')\n        this.emit('_iceComplete')\n      }\n    }, this.iceCompleteTimeout)\n  }\n\n  _createOffer () {\n    if (this.destroyed) return\n\n    this._pc.createOffer(this.offerOptions)\n      .then(offer => {\n        if (this.destroyed) return\n        if (!this.trickle && !this.allowHalfTrickle) offer.sdp = filterTrickle(offer.sdp)\n        offer.sdp = this.sdpTransform(offer.sdp)\n\n        const sendOffer = () => {\n          if (this.destroyed) return\n          const signal = this._pc.localDescription || offer\n          this._debug('signal')\n          this.emit('signal', {\n            type: signal.type,\n            sdp: signal.sdp\n          })\n        }\n\n        const onSuccess = () => {\n          this._debug('createOffer success')\n          if (this.destroyed) return\n          if (this.trickle || this._iceComplete) sendOffer()\n          else this.once('_iceComplete', sendOffer) // wait for candidates\n        }\n\n        const onError = err => {\n          this.destroy(errCode(err, 'ERR_SET_LOCAL_DESCRIPTION'))\n        }\n\n        this._pc.setLocalDescription(offer)\n          .then(onSuccess)\n          .catch(onError)\n      })\n      .catch(err => {\n        this.destroy(errCode(err, 'ERR_CREATE_OFFER'))\n      })\n  }\n\n  _requestMissingTransceivers () {\n    if (this._pc.getTransceivers) {\n      this._pc.getTransceivers().forEach(transceiver => {\n        if (!transceiver.mid && transceiver.sender.track && !transceiver.requested) {\n          transceiver.requested = true // HACK: Safari returns negotiated transceivers with a null mid\n          this.addTransceiver(transceiver.sender.track.kind)\n        }\n      })\n    }\n  }\n\n  _createAnswer () {\n    if (this.destroyed) return\n\n    this._pc.createAnswer(this.answerOptions)\n      .then(answer => {\n        if (this.destroyed) return\n        if (!this.trickle && !this.allowHalfTrickle) answer.sdp = filterTrickle(answer.sdp)\n        answer.sdp = this.sdpTransform(answer.sdp)\n\n        const sendAnswer = () => {\n          if (this.destroyed) return\n          const signal = this._pc.localDescription || answer\n          this._debug('signal')\n          this.emit('signal', {\n            type: signal.type,\n            sdp: signal.sdp\n          })\n          if (!this.initiator) this._requestMissingTransceivers()\n        }\n\n        const onSuccess = () => {\n          if (this.destroyed) return\n          if (this.trickle || this._iceComplete) sendAnswer()\n          else this.once('_iceComplete', sendAnswer)\n        }\n\n        const onError = err => {\n          this.destroy(errCode(err, 'ERR_SET_LOCAL_DESCRIPTION'))\n        }\n\n        this._pc.setLocalDescription(answer)\n          .then(onSuccess)\n          .catch(onError)\n      })\n      .catch(err => {\n        this.destroy(errCode(err, 'ERR_CREATE_ANSWER'))\n      })\n  }\n\n  _onConnectionStateChange () {\n    if (this.destroyed) return\n    if (this._pc.connectionState === 'failed') {\n      this.destroy(errCode(new Error('Connection failed.'), 'ERR_CONNECTION_FAILURE'))\n    }\n  }\n\n  _onIceStateChange () {\n    if (this.destroyed) return\n    const iceConnectionState = this._pc.iceConnectionState\n    const iceGatheringState = this._pc.iceGatheringState\n\n    this._debug(\n      'iceStateChange (connection: %s) (gathering: %s)',\n      iceConnectionState,\n      iceGatheringState\n    )\n    this.emit('iceStateChange', iceConnectionState, iceGatheringState)\n\n    if (iceConnectionState === 'connected' || iceConnectionState === 'completed') {\n      this._pcReady = true\n      this._maybeReady()\n    }\n    if (iceConnectionState === 'failed') {\n      this.destroy(errCode(new Error('Ice connection failed.'), 'ERR_ICE_CONNECTION_FAILURE'))\n    }\n    if (iceConnectionState === 'closed') {\n      this.destroy(errCode(new Error('Ice connection closed.'), 'ERR_ICE_CONNECTION_CLOSED'))\n    }\n  }\n\n  getStats (cb) {\n    // statreports can come with a value array instead of properties\n    const flattenValues = report => {\n      if (Object.prototype.toString.call(report.values) === '[object Array]') {\n        report.values.forEach(value => {\n          Object.assign(report, value)\n        })\n      }\n      return report\n    }\n\n    // Promise-based getStats() (standard)\n    if (this._pc.getStats.length === 0 || this._isReactNativeWebrtc) {\n      this._pc.getStats()\n        .then(res => {\n          const reports = []\n          res.forEach(report => {\n            reports.push(flattenValues(report))\n          })\n          cb(null, reports)\n        }, err => cb(err))\n\n    // Single-parameter callback-based getStats() (non-standard)\n    } else if (this._pc.getStats.length > 0) {\n      this._pc.getStats(res => {\n        // If we destroy connection in `connect` callback this code might happen to run when actual connection is already closed\n        if (this.destroyed) return\n\n        const reports = []\n        res.result().forEach(result => {\n          const report = {}\n          result.names().forEach(name => {\n            report[name] = result.stat(name)\n          })\n          report.id = result.id\n          report.type = result.type\n          report.timestamp = result.timestamp\n          reports.push(flattenValues(report))\n        })\n        cb(null, reports)\n      }, err => cb(err))\n\n    // Unknown browser, skip getStats() since it's anyone's guess which style of\n    // getStats() they implement.\n    } else {\n      cb(null, [])\n    }\n  }\n\n  _maybeReady () {\n    this._debug('maybeReady pc %s channel %s', this._pcReady, this._channelReady)\n    if (this._connected || this._connecting || !this._pcReady || !this._channelReady) return\n\n    this._connecting = true\n\n    // HACK: We can't rely on order here, for details see https://github.com/js-platform/node-webrtc/issues/339\n    const findCandidatePair = () => {\n      if (this.destroyed) return\n\n      this.getStats((err, items) => {\n        if (this.destroyed) return\n\n        // Treat getStats error as non-fatal. It's not essential.\n        if (err) items = []\n\n        const remoteCandidates = {}\n        const localCandidates = {}\n        const candidatePairs = {}\n        let foundSelectedCandidatePair = false\n\n        items.forEach(item => {\n          // TODO: Once all browsers support the hyphenated stats report types, remove\n          // the non-hypenated ones\n          if (item.type === 'remotecandidate' || item.type === 'remote-candidate') {\n            remoteCandidates[item.id] = item\n          }\n          if (item.type === 'localcandidate' || item.type === 'local-candidate') {\n            localCandidates[item.id] = item\n          }\n          if (item.type === 'candidatepair' || item.type === 'candidate-pair') {\n            candidatePairs[item.id] = item\n          }\n        })\n\n        const setSelectedCandidatePair = selectedCandidatePair => {\n          foundSelectedCandidatePair = true\n\n          let local = localCandidates[selectedCandidatePair.localCandidateId]\n\n          if (local && (local.ip || local.address)) {\n            // Spec\n            this.localAddress = local.ip || local.address\n            this.localPort = Number(local.port)\n          } else if (local && local.ipAddress) {\n            // Firefox\n            this.localAddress = local.ipAddress\n            this.localPort = Number(local.portNumber)\n          } else if (typeof selectedCandidatePair.googLocalAddress === 'string') {\n            // TODO: remove this once Chrome 58 is released\n            local = selectedCandidatePair.googLocalAddress.split(':')\n            this.localAddress = local[0]\n            this.localPort = Number(local[1])\n          }\n          if (this.localAddress) {\n            this.localFamily = this.localAddress.includes(':') ? 'IPv6' : 'IPv4'\n          }\n\n          let remote = remoteCandidates[selectedCandidatePair.remoteCandidateId]\n\n          if (remote && (remote.ip || remote.address)) {\n            // Spec\n            this.remoteAddress = remote.ip || remote.address\n            this.remotePort = Number(remote.port)\n          } else if (remote && remote.ipAddress) {\n            // Firefox\n            this.remoteAddress = remote.ipAddress\n            this.remotePort = Number(remote.portNumber)\n          } else if (typeof selectedCandidatePair.googRemoteAddress === 'string') {\n            // TODO: remove this once Chrome 58 is released\n            remote = selectedCandidatePair.googRemoteAddress.split(':')\n            this.remoteAddress = remote[0]\n            this.remotePort = Number(remote[1])\n          }\n          if (this.remoteAddress) {\n            this.remoteFamily = this.remoteAddress.includes(':') ? 'IPv6' : 'IPv4'\n          }\n\n          this._debug(\n            'connect local: %s:%s remote: %s:%s',\n            this.localAddress,\n            this.localPort,\n            this.remoteAddress,\n            this.remotePort\n          )\n        }\n\n        items.forEach(item => {\n          // Spec-compliant\n          if (item.type === 'transport' && item.selectedCandidatePairId) {\n            setSelectedCandidatePair(candidatePairs[item.selectedCandidatePairId])\n          }\n\n          // Old implementations\n          if (\n            (item.type === 'googCandidatePair' && item.googActiveConnection === 'true') ||\n            ((item.type === 'candidatepair' || item.type === 'candidate-pair') && item.selected)\n          ) {\n            setSelectedCandidatePair(item)\n          }\n        })\n\n        // Ignore candidate pair selection in browsers like Safari 11 that do not have any local or remote candidates\n        // But wait until at least 1 candidate pair is available\n        if (!foundSelectedCandidatePair && (!Object.keys(candidatePairs).length || Object.keys(localCandidates).length)) {\n          setTimeout(findCandidatePair, 100)\n          return\n        } else {\n          this._connecting = false\n          this._connected = true\n        }\n\n        if (this._chunk) {\n          try {\n            this.send(this._chunk)\n          } catch (err) {\n            return this.destroy(errCode(err, 'ERR_DATA_CHANNEL'))\n          }\n          this._chunk = null\n          this._debug('sent chunk from \"write before connect\"')\n\n          const cb = this._cb\n          this._cb = null\n          cb(null)\n        }\n\n        // If `bufferedAmountLowThreshold` and 'onbufferedamountlow' are unsupported,\n        // fallback to using setInterval to implement backpressure.\n        if (typeof this._channel.bufferedAmountLowThreshold !== 'number') {\n          this._interval = setInterval(() => this._onInterval(), 150)\n          if (this._interval.unref) this._interval.unref()\n        }\n\n        this._debug('connect')\n        this.emit('connect')\n      })\n    }\n    findCandidatePair()\n  }\n\n  _onInterval () {\n    if (!this._cb || !this._channel || this._channel.bufferedAmount > MAX_BUFFERED_AMOUNT) {\n      return\n    }\n    this._onChannelBufferedAmountLow()\n  }\n\n  _onSignalingStateChange () {\n    if (this.destroyed) return\n\n    if (this._pc.signalingState === 'stable') {\n      this._isNegotiating = false\n\n      // HACK: Firefox doesn't yet support removing tracks when signalingState !== 'stable'\n      this._debug('flushing sender queue', this._sendersAwaitingStable)\n      this._sendersAwaitingStable.forEach(sender => {\n        this._pc.removeTrack(sender)\n        this._queuedNegotiation = true\n      })\n      this._sendersAwaitingStable = []\n\n      if (this._queuedNegotiation) {\n        this._debug('flushing negotiation queue')\n        this._queuedNegotiation = false\n        this._needsNegotiation() // negotiate again\n      } else {\n        this._debug('negotiated')\n        this.emit('negotiated')\n      }\n    }\n\n    this._debug('signalingStateChange %s', this._pc.signalingState)\n    this.emit('signalingStateChange', this._pc.signalingState)\n  }\n\n  _onIceCandidate (event) {\n    if (this.destroyed) return\n    if (event.candidate && this.trickle) {\n      this.emit('signal', {\n        type: 'candidate',\n        candidate: {\n          candidate: event.candidate.candidate,\n          sdpMLineIndex: event.candidate.sdpMLineIndex,\n          sdpMid: event.candidate.sdpMid\n        }\n      })\n    } else if (!event.candidate && !this._iceComplete) {\n      this._iceComplete = true\n      this.emit('_iceComplete')\n    }\n    // as soon as we've received one valid candidate start timeout\n    if (event.candidate) {\n      this._startIceCompleteTimeout()\n    }\n  }\n\n  _onChannelMessage (event) {\n    if (this.destroyed) return\n    let data = event.data\n    if (data instanceof ArrayBuffer) data = Buffer.from(data)\n    this.push(data)\n  }\n\n  _onChannelBufferedAmountLow () {\n    if (this.destroyed || !this._cb) return\n    this._debug('ending backpressure: bufferedAmount %d', this._channel.bufferedAmount)\n    const cb = this._cb\n    this._cb = null\n    cb(null)\n  }\n\n  _onChannelOpen () {\n    if (this._connected || this.destroyed) return\n    this._debug('on channel open')\n    this._channelReady = true\n    this._maybeReady()\n  }\n\n  _onChannelClose () {\n    if (this.destroyed) return\n    this._debug('on channel close')\n    this.destroy()\n  }\n\n  _onTrack (event) {\n    if (this.destroyed) return\n\n    event.streams.forEach(eventStream => {\n      this._debug('on track')\n      this.emit('track', event.track, eventStream)\n\n      this._remoteTracks.push({\n        track: event.track,\n        stream: eventStream\n      })\n\n      if (this._remoteStreams.some(remoteStream => {\n        return remoteStream.id === eventStream.id\n      })) return // Only fire one 'stream' event, even though there may be multiple tracks per stream\n\n      this._remoteStreams.push(eventStream)\n      queueMicrotask(() => {\n        this._debug('on stream')\n        this.emit('stream', eventStream) // ensure all tracks have been added\n      })\n    })\n  }\n\n  _debug () {\n    const args = [].slice.call(arguments)\n    args[0] = '[' + this._id + '] ' + args[0]\n    debug.apply(null, args)\n  }\n}\n\nPeer.WEBRTC_SUPPORT = !!getBrowserRTC()\n\n/**\n * Expose peer and data channel config for overriding all Peer\n * instances. Otherwise, just set opts.config or opts.channelConfig\n * when constructing a Peer.\n */\nPeer.config = {\n  iceServers: [\n    {\n      urls: [\n        'stun:stun.l.google.com:19302',\n        'stun:global.stun.twilio.com:3478'\n      ]\n    }\n  ],\n  sdpSemantics: 'unified-plan'\n}\n\nPeer.channelConfig = {}\n\nmodule.exports = Peer\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}