{"ast":null,"code":"import { __read, __spreadArray } from \"tslib\";\nimport { Subscription } from '../Subscription';\nexport var animationFrameProvider = {\n  schedule: function schedule(callback) {\n    var request = requestAnimationFrame;\n    var cancel = cancelAnimationFrame;\n    var delegate = animationFrameProvider.delegate;\n    if (delegate) {\n      request = delegate.requestAnimationFrame;\n      cancel = delegate.cancelAnimationFrame;\n    }\n    var handle = request(function (timestamp) {\n      cancel = undefined;\n      callback(timestamp);\n    });\n    return new Subscription(function () {\n      return cancel === null || cancel === void 0 ? void 0 : cancel(handle);\n    });\n  },\n  requestAnimationFrame: function (_requestAnimationFrame) {\n    function requestAnimationFrame() {\n      return _requestAnimationFrame.apply(this, arguments);\n    }\n    requestAnimationFrame.toString = function () {\n      return _requestAnimationFrame.toString();\n    };\n    return requestAnimationFrame;\n  }(function () {\n    var args = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n      args[_i] = arguments[_i];\n    }\n    var delegate = animationFrameProvider.delegate;\n    return ((delegate === null || delegate === void 0 ? void 0 : delegate.requestAnimationFrame) || requestAnimationFrame).apply(void 0, __spreadArray([], __read(args)));\n  }),\n  cancelAnimationFrame: function (_cancelAnimationFrame) {\n    function cancelAnimationFrame() {\n      return _cancelAnimationFrame.apply(this, arguments);\n    }\n    cancelAnimationFrame.toString = function () {\n      return _cancelAnimationFrame.toString();\n    };\n    return cancelAnimationFrame;\n  }(function () {\n    var args = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n      args[_i] = arguments[_i];\n    }\n    var delegate = animationFrameProvider.delegate;\n    return ((delegate === null || delegate === void 0 ? void 0 : delegate.cancelAnimationFrame) || cancelAnimationFrame).apply(void 0, __spreadArray([], __read(args)));\n  }),\n  delegate: undefined\n};","map":{"version":3,"mappings":";AAAA,SAASA,YAAY,QAAQ,iBAAiB;AAc9C,OAAO,IAAMC,sBAAsB,GAA2B;EAG5DC,QAAQ,EAAR,kBAASC,QAAQ;IACf,IAAIC,OAAO,GAAGC,qBAAqB;IACnC,IAAIC,MAAM,GAA4CC,oBAAoB;IAClE,YAAQ,GAAKN,sBAAsB,SAA3B;IAChB,IAAIO,QAAQ,EAAE;MACZJ,OAAO,GAAGI,QAAQ,CAACH,qBAAqB;MACxCC,MAAM,GAAGE,QAAQ,CAACD,oBAAoB;;IAExC,IAAME,MAAM,GAAGL,OAAO,CAAC,UAACM,SAAS;MAI/BJ,MAAM,GAAGK,SAAS;MAClBR,QAAQ,CAACO,SAAS,CAAC;IACrB,CAAC,CAAC;IACF,OAAO,IAAIV,YAAY,CAAC;MAAM,aAAM,aAANM,MAAM,uBAANA,MAAM,CAAGG,MAAM,CAAC;IAAhB,CAAgB,CAAC;EACjD,CAAC;EACDJ,qBAAqB;IAAA;MAAA;IAAA;IAAA;MAAA;IAAA;IAAA;EAAA;IAAC;SAAA,UAAO,EAAPO,qBAAO,EAAPA,IAAO;MAAPC;;IACZ,YAAQ,GAAKZ,sBAAsB,SAA3B;IAChB,OAAO,CAAC,SAAQ,aAARO,QAAQ,uBAARA,QAAQ,CAAEH,qBAAqB,KAAIA,qBAAqB,EAACS,uCAAID,IAAI;EAC3E,CAAC;EACDN,oBAAoB;IAAA;MAAA;IAAA;IAAA;MAAA;IAAA;IAAA;EAAA;IAAC;SAAA,UAAO,EAAPK,qBAAO,EAAPA,IAAO;MAAPC;;IACX,YAAQ,GAAKZ,sBAAsB,SAA3B;IAChB,OAAO,CAAC,SAAQ,aAARO,QAAQ,uBAARA,QAAQ,CAAED,oBAAoB,KAAIA,oBAAoB,EAACO,uCAAID,IAAI;EACzE,CAAC;EACDL,QAAQ,EAAEG;CACX","names":["Subscription","animationFrameProvider","schedule","callback","request","requestAnimationFrame","cancel","cancelAnimationFrame","delegate","handle","timestamp","undefined","_i","args","apply"],"sources":["C:\\Users\\Amali\\Desktop\\Building_the_IoT_w._P2P_and_Cloud_Computing\\IoTProject\\node_modules\\rxjs\\src\\internal\\scheduler\\animationFrameProvider.ts"],"sourcesContent":["import { Subscription } from '../Subscription';\r\n\r\ninterface AnimationFrameProvider {\r\n  schedule(callback: FrameRequestCallback): Subscription;\r\n  requestAnimationFrame: typeof requestAnimationFrame;\r\n  cancelAnimationFrame: typeof cancelAnimationFrame;\r\n  delegate:\r\n    | {\r\n        requestAnimationFrame: typeof requestAnimationFrame;\r\n        cancelAnimationFrame: typeof cancelAnimationFrame;\r\n      }\r\n    | undefined;\r\n}\r\n\r\nexport const animationFrameProvider: AnimationFrameProvider = {\r\n  // When accessing the delegate, use the variable rather than `this` so that\r\n  // the functions can be called without being bound to the provider.\r\n  schedule(callback) {\r\n    let request = requestAnimationFrame;\r\n    let cancel: typeof cancelAnimationFrame | undefined = cancelAnimationFrame;\r\n    const { delegate } = animationFrameProvider;\r\n    if (delegate) {\r\n      request = delegate.requestAnimationFrame;\r\n      cancel = delegate.cancelAnimationFrame;\r\n    }\r\n    const handle = request((timestamp) => {\r\n      // Clear the cancel function. The request has been fulfilled, so\r\n      // attempting to cancel the request upon unsubscription would be\r\n      // pointless.\r\n      cancel = undefined;\r\n      callback(timestamp);\r\n    });\r\n    return new Subscription(() => cancel?.(handle));\r\n  },\r\n  requestAnimationFrame(...args) {\r\n    const { delegate } = animationFrameProvider;\r\n    return (delegate?.requestAnimationFrame || requestAnimationFrame)(...args);\r\n  },\r\n  cancelAnimationFrame(...args) {\r\n    const { delegate } = animationFrameProvider;\r\n    return (delegate?.cancelAnimationFrame || cancelAnimationFrame)(...args);\r\n  },\r\n  delegate: undefined,\r\n};\r\n"]},"metadata":{},"sourceType":"module"}