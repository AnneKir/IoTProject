{"ast":null,"code":"'use strict';\n\nconst inherits = require('inherits');\nconst Reporter = require('../base/reporter').Reporter;\nconst Buffer = require('safer-buffer').Buffer;\nfunction DecoderBuffer(base, options) {\n  Reporter.call(this, options);\n  if (!Buffer.isBuffer(base)) {\n    this.error('Input not Buffer');\n    return;\n  }\n  this.base = base;\n  this.offset = 0;\n  this.length = base.length;\n}\ninherits(DecoderBuffer, Reporter);\nexports.DecoderBuffer = DecoderBuffer;\nDecoderBuffer.isDecoderBuffer = function isDecoderBuffer(data) {\n  if (data instanceof DecoderBuffer) {\n    return true;\n  }\n\n  // Or accept compatible API\n  const isCompatible = typeof data === 'object' && Buffer.isBuffer(data.base) && data.constructor.name === 'DecoderBuffer' && typeof data.offset === 'number' && typeof data.length === 'number' && typeof data.save === 'function' && typeof data.restore === 'function' && typeof data.isEmpty === 'function' && typeof data.readUInt8 === 'function' && typeof data.skip === 'function' && typeof data.raw === 'function';\n  return isCompatible;\n};\nDecoderBuffer.prototype.save = function save() {\n  return {\n    offset: this.offset,\n    reporter: Reporter.prototype.save.call(this)\n  };\n};\nDecoderBuffer.prototype.restore = function restore(save) {\n  // Return skipped data\n  const res = new DecoderBuffer(this.base);\n  res.offset = save.offset;\n  res.length = this.offset;\n  this.offset = save.offset;\n  Reporter.prototype.restore.call(this, save.reporter);\n  return res;\n};\nDecoderBuffer.prototype.isEmpty = function isEmpty() {\n  return this.offset === this.length;\n};\nDecoderBuffer.prototype.readUInt8 = function readUInt8(fail) {\n  if (this.offset + 1 <= this.length) return this.base.readUInt8(this.offset++, true);else return this.error(fail || 'DecoderBuffer overrun');\n};\nDecoderBuffer.prototype.skip = function skip(bytes, fail) {\n  if (!(this.offset + bytes <= this.length)) return this.error(fail || 'DecoderBuffer overrun');\n  const res = new DecoderBuffer(this.base);\n\n  // Share reporter state\n  res._reporterState = this._reporterState;\n  res.offset = this.offset;\n  res.length = this.offset + bytes;\n  this.offset += bytes;\n  return res;\n};\nDecoderBuffer.prototype.raw = function raw(save) {\n  return this.base.slice(save ? save.offset : this.offset, this.length);\n};\nfunction EncoderBuffer(value, reporter) {\n  if (Array.isArray(value)) {\n    this.length = 0;\n    this.value = value.map(function (item) {\n      if (!EncoderBuffer.isEncoderBuffer(item)) item = new EncoderBuffer(item, reporter);\n      this.length += item.length;\n      return item;\n    }, this);\n  } else if (typeof value === 'number') {\n    if (!(0 <= value && value <= 0xff)) return reporter.error('non-byte EncoderBuffer value');\n    this.value = value;\n    this.length = 1;\n  } else if (typeof value === 'string') {\n    this.value = value;\n    this.length = Buffer.byteLength(value);\n  } else if (Buffer.isBuffer(value)) {\n    this.value = value;\n    this.length = value.length;\n  } else {\n    return reporter.error('Unsupported type: ' + typeof value);\n  }\n}\nexports.EncoderBuffer = EncoderBuffer;\nEncoderBuffer.isEncoderBuffer = function isEncoderBuffer(data) {\n  if (data instanceof EncoderBuffer) {\n    return true;\n  }\n\n  // Or accept compatible API\n  const isCompatible = typeof data === 'object' && data.constructor.name === 'EncoderBuffer' && typeof data.length === 'number' && typeof data.join === 'function';\n  return isCompatible;\n};\nEncoderBuffer.prototype.join = function join(out, offset) {\n  if (!out) out = Buffer.alloc(this.length);\n  if (!offset) offset = 0;\n  if (this.length === 0) return out;\n  if (Array.isArray(this.value)) {\n    this.value.forEach(function (item) {\n      item.join(out, offset);\n      offset += item.length;\n    });\n  } else {\n    if (typeof this.value === 'number') out[offset] = this.value;else if (typeof this.value === 'string') out.write(this.value, offset);else if (Buffer.isBuffer(this.value)) this.value.copy(out, offset);\n    offset += this.length;\n  }\n  return out;\n};","map":{"version":3,"names":["inherits","require","Reporter","Buffer","DecoderBuffer","base","options","call","isBuffer","error","offset","length","exports","isDecoderBuffer","data","isCompatible","constructor","name","save","restore","isEmpty","readUInt8","skip","raw","prototype","reporter","res","fail","bytes","_reporterState","slice","EncoderBuffer","value","Array","isArray","map","item","isEncoderBuffer","byteLength","join","out","alloc","forEach","write","copy"],"sources":["C:/Users/Amali/Desktop/Building_the_IoT_w._P2P_and_Cloud_Computing/IoTProject/node_modules/asn1.js/lib/asn1/base/buffer.js"],"sourcesContent":["'use strict';\r\n\r\nconst inherits = require('inherits');\r\nconst Reporter = require('../base/reporter').Reporter;\r\nconst Buffer = require('safer-buffer').Buffer;\r\n\r\nfunction DecoderBuffer(base, options) {\r\n  Reporter.call(this, options);\r\n  if (!Buffer.isBuffer(base)) {\r\n    this.error('Input not Buffer');\r\n    return;\r\n  }\r\n\r\n  this.base = base;\r\n  this.offset = 0;\r\n  this.length = base.length;\r\n}\r\ninherits(DecoderBuffer, Reporter);\r\nexports.DecoderBuffer = DecoderBuffer;\r\n\r\nDecoderBuffer.isDecoderBuffer = function isDecoderBuffer(data) {\r\n  if (data instanceof DecoderBuffer) {\r\n    return true;\r\n  }\r\n\r\n  // Or accept compatible API\r\n  const isCompatible = typeof data === 'object' &&\r\n    Buffer.isBuffer(data.base) &&\r\n    data.constructor.name === 'DecoderBuffer' &&\r\n    typeof data.offset === 'number' &&\r\n    typeof data.length === 'number' &&\r\n    typeof data.save === 'function' &&\r\n    typeof data.restore === 'function' &&\r\n    typeof data.isEmpty === 'function' &&\r\n    typeof data.readUInt8 === 'function' &&\r\n    typeof data.skip === 'function' &&\r\n    typeof data.raw === 'function';\r\n\r\n  return isCompatible;\r\n};\r\n\r\nDecoderBuffer.prototype.save = function save() {\r\n  return { offset: this.offset, reporter: Reporter.prototype.save.call(this) };\r\n};\r\n\r\nDecoderBuffer.prototype.restore = function restore(save) {\r\n  // Return skipped data\r\n  const res = new DecoderBuffer(this.base);\r\n  res.offset = save.offset;\r\n  res.length = this.offset;\r\n\r\n  this.offset = save.offset;\r\n  Reporter.prototype.restore.call(this, save.reporter);\r\n\r\n  return res;\r\n};\r\n\r\nDecoderBuffer.prototype.isEmpty = function isEmpty() {\r\n  return this.offset === this.length;\r\n};\r\n\r\nDecoderBuffer.prototype.readUInt8 = function readUInt8(fail) {\r\n  if (this.offset + 1 <= this.length)\r\n    return this.base.readUInt8(this.offset++, true);\r\n  else\r\n    return this.error(fail || 'DecoderBuffer overrun');\r\n};\r\n\r\nDecoderBuffer.prototype.skip = function skip(bytes, fail) {\r\n  if (!(this.offset + bytes <= this.length))\r\n    return this.error(fail || 'DecoderBuffer overrun');\r\n\r\n  const res = new DecoderBuffer(this.base);\r\n\r\n  // Share reporter state\r\n  res._reporterState = this._reporterState;\r\n\r\n  res.offset = this.offset;\r\n  res.length = this.offset + bytes;\r\n  this.offset += bytes;\r\n  return res;\r\n};\r\n\r\nDecoderBuffer.prototype.raw = function raw(save) {\r\n  return this.base.slice(save ? save.offset : this.offset, this.length);\r\n};\r\n\r\nfunction EncoderBuffer(value, reporter) {\r\n  if (Array.isArray(value)) {\r\n    this.length = 0;\r\n    this.value = value.map(function(item) {\r\n      if (!EncoderBuffer.isEncoderBuffer(item))\r\n        item = new EncoderBuffer(item, reporter);\r\n      this.length += item.length;\r\n      return item;\r\n    }, this);\r\n  } else if (typeof value === 'number') {\r\n    if (!(0 <= value && value <= 0xff))\r\n      return reporter.error('non-byte EncoderBuffer value');\r\n    this.value = value;\r\n    this.length = 1;\r\n  } else if (typeof value === 'string') {\r\n    this.value = value;\r\n    this.length = Buffer.byteLength(value);\r\n  } else if (Buffer.isBuffer(value)) {\r\n    this.value = value;\r\n    this.length = value.length;\r\n  } else {\r\n    return reporter.error('Unsupported type: ' + typeof value);\r\n  }\r\n}\r\nexports.EncoderBuffer = EncoderBuffer;\r\n\r\nEncoderBuffer.isEncoderBuffer = function isEncoderBuffer(data) {\r\n  if (data instanceof EncoderBuffer) {\r\n    return true;\r\n  }\r\n\r\n  // Or accept compatible API\r\n  const isCompatible = typeof data === 'object' &&\r\n    data.constructor.name === 'EncoderBuffer' &&\r\n    typeof data.length === 'number' &&\r\n    typeof data.join === 'function';\r\n\r\n  return isCompatible;\r\n};\r\n\r\nEncoderBuffer.prototype.join = function join(out, offset) {\r\n  if (!out)\r\n    out = Buffer.alloc(this.length);\r\n  if (!offset)\r\n    offset = 0;\r\n\r\n  if (this.length === 0)\r\n    return out;\r\n\r\n  if (Array.isArray(this.value)) {\r\n    this.value.forEach(function(item) {\r\n      item.join(out, offset);\r\n      offset += item.length;\r\n    });\r\n  } else {\r\n    if (typeof this.value === 'number')\r\n      out[offset] = this.value;\r\n    else if (typeof this.value === 'string')\r\n      out.write(this.value, offset);\r\n    else if (Buffer.isBuffer(this.value))\r\n      this.value.copy(out, offset);\r\n    offset += this.length;\r\n  }\r\n\r\n  return out;\r\n};\r\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}