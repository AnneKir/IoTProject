{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Amali\\\\Desktop\\\\Building_the_IoT_w._P2P_and_Cloud_Computing\\\\IoTProject\\\\src\\\\App.tsx\";\n// import logo from './logo.svg';\n\nimport './App.css';\n// import './first';\n// import wrtc from 'wrtc';\n\nimport React from 'react';\nimport io from 'socket.io-client';\nimport { Setup, State, setModel, getId, setRoom, Peers } from 'react-simple-peer';\n// import { startServer } from './first';\n// import SimplePeerWrapper from 'simple-peer-wrapper';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n// import SimplePeerWrapper from 'simple-peer-wrapper';\n// import wrtc from 'wrtc';\n\n// const options = {\n//   serverUrl: 'http://localhost:8081',\n//   debugger: false,\n//   simplePeerOptions: {\n//     initiator: false,\n//     trickle: false,\n//     wrtc: wrtc\n//   }\n// };\n\n// const options2 = {\n//   serverUrl: 'http://localhost:8081',\n//   debugger: false,\n//   simplePeerOptions: {\n//     initiator: true,\n//     trickle: false,\n//     wrtc: wrtc\n//   }\n// };\n\n// type data = {\n//   id: string;\n//   data: object;\n// }\n\n// function rree() {\n//   const spw = new SimplePeerWrapper(options);\n//   console.log(\"ehek\")\n//   spw.connect();\n//   spw.on('connect', () => {\n//     console.log(\"conection\");\n//     spw.send(\"hej\");\n//   });\n//   spw.on('data', (data: data) => {\n//     console.log(data.data.toString());\n//   });\n\n// }\n\n// function first() {\n//   const spw = new SimplePeerWrapper(options2);\n//   console.log(\"eheooo\")\n//   spw.connect();\n//   spw.on('connect', () => {\n//     console.log(\"conection\");\n//     spw.send(\"heiij\");\n//   });\n//   spw.on('data', (data: data) => {\n//     console.log(data.data.toString());\n//   });\n//   spw.on('error', (err: Error) => console.log('error', err))\n\n// }\n\n// function gotData(data: Object) {\n//   // put the incoming data somewhere to use later\n//   let partnerMouse = data.data;\n//   console.log(\"got data: \" + partnerMouse.toString())\n// }\n\n// let count = 0;\n// function gotConnect(spw: SimplePeerWrapper) {\n//   console.log('peer connection open');\n//   count++;\n//   spw.send(\"hej\" + count.toString());\n// }\n\nclass User {\n  constructor(username) {\n    this.username = void 0;\n    this.username = username;\n  }\n}\nfunction App() {\n  const ws = io('localhost:3000');\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Setup, {\n      onOfferRequest: processOfferRequest => {\n        ws.on('offer-request', request => processOfferRequest(request));\n      },\n      emitOfferResponse: (joinRequest, signalData) => {\n        ws.emit('offer-response', joinRequest, signalData);\n      },\n      onJoinResponse: processJoinResponse => {\n        ws.on('join-response', (offer, id, roomCreatorId) => processJoinResponse(offer, id, 'AZE', roomCreatorId));\n      },\n      emitJoinAck: (signalData, room, recievedId, id) => {\n        ws.emit('join-ack', {\n          offer: signalData,\n          roomId: room,\n          peerId: recievedId\n        }, id);\n      },\n      onClientOffer: processClientOffer => {\n        ws.on('client-offer', (data, peerId, sessionInitiator, emitterPeerId) => processClientOffer(data, peerId, sessionInitiator, emitterPeerId));\n      },\n      emitInitiatorOffers: (offers, id, room) => {\n        ws.emit('initiator-offers', offers, id, room);\n      },\n      onLeaving: processLeaving => {\n        ws.on('leaving', id => processLeaving(id));\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"App\",\n        children: /*#__PURE__*/_jsxDEV(\"header\", {\n          className: \"App-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            onChange: event => setModel(new User(event.target.value))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"State : \", /*#__PURE__*/_jsxDEV(State, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 149,\n              columnNumber: 23\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => {\n              const roomId = 'myroom';\n              const room = {\n                initiatorPeerId: getId(),\n                roomId: roomId\n              };\n              setRoom(roomId);\n              ws.emit('create', room);\n            },\n            children: \"Create a room\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => {\n              setRoom('myroom');\n              ws.emit('join-request', {\n                roomId: 'AZE',\n                peerId: getId()\n              });\n            },\n            children: \"Join a room\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Peers, {\n            children: peers => {\n              return /*#__PURE__*/_jsxDEV(\"ul\", {\n                children: Array.from(peers).map(set => /*#__PURE__*/_jsxDEV(\"li\", {\n                  children: set[1].username\n                }, set[1].username, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 170,\n                  columnNumber: 74\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 169,\n                columnNumber: 26\n              }, this);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","io","Setup","State","setModel","getId","setRoom","Peers","User","constructor","username","App","ws","processOfferRequest","on","request","joinRequest","signalData","emit","processJoinResponse","offer","id","roomCreatorId","room","recievedId","roomId","peerId","processClientOffer","data","sessionInitiator","emitterPeerId","offers","processLeaving","event","target","value","initiatorPeerId","peers","Array","from","map","set"],"sources":["C:/Users/Amali/Desktop/Building_the_IoT_w._P2P_and_Cloud_Computing/IoTProject/src/App.tsx"],"sourcesContent":["// import logo from './logo.svg';\r\nimport { Grid, Paper, Typography, Button, TextField } from '@mui/material';\r\nimport './App.css';\r\n// import './first';\r\n// import wrtc from 'wrtc';\r\nimport ReactDOM from 'react-dom/client';\r\nimport React from 'react';\r\nimport { SignalData } from 'simple-peer';\r\nimport io from 'socket.io-client';\r\nimport {\r\n  Setup,\r\n  JoinRequest,\r\n  ClientOffer,\r\n  State,\r\n  setModel,\r\n  getId,\r\n  setRoom,\r\n  Peers\r\n} from 'react-simple-peer';\r\n// import { startServer } from './first';\r\n// import SimplePeerWrapper from 'simple-peer-wrapper';\r\nimport { startClient, gotData } from './client';\r\nimport { Box } from '@mui/system';\r\n\r\n\r\n// import SimplePeerWrapper from 'simple-peer-wrapper';\r\n// import wrtc from 'wrtc';\r\n\r\n// const options = {\r\n//   serverUrl: 'http://localhost:8081',\r\n//   debugger: false,\r\n//   simplePeerOptions: {\r\n//     initiator: false,\r\n//     trickle: false,\r\n//     wrtc: wrtc\r\n//   }\r\n// };\r\n\r\n// const options2 = {\r\n//   serverUrl: 'http://localhost:8081',\r\n//   debugger: false,\r\n//   simplePeerOptions: {\r\n//     initiator: true,\r\n//     trickle: false,\r\n//     wrtc: wrtc\r\n//   }\r\n// };\r\n\r\n// type data = {\r\n//   id: string;\r\n//   data: object;\r\n// }\r\n\r\n// function rree() {\r\n//   const spw = new SimplePeerWrapper(options);\r\n//   console.log(\"ehek\")\r\n//   spw.connect();\r\n//   spw.on('connect', () => {\r\n//     console.log(\"conection\");\r\n//     spw.send(\"hej\");\r\n//   });\r\n//   spw.on('data', (data: data) => {\r\n//     console.log(data.data.toString());\r\n//   });\r\n\r\n// }\r\n\r\n// function first() {\r\n//   const spw = new SimplePeerWrapper(options2);\r\n//   console.log(\"eheooo\")\r\n//   spw.connect();\r\n//   spw.on('connect', () => {\r\n//     console.log(\"conection\");\r\n//     spw.send(\"heiij\");\r\n//   });\r\n//   spw.on('data', (data: data) => {\r\n//     console.log(data.data.toString());\r\n//   });\r\n//   spw.on('error', (err: Error) => console.log('error', err))\r\n\r\n// }\r\n\r\n\r\n// function gotData(data: Object) {\r\n//   // put the incoming data somewhere to use later\r\n//   let partnerMouse = data.data;\r\n//   console.log(\"got data: \" + partnerMouse.toString())\r\n// }\r\n\r\n// let count = 0;\r\n// function gotConnect(spw: SimplePeerWrapper) {\r\n//   console.log('peer connection open');\r\n//   count++;\r\n//   spw.send(\"hej\" + count.toString());\r\n// }\r\n\r\n\r\nclass User {\r\n  username: string;\r\n\r\n  constructor(username: string) {\r\n    this.username = username;\r\n  }\r\n\r\n}\r\n\r\n\r\nfunction App(): JSX.Element {\r\n\r\n  const ws = io('localhost:3000');\r\n\r\n  return (\r\n    <>\r\n      <Setup\r\n        onOfferRequest={processOfferRequest => {\r\n          ws.on('offer-request', (request: JoinRequest) => processOfferRequest(request));\r\n        }}\r\n\r\n        emitOfferResponse={(joinRequest: JoinRequest, signalData: SignalData) => {\r\n          ws.emit('offer-response', joinRequest, signalData);\r\n        }}\r\n\r\n        onJoinResponse={processJoinResponse => {\r\n          ws.on('join-response', (offer: SignalData, id: string, roomCreatorId: string) => processJoinResponse(offer, id, 'AZE', roomCreatorId))\r\n        }}\r\n\r\n        emitJoinAck={(signalData, room, recievedId, id) => {\r\n          ws.emit('join-ack', { offer: signalData, roomId: room, peerId: recievedId }, id);\r\n        }}\r\n\r\n        onClientOffer={processClientOffer => {\r\n          ws.on('client-offer', (data: ClientOffer, peerId: string, sessionInitiator: boolean, emitterPeerId: string) => processClientOffer(data, peerId, sessionInitiator, emitterPeerId));\r\n        }}\r\n\r\n        emitInitiatorOffers={(offers, id, room) => {\r\n          ws.emit('initiator-offers', offers, id, room);\r\n        }}\r\n\r\n        onLeaving={(processLeaving: (id: string) => void) => {\r\n          ws.on('leaving', (id: string) => processLeaving(id));\r\n        }}\r\n      >\r\n        <div className=\"App\">\r\n          <header className=\"App-header\">\r\n\r\n            <input type=\"text\" onChange={event => setModel(new User(event.target.value))} />\r\n\r\n            <p>\r\n              State : <State />\r\n            </p>\r\n\r\n            <button onClick={() => {\r\n              const roomId = 'myroom';\r\n              const room = { initiatorPeerId: getId(), roomId: roomId };\r\n              setRoom(roomId);\r\n              ws.emit('create', room);\r\n            }}>Create a room\r\n            </button>\r\n\r\n            <button onClick={() => {\r\n              setRoom('myroom');\r\n              ws.emit('join-request', { roomId: 'AZE', peerId: getId() });\r\n            }}>Join a room\r\n            </button>\r\n\r\n            <Peers>\r\n              {\r\n                peers => {\r\n                  return <ul>\r\n                    {Array.from<any>(peers).map((set: [string, User]) => <li\r\n                      key={set[1].username}>{set[1].username}</li>)}\r\n                  </ul>\r\n                }\r\n              }\r\n            </Peers>\r\n          </header>\r\n        </div>\r\n      </Setup>\r\n      {/* <div className=\"App\">\r\n      <Box padding={4}>\r\n        <Paper elevation={2}>\r\n          <Grid container alignItems={\"center\"} justifyContent={\"center\"} padding={2}>\r\n            <Grid item xs={6}>\r\n              <Typography>This is a fuckign website</Typography>\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n              <Typography>Where u can upload fuckign picutes</Typography>\r\n            </Grid>\r\n            <Grid item marginTop={4} xs={10}>\r\n              This could be a thing\r\n            </Grid>\r\n            <Grid item marginTop={4} xs={\"auto\"}>\r\n              <Button onClick={() => startClient()}> connect </Button>\r\n            </Grid>\r\n            {/* <Grid item marginTop={4} xs={\"auto\"}>\r\n              <Button onClick={()=> startServer()}> start </Button>\r\n            </Grid> */}\r\n      {/* <Grid>\r\n              <Typography>{showReceivedData()}</Typography>\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextField id=\"standard-basic\" label=\"Standard\" variant=\"standard\" />\r\n            </Grid>\r\n          </Grid>\r\n        </Paper>\r\n      </Box> */}\r\n      {/* <header className=\"App-header\"> */}\r\n      {/* <img src={logo} className=\"App-logo\" alt=\"logo\" />\r\n        <p>\r\n          Edit <code>src/App.tsx</code> and save to reload.\r\n        </p>\r\n        <a\r\n          className=\"App-link\"\r\n          href=\"https://reactjs.org\"\r\n          target=\"_blank\"\r\n          rel=\"noopener noreferrer\"\r\n        >\r\n          Learn React\r\n        </a> */}\r\n      {/* <Typography>Welcome</Typography> */}\r\n      {/* </header> */}\r\n      {/* </div> */}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}