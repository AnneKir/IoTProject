{"ast":null,"code":"\"use strict\";\n\nvar __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n    r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n    d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nconst __1 = require(\"../..\");\nconst __2 = require(\"../..\");\nconst __3 = require(\"../..\");\nconst TsQDecorator_1 = require(\"../../tsQ/decorator/TsQDecorator\");\nclass Map {\n  constructor() {\n    this._entries = [];\n  }\n  clear() {\n    this._entries.length = 0;\n  }\n  compute(key, remappingFunction) {\n    let oldValue = this.get(key);\n    let newValue = remappingFunction.apply(key, oldValue);\n    if (oldValue !== null) {\n      if (newValue !== null) {\n        return this.put(key, newValue);\n      } else {\n        return this.remove(key);\n      }\n    } else {\n      if (newValue !== null) {\n        return this.put(key, newValue);\n      } else {\n        return null;\n      }\n    }\n  }\n  computeIfAbsent(key, mappingFunction) {\n    if (key === null || key === undefined) throw new __1.NullReferenceException('The key cannot be null nor undefined');\n    if (this.get(key) === null) {\n      let newValue = mappingFunction.apply(key);\n      if (newValue !== null) return this.put(key, newValue);\n    }\n  }\n  computeIfPresent(key, v) {\n    if (key === null || key === undefined) throw new __1.NullReferenceException('The key cannot be null nor undefined');\n    if (this.get(key) !== null) {\n      let oldValue = this.get(key);\n      let newValue = v.apply(key, oldValue);\n      if (newValue !== null) return this.put(key, newValue);else return this.remove(key);\n    }\n  }\n  containsKey(key) {\n    if (key === null || key === undefined) throw new __1.NullReferenceException('The key cannot be null nor undefined');\n    return this._entries.find(entry => {\n      return entry.getKey() === key;\n    }) !== undefined;\n  }\n  containsValue(value) {\n    if (value === null || value === undefined) throw new __1.NullReferenceException('The value cannot be null nor undefined');\n    return this._entries.find(entry => {\n      return entry.getValue() === value;\n    }) !== undefined;\n  }\n  entrySet() {\n    let set = new __2.Set();\n    set.addAll(this._entries);\n    return set;\n  }\n  equals(m) {\n    return this.entrySet().equals(m.entrySet());\n  }\n  forEach(callback) {\n    this._entries = this._entries.map(mapEntry => callback.apply(mapEntry));\n  }\n  get(key) {\n    if (key === null || key === undefined) throw new __1.NullReferenceException('The key cannot be null nor undefined');\n    try {\n      return this._entries.find(mapEntry => mapEntry.getKey() === key).getValue();\n    } catch (e) {\n      return null;\n    }\n  }\n  getOrDefault(key, defaultValue) {\n    let get = this.get(key);\n    if (get) {\n      return get;\n    } else {\n      return defaultValue;\n    }\n  }\n  hashCode() {\n    return this.entrySet().toArray().reduce((accumulator, mapEntry) => {\n      return accumulator + mapEntry.hashCode();\n    }, 0);\n  }\n  isEmpty() {\n    return this._entries.length === 0;\n  }\n  keySet() {\n    return this._entries.reduce((set, mapEntry) => {\n      set.add(mapEntry.getKey());\n      return set;\n    }, new __2.Set());\n  }\n  merge(key, value, remappingFunction) {\n    if (key === null || key === undefined) throw new __1.NullReferenceException('The key cannot be null nor undefined');\n    let oldValue = this.get(key);\n    let newValue = oldValue === null ? value : remappingFunction.apply(oldValue, value);\n    if (newValue === null) {\n      this.remove(key);\n    } else {\n      this.put(key, newValue);\n      return newValue;\n    }\n  }\n  put(key, value) {\n    let previousValue = null;\n    if (key === null || key === undefined) throw new __1.NullReferenceException('The key cannot be null nor undefined');\n    if (this.containsKey(key)) this._entries = this._entries.map(mapEntry => {\n      if (mapEntry.getKey() === key) previousValue = mapEntry.setValue(value);\n      return mapEntry;\n    });else this._entries.push(new __3.MapEntry(key, value));\n    return previousValue;\n  }\n  putAll(m) {\n    m.entrySet().toArray().forEach(mapEntry => this.put(mapEntry.getKey(), mapEntry.getValue()));\n  }\n  putIfAbsent(key, value) {\n    if (key === null || key === undefined) throw new __1.NullReferenceException('The key cannot be null nor undefined');\n    let v = this.get(key);\n    if (v === null) v = this.put(key, value);\n    return v;\n  }\n  remove(key, value) {\n    if (value) {\n      if (this.containsKey(key) && this.get(key) === value) {\n        this.remove(key);\n        return true;\n      } else {\n        return false;\n      }\n    } else {\n      if (key === null || key === undefined) throw new __1.NullReferenceException('The key cannot be null nor undefined');\n      let length = this._entries.length;\n      this._entries = this._entries.filter(mapEntry => mapEntry.getKey() !== key);\n      return this._entries.length !== length;\n    }\n  }\n  replace(key, value, newValue) {\n    if (newValue) {\n      if (this.containsKey(key) && this.get(key) === value) {\n        this.put(key, newValue);\n        return true;\n      } else {\n        return false;\n      }\n    } else {\n      if (key === null || key === undefined) throw new __1.NullReferenceException('The key cannot be null nor undefined');\n      if (this.containsKey(key)) {\n        return this.put(key, value);\n      } else {\n        return null;\n      }\n    }\n  }\n  replaceAll(f) {\n    if (f === null || f === undefined) throw new __1.NullReferenceException('The function cannot be null nor undefined');\n    this.entrySet().toArray().forEach(mapEntry => {\n      mapEntry.setValue(f.apply(mapEntry.getKey(), mapEntry.getValue()));\n    });\n  }\n  size() {\n    return this._entries.length;\n  }\n  values() {\n    return this._entries.map(mapEntry => mapEntry.getValue());\n  }\n}\n__decorate([TsQDecorator_1.TsQ()], Map.prototype, \"values\", null);\nexports.Map = Map;","map":{"version":3,"mappings":"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","names":["constructor","_entries","clear","length","compute","key","remappingFunction","oldValue","get","newValue","apply","put","remove","computeIfAbsent","mappingFunction","undefined","__1","computeIfPresent","v","containsKey","find","entry","getKey","containsValue","value","getValue","entrySet","set","__2","addAll","equals","m","forEach","callback","map","mapEntry","e","getOrDefault","defaultValue","hashCode","toArray","reduce","accumulator","isEmpty","keySet","add","merge","previousValue","setValue","push","__3","putAll","putIfAbsent","filter","replace","replaceAll","f","size","values","__decorate","TsQDecorator_1","exports"],"sources":["../../../src/collections/map/map.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}