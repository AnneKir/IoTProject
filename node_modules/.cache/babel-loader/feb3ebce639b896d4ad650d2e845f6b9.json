{"ast":null,"code":"\"use strict\";\n\nvar _assertThisInitialized = require(\"C:/Users/Amali/Desktop/Building_the_IoT_w._P2P_and_Cloud_Computing/IoTProject/node_modules/@babel/runtime/helpers/assertThisInitialized.js\").default;\nvar _classCallCheck = require(\"C:/Users/Amali/Desktop/Building_the_IoT_w._P2P_and_Cloud_Computing/IoTProject/node_modules/@babel/runtime/helpers/classCallCheck.js\").default;\nvar _createClass = require(\"C:/Users/Amali/Desktop/Building_the_IoT_w._P2P_and_Cloud_Computing/IoTProject/node_modules/@babel/runtime/helpers/createClass.js\").default;\nvar _inherits = require(\"C:/Users/Amali/Desktop/Building_the_IoT_w._P2P_and_Cloud_Computing/IoTProject/node_modules/@babel/runtime/helpers/inherits.js\").default;\nvar _createSuper = require(\"C:/Users/Amali/Desktop/Building_the_IoT_w._P2P_and_Cloud_Computing/IoTProject/node_modules/@babel/runtime/helpers/createSuper.js\").default;\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Request = exports.Polling = void 0;\nvar transport_js_1 = require(\"../transport.js\");\nvar debug_1 = __importDefault(require(\"debug\")); // debug()\nvar yeast_js_1 = require(\"../contrib/yeast.js\");\nvar parseqs_js_1 = require(\"../contrib/parseqs.js\");\nvar engine_io_parser_1 = require(\"engine.io-parser\");\nvar xmlhttprequest_js_1 = require(\"./xmlhttprequest.js\");\nvar component_emitter_1 = require(\"@socket.io/component-emitter\");\nvar util_js_1 = require(\"../util.js\");\nvar globalThis_js_1 = require(\"../globalThis.js\");\nvar debug = (0, debug_1.default)(\"engine.io-client:polling\"); // debug()\nfunction empty() {}\nvar hasXHR2 = function () {\n  var xhr = new xmlhttprequest_js_1.XHR({\n    xdomain: false\n  });\n  return null != xhr.responseType;\n}();\nvar Polling = /*#__PURE__*/function (_transport_js_1$Trans) {\n  _inherits(Polling, _transport_js_1$Trans);\n  var _super = _createSuper(Polling);\n  /**\n   * XHR Polling constructor.\n   *\n   * @param {Object} opts\n   * @api public\n   */\n  function Polling(opts) {\n    var _this;\n    _classCallCheck(this, Polling);\n    _this = _super.call(this, opts);\n    _this.polling = false;\n    if (typeof location !== \"undefined\") {\n      var isSSL = \"https:\" === location.protocol;\n      var port = location.port;\n      // some user agents have empty `location.port`\n      if (!port) {\n        port = isSSL ? \"443\" : \"80\";\n      }\n      _this.xd = typeof location !== \"undefined\" && opts.hostname !== location.hostname || port !== opts.port;\n      _this.xs = opts.secure !== isSSL;\n    }\n    /**\n     * XHR supports binary\n     */\n    var forceBase64 = opts && opts.forceBase64;\n    _this.supportsBinary = hasXHR2 && !forceBase64;\n    return _this;\n  }\n  /**\n   * Transport name.\n   */\n  _createClass(Polling, [{\n    key: \"name\",\n    get: function get() {\n      return \"polling\";\n    }\n    /**\n     * Opens the socket (triggers polling). We write a PING message to determine\n     * when the transport is open.\n     *\n     * @api private\n     */\n  }, {\n    key: \"doOpen\",\n    value: function doOpen() {\n      this.poll();\n    }\n    /**\n     * Pauses polling.\n     *\n     * @param {Function} callback upon buffers are flushed and transport is paused\n     * @api private\n     */\n  }, {\n    key: \"pause\",\n    value: function pause(onPause) {\n      var _this2 = this;\n      this.readyState = \"pausing\";\n      var pause = function pause() {\n        debug(\"paused\");\n        _this2.readyState = \"paused\";\n        onPause();\n      };\n      if (this.polling || !this.writable) {\n        var total = 0;\n        if (this.polling) {\n          debug(\"we are currently polling - waiting to pause\");\n          total++;\n          this.once(\"pollComplete\", function () {\n            debug(\"pre-pause polling complete\");\n            --total || pause();\n          });\n        }\n        if (!this.writable) {\n          debug(\"we are currently writing - waiting to pause\");\n          total++;\n          this.once(\"drain\", function () {\n            debug(\"pre-pause writing complete\");\n            --total || pause();\n          });\n        }\n      } else {\n        pause();\n      }\n    }\n    /**\n     * Starts polling cycle.\n     *\n     * @api public\n     */\n  }, {\n    key: \"poll\",\n    value: function poll() {\n      debug(\"polling\");\n      this.polling = true;\n      this.doPoll();\n      this.emitReserved(\"poll\");\n    }\n    /**\n     * Overloads onData to detect payloads.\n     *\n     * @api private\n     */\n  }, {\n    key: \"onData\",\n    value: function onData(data) {\n      var _this3 = this;\n      debug(\"polling got data %s\", data);\n      var callback = function callback(packet) {\n        // if its the first message we consider the transport open\n        if (\"opening\" === _this3.readyState && packet.type === \"open\") {\n          _this3.onOpen();\n        }\n        // if its a close packet, we close the ongoing requests\n        if (\"close\" === packet.type) {\n          _this3.onClose({\n            description: \"transport closed by the server\"\n          });\n          return false;\n        }\n        // otherwise bypass onData and handle the message\n        _this3.onPacket(packet);\n      };\n      // decode payload\n      (0, engine_io_parser_1.decodePayload)(data, this.socket.binaryType).forEach(callback);\n      // if an event did not trigger closing\n      if (\"closed\" !== this.readyState) {\n        // if we got data we're not polling\n        this.polling = false;\n        this.emitReserved(\"pollComplete\");\n        if (\"open\" === this.readyState) {\n          this.poll();\n        } else {\n          debug('ignoring poll - transport state \"%s\"', this.readyState);\n        }\n      }\n    }\n    /**\n     * For polling, send a close packet.\n     *\n     * @api private\n     */\n  }, {\n    key: \"doClose\",\n    value: function doClose() {\n      var _this4 = this;\n      var close = function close() {\n        debug(\"writing close packet\");\n        _this4.write([{\n          type: \"close\"\n        }]);\n      };\n      if (\"open\" === this.readyState) {\n        debug(\"transport open - closing\");\n        close();\n      } else {\n        // in case we're trying to close while\n        // handshaking is in progress (GH-164)\n        debug(\"transport not open - deferring close\");\n        this.once(\"open\", close);\n      }\n    }\n    /**\n     * Writes a packets payload.\n     *\n     * @param {Array} data packets\n     * @param {Function} drain callback\n     * @api private\n     */\n  }, {\n    key: \"write\",\n    value: function write(packets) {\n      var _this5 = this;\n      this.writable = false;\n      (0, engine_io_parser_1.encodePayload)(packets, function (data) {\n        _this5.doWrite(data, function () {\n          _this5.writable = true;\n          _this5.emitReserved(\"drain\");\n        });\n      });\n    }\n    /**\n     * Generates uri for connection.\n     *\n     * @api private\n     */\n  }, {\n    key: \"uri\",\n    value: function uri() {\n      var query = this.query || {};\n      var schema = this.opts.secure ? \"https\" : \"http\";\n      var port = \"\";\n      // cache busting is forced\n      if (false !== this.opts.timestampRequests) {\n        query[this.opts.timestampParam] = (0, yeast_js_1.yeast)();\n      }\n      if (!this.supportsBinary && !query.sid) {\n        query.b64 = 1;\n      }\n      // avoid port if default for schema\n      if (this.opts.port && (\"https\" === schema && Number(this.opts.port) !== 443 || \"http\" === schema && Number(this.opts.port) !== 80)) {\n        port = \":\" + this.opts.port;\n      }\n      var encodedQuery = (0, parseqs_js_1.encode)(query);\n      var ipv6 = this.opts.hostname.indexOf(\":\") !== -1;\n      return schema + \"://\" + (ipv6 ? \"[\" + this.opts.hostname + \"]\" : this.opts.hostname) + port + this.opts.path + (encodedQuery.length ? \"?\" + encodedQuery : \"\");\n    }\n    /**\n     * Creates a request.\n     *\n     * @param {String} method\n     * @api private\n     */\n  }, {\n    key: \"request\",\n    value: function request() {\n      var opts = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      Object.assign(opts, {\n        xd: this.xd,\n        xs: this.xs\n      }, this.opts);\n      return new Request(this.uri(), opts);\n    }\n    /**\n     * Sends data.\n     *\n     * @param {String} data to send.\n     * @param {Function} called upon flush.\n     * @api private\n     */\n  }, {\n    key: \"doWrite\",\n    value: function doWrite(data, fn) {\n      var _this6 = this;\n      var req = this.request({\n        method: \"POST\",\n        data: data\n      });\n      req.on(\"success\", fn);\n      req.on(\"error\", function (xhrStatus, context) {\n        _this6.onError(\"xhr post error\", xhrStatus, context);\n      });\n    }\n    /**\n     * Starts a poll cycle.\n     *\n     * @api private\n     */\n  }, {\n    key: \"doPoll\",\n    value: function doPoll() {\n      var _this7 = this;\n      debug(\"xhr poll\");\n      var req = this.request();\n      req.on(\"data\", this.onData.bind(this));\n      req.on(\"error\", function (xhrStatus, context) {\n        _this7.onError(\"xhr poll error\", xhrStatus, context);\n      });\n      this.pollXhr = req;\n    }\n  }]);\n  return Polling;\n}(transport_js_1.Transport);\nexports.Polling = Polling;\nvar Request = /*#__PURE__*/function (_component_emitter_1$) {\n  _inherits(Request, _component_emitter_1$);\n  var _super2 = _createSuper(Request);\n  /**\n   * Request constructor\n   *\n   * @param {Object} options\n   * @api public\n   */\n  function Request(uri, opts) {\n    var _this8;\n    _classCallCheck(this, Request);\n    _this8 = _super2.call(this);\n    (0, util_js_1.installTimerFunctions)(_assertThisInitialized(_this8), opts);\n    _this8.opts = opts;\n    _this8.method = opts.method || \"GET\";\n    _this8.uri = uri;\n    _this8.async = false !== opts.async;\n    _this8.data = undefined !== opts.data ? opts.data : null;\n    _this8.create();\n    return _this8;\n  }\n  /**\n   * Creates the XHR object and sends the request.\n   *\n   * @api private\n   */\n  _createClass(Request, [{\n    key: \"create\",\n    value: function create() {\n      var _this9 = this;\n      var opts = (0, util_js_1.pick)(this.opts, \"agent\", \"pfx\", \"key\", \"passphrase\", \"cert\", \"ca\", \"ciphers\", \"rejectUnauthorized\", \"autoUnref\");\n      opts.xdomain = !!this.opts.xd;\n      opts.xscheme = !!this.opts.xs;\n      var xhr = this.xhr = new xmlhttprequest_js_1.XHR(opts);\n      try {\n        debug(\"xhr open %s: %s\", this.method, this.uri);\n        xhr.open(this.method, this.uri, this.async);\n        try {\n          if (this.opts.extraHeaders) {\n            xhr.setDisableHeaderCheck && xhr.setDisableHeaderCheck(true);\n            for (var i in this.opts.extraHeaders) {\n              if (this.opts.extraHeaders.hasOwnProperty(i)) {\n                xhr.setRequestHeader(i, this.opts.extraHeaders[i]);\n              }\n            }\n          }\n        } catch (e) {}\n        if (\"POST\" === this.method) {\n          try {\n            xhr.setRequestHeader(\"Content-type\", \"text/plain;charset=UTF-8\");\n          } catch (e) {}\n        }\n        try {\n          xhr.setRequestHeader(\"Accept\", \"*/*\");\n        } catch (e) {}\n        // ie6 check\n        if (\"withCredentials\" in xhr) {\n          xhr.withCredentials = this.opts.withCredentials;\n        }\n        if (this.opts.requestTimeout) {\n          xhr.timeout = this.opts.requestTimeout;\n        }\n        xhr.onreadystatechange = function () {\n          if (4 !== xhr.readyState) return;\n          if (200 === xhr.status || 1223 === xhr.status) {\n            _this9.onLoad();\n          } else {\n            // make sure the `error` event handler that's user-set\n            // does not throw in the same tick and gets caught here\n            _this9.setTimeoutFn(function () {\n              _this9.onError(typeof xhr.status === \"number\" ? xhr.status : 0);\n            }, 0);\n          }\n        };\n        debug(\"xhr data %s\", this.data);\n        xhr.send(this.data);\n      } catch (e) {\n        // Need to defer since .create() is called directly from the constructor\n        // and thus the 'error' event can only be only bound *after* this exception\n        // occurs.  Therefore, also, we cannot throw here at all.\n        this.setTimeoutFn(function () {\n          _this9.onError(e);\n        }, 0);\n        return;\n      }\n      if (typeof document !== \"undefined\") {\n        this.index = Request.requestsCount++;\n        Request.requests[this.index] = this;\n      }\n    }\n    /**\n     * Called upon error.\n     *\n     * @api private\n     */\n  }, {\n    key: \"onError\",\n    value: function onError(err) {\n      this.emitReserved(\"error\", err, this.xhr);\n      this.cleanup(true);\n    }\n    /**\n     * Cleans up house.\n     *\n     * @api private\n     */\n  }, {\n    key: \"cleanup\",\n    value: function cleanup(fromError) {\n      if (\"undefined\" === typeof this.xhr || null === this.xhr) {\n        return;\n      }\n      this.xhr.onreadystatechange = empty;\n      if (fromError) {\n        try {\n          this.xhr.abort();\n        } catch (e) {}\n      }\n      if (typeof document !== \"undefined\") {\n        delete Request.requests[this.index];\n      }\n      this.xhr = null;\n    }\n    /**\n     * Called upon load.\n     *\n     * @api private\n     */\n  }, {\n    key: \"onLoad\",\n    value: function onLoad() {\n      var data = this.xhr.responseText;\n      if (data !== null) {\n        this.emitReserved(\"data\", data);\n        this.emitReserved(\"success\");\n        this.cleanup();\n      }\n    }\n    /**\n     * Aborts the request.\n     *\n     * @api public\n     */\n  }, {\n    key: \"abort\",\n    value: function abort() {\n      this.cleanup();\n    }\n  }]);\n  return Request;\n}(component_emitter_1.Emitter);\nexports.Request = Request;\nRequest.requestsCount = 0;\nRequest.requests = {};\n/**\n * Aborts pending requests when unloading the window. This is needed to prevent\n * memory leaks (e.g. when using IE) and to ensure that no spurious error is\n * emitted.\n */\nif (typeof document !== \"undefined\") {\n  // @ts-ignore\n  if (typeof attachEvent === \"function\") {\n    // @ts-ignore\n    attachEvent(\"onunload\", unloadHandler);\n  } else if (typeof addEventListener === \"function\") {\n    var terminationEvent = \"onpagehide\" in globalThis_js_1.globalThisShim ? \"pagehide\" : \"unload\";\n    addEventListener(terminationEvent, unloadHandler, false);\n  }\n}\nfunction unloadHandler() {\n  for (var i in Request.requests) {\n    if (Request.requests.hasOwnProperty(i)) {\n      Request.requests[i].abort();\n    }\n  }\n}","map":{"version":3,"names":["__importDefault","mod","__esModule","Object","defineProperty","exports","value","Request","Polling","transport_js_1","require","debug_1","yeast_js_1","parseqs_js_1","engine_io_parser_1","xmlhttprequest_js_1","component_emitter_1","util_js_1","globalThis_js_1","debug","default","empty","hasXHR2","xhr","XHR","xdomain","responseType","opts","polling","location","isSSL","protocol","port","xd","hostname","xs","secure","forceBase64","supportsBinary","poll","onPause","readyState","pause","writable","total","once","doPoll","emitReserved","data","callback","packet","type","onOpen","onClose","description","onPacket","decodePayload","socket","binaryType","forEach","close","write","packets","encodePayload","doWrite","query","schema","timestampRequests","timestampParam","yeast","sid","b64","Number","encodedQuery","encode","ipv6","indexOf","path","length","assign","uri","fn","req","request","method","on","xhrStatus","context","onError","onData","bind","pollXhr","Transport","installTimerFunctions","async","undefined","create","pick","xscheme","open","extraHeaders","setDisableHeaderCheck","i","hasOwnProperty","setRequestHeader","e","withCredentials","requestTimeout","timeout","onreadystatechange","status","onLoad","setTimeoutFn","send","document","index","requestsCount","requests","err","cleanup","fromError","abort","responseText","Emitter","attachEvent","unloadHandler","addEventListener","terminationEvent","globalThisShim"],"sources":["C:/Users/Amali/Desktop/Building_the_IoT_w._P2P_and_Cloud_Computing/IoTProject/node_modules/engine.io-client/build/cjs/transports/polling.js"],"sourcesContent":["\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Request = exports.Polling = void 0;\nconst transport_js_1 = require(\"../transport.js\");\nconst debug_1 = __importDefault(require(\"debug\")); // debug()\nconst yeast_js_1 = require(\"../contrib/yeast.js\");\nconst parseqs_js_1 = require(\"../contrib/parseqs.js\");\nconst engine_io_parser_1 = require(\"engine.io-parser\");\nconst xmlhttprequest_js_1 = require(\"./xmlhttprequest.js\");\nconst component_emitter_1 = require(\"@socket.io/component-emitter\");\nconst util_js_1 = require(\"../util.js\");\nconst globalThis_js_1 = require(\"../globalThis.js\");\nconst debug = (0, debug_1.default)(\"engine.io-client:polling\"); // debug()\nfunction empty() { }\nconst hasXHR2 = (function () {\n    const xhr = new xmlhttprequest_js_1.XHR({\n        xdomain: false\n    });\n    return null != xhr.responseType;\n})();\nclass Polling extends transport_js_1.Transport {\n    /**\n     * XHR Polling constructor.\n     *\n     * @param {Object} opts\n     * @api public\n     */\n    constructor(opts) {\n        super(opts);\n        this.polling = false;\n        if (typeof location !== \"undefined\") {\n            const isSSL = \"https:\" === location.protocol;\n            let port = location.port;\n            // some user agents have empty `location.port`\n            if (!port) {\n                port = isSSL ? \"443\" : \"80\";\n            }\n            this.xd =\n                (typeof location !== \"undefined\" &&\n                    opts.hostname !== location.hostname) ||\n                    port !== opts.port;\n            this.xs = opts.secure !== isSSL;\n        }\n        /**\n         * XHR supports binary\n         */\n        const forceBase64 = opts && opts.forceBase64;\n        this.supportsBinary = hasXHR2 && !forceBase64;\n    }\n    /**\n     * Transport name.\n     */\n    get name() {\n        return \"polling\";\n    }\n    /**\n     * Opens the socket (triggers polling). We write a PING message to determine\n     * when the transport is open.\n     *\n     * @api private\n     */\n    doOpen() {\n        this.poll();\n    }\n    /**\n     * Pauses polling.\n     *\n     * @param {Function} callback upon buffers are flushed and transport is paused\n     * @api private\n     */\n    pause(onPause) {\n        this.readyState = \"pausing\";\n        const pause = () => {\n            debug(\"paused\");\n            this.readyState = \"paused\";\n            onPause();\n        };\n        if (this.polling || !this.writable) {\n            let total = 0;\n            if (this.polling) {\n                debug(\"we are currently polling - waiting to pause\");\n                total++;\n                this.once(\"pollComplete\", function () {\n                    debug(\"pre-pause polling complete\");\n                    --total || pause();\n                });\n            }\n            if (!this.writable) {\n                debug(\"we are currently writing - waiting to pause\");\n                total++;\n                this.once(\"drain\", function () {\n                    debug(\"pre-pause writing complete\");\n                    --total || pause();\n                });\n            }\n        }\n        else {\n            pause();\n        }\n    }\n    /**\n     * Starts polling cycle.\n     *\n     * @api public\n     */\n    poll() {\n        debug(\"polling\");\n        this.polling = true;\n        this.doPoll();\n        this.emitReserved(\"poll\");\n    }\n    /**\n     * Overloads onData to detect payloads.\n     *\n     * @api private\n     */\n    onData(data) {\n        debug(\"polling got data %s\", data);\n        const callback = packet => {\n            // if its the first message we consider the transport open\n            if (\"opening\" === this.readyState && packet.type === \"open\") {\n                this.onOpen();\n            }\n            // if its a close packet, we close the ongoing requests\n            if (\"close\" === packet.type) {\n                this.onClose({ description: \"transport closed by the server\" });\n                return false;\n            }\n            // otherwise bypass onData and handle the message\n            this.onPacket(packet);\n        };\n        // decode payload\n        (0, engine_io_parser_1.decodePayload)(data, this.socket.binaryType).forEach(callback);\n        // if an event did not trigger closing\n        if (\"closed\" !== this.readyState) {\n            // if we got data we're not polling\n            this.polling = false;\n            this.emitReserved(\"pollComplete\");\n            if (\"open\" === this.readyState) {\n                this.poll();\n            }\n            else {\n                debug('ignoring poll - transport state \"%s\"', this.readyState);\n            }\n        }\n    }\n    /**\n     * For polling, send a close packet.\n     *\n     * @api private\n     */\n    doClose() {\n        const close = () => {\n            debug(\"writing close packet\");\n            this.write([{ type: \"close\" }]);\n        };\n        if (\"open\" === this.readyState) {\n            debug(\"transport open - closing\");\n            close();\n        }\n        else {\n            // in case we're trying to close while\n            // handshaking is in progress (GH-164)\n            debug(\"transport not open - deferring close\");\n            this.once(\"open\", close);\n        }\n    }\n    /**\n     * Writes a packets payload.\n     *\n     * @param {Array} data packets\n     * @param {Function} drain callback\n     * @api private\n     */\n    write(packets) {\n        this.writable = false;\n        (0, engine_io_parser_1.encodePayload)(packets, data => {\n            this.doWrite(data, () => {\n                this.writable = true;\n                this.emitReserved(\"drain\");\n            });\n        });\n    }\n    /**\n     * Generates uri for connection.\n     *\n     * @api private\n     */\n    uri() {\n        let query = this.query || {};\n        const schema = this.opts.secure ? \"https\" : \"http\";\n        let port = \"\";\n        // cache busting is forced\n        if (false !== this.opts.timestampRequests) {\n            query[this.opts.timestampParam] = (0, yeast_js_1.yeast)();\n        }\n        if (!this.supportsBinary && !query.sid) {\n            query.b64 = 1;\n        }\n        // avoid port if default for schema\n        if (this.opts.port &&\n            ((\"https\" === schema && Number(this.opts.port) !== 443) ||\n                (\"http\" === schema && Number(this.opts.port) !== 80))) {\n            port = \":\" + this.opts.port;\n        }\n        const encodedQuery = (0, parseqs_js_1.encode)(query);\n        const ipv6 = this.opts.hostname.indexOf(\":\") !== -1;\n        return (schema +\n            \"://\" +\n            (ipv6 ? \"[\" + this.opts.hostname + \"]\" : this.opts.hostname) +\n            port +\n            this.opts.path +\n            (encodedQuery.length ? \"?\" + encodedQuery : \"\"));\n    }\n    /**\n     * Creates a request.\n     *\n     * @param {String} method\n     * @api private\n     */\n    request(opts = {}) {\n        Object.assign(opts, { xd: this.xd, xs: this.xs }, this.opts);\n        return new Request(this.uri(), opts);\n    }\n    /**\n     * Sends data.\n     *\n     * @param {String} data to send.\n     * @param {Function} called upon flush.\n     * @api private\n     */\n    doWrite(data, fn) {\n        const req = this.request({\n            method: \"POST\",\n            data: data\n        });\n        req.on(\"success\", fn);\n        req.on(\"error\", (xhrStatus, context) => {\n            this.onError(\"xhr post error\", xhrStatus, context);\n        });\n    }\n    /**\n     * Starts a poll cycle.\n     *\n     * @api private\n     */\n    doPoll() {\n        debug(\"xhr poll\");\n        const req = this.request();\n        req.on(\"data\", this.onData.bind(this));\n        req.on(\"error\", (xhrStatus, context) => {\n            this.onError(\"xhr poll error\", xhrStatus, context);\n        });\n        this.pollXhr = req;\n    }\n}\nexports.Polling = Polling;\nclass Request extends component_emitter_1.Emitter {\n    /**\n     * Request constructor\n     *\n     * @param {Object} options\n     * @api public\n     */\n    constructor(uri, opts) {\n        super();\n        (0, util_js_1.installTimerFunctions)(this, opts);\n        this.opts = opts;\n        this.method = opts.method || \"GET\";\n        this.uri = uri;\n        this.async = false !== opts.async;\n        this.data = undefined !== opts.data ? opts.data : null;\n        this.create();\n    }\n    /**\n     * Creates the XHR object and sends the request.\n     *\n     * @api private\n     */\n    create() {\n        const opts = (0, util_js_1.pick)(this.opts, \"agent\", \"pfx\", \"key\", \"passphrase\", \"cert\", \"ca\", \"ciphers\", \"rejectUnauthorized\", \"autoUnref\");\n        opts.xdomain = !!this.opts.xd;\n        opts.xscheme = !!this.opts.xs;\n        const xhr = (this.xhr = new xmlhttprequest_js_1.XHR(opts));\n        try {\n            debug(\"xhr open %s: %s\", this.method, this.uri);\n            xhr.open(this.method, this.uri, this.async);\n            try {\n                if (this.opts.extraHeaders) {\n                    xhr.setDisableHeaderCheck && xhr.setDisableHeaderCheck(true);\n                    for (let i in this.opts.extraHeaders) {\n                        if (this.opts.extraHeaders.hasOwnProperty(i)) {\n                            xhr.setRequestHeader(i, this.opts.extraHeaders[i]);\n                        }\n                    }\n                }\n            }\n            catch (e) { }\n            if (\"POST\" === this.method) {\n                try {\n                    xhr.setRequestHeader(\"Content-type\", \"text/plain;charset=UTF-8\");\n                }\n                catch (e) { }\n            }\n            try {\n                xhr.setRequestHeader(\"Accept\", \"*/*\");\n            }\n            catch (e) { }\n            // ie6 check\n            if (\"withCredentials\" in xhr) {\n                xhr.withCredentials = this.opts.withCredentials;\n            }\n            if (this.opts.requestTimeout) {\n                xhr.timeout = this.opts.requestTimeout;\n            }\n            xhr.onreadystatechange = () => {\n                if (4 !== xhr.readyState)\n                    return;\n                if (200 === xhr.status || 1223 === xhr.status) {\n                    this.onLoad();\n                }\n                else {\n                    // make sure the `error` event handler that's user-set\n                    // does not throw in the same tick and gets caught here\n                    this.setTimeoutFn(() => {\n                        this.onError(typeof xhr.status === \"number\" ? xhr.status : 0);\n                    }, 0);\n                }\n            };\n            debug(\"xhr data %s\", this.data);\n            xhr.send(this.data);\n        }\n        catch (e) {\n            // Need to defer since .create() is called directly from the constructor\n            // and thus the 'error' event can only be only bound *after* this exception\n            // occurs.  Therefore, also, we cannot throw here at all.\n            this.setTimeoutFn(() => {\n                this.onError(e);\n            }, 0);\n            return;\n        }\n        if (typeof document !== \"undefined\") {\n            this.index = Request.requestsCount++;\n            Request.requests[this.index] = this;\n        }\n    }\n    /**\n     * Called upon error.\n     *\n     * @api private\n     */\n    onError(err) {\n        this.emitReserved(\"error\", err, this.xhr);\n        this.cleanup(true);\n    }\n    /**\n     * Cleans up house.\n     *\n     * @api private\n     */\n    cleanup(fromError) {\n        if (\"undefined\" === typeof this.xhr || null === this.xhr) {\n            return;\n        }\n        this.xhr.onreadystatechange = empty;\n        if (fromError) {\n            try {\n                this.xhr.abort();\n            }\n            catch (e) { }\n        }\n        if (typeof document !== \"undefined\") {\n            delete Request.requests[this.index];\n        }\n        this.xhr = null;\n    }\n    /**\n     * Called upon load.\n     *\n     * @api private\n     */\n    onLoad() {\n        const data = this.xhr.responseText;\n        if (data !== null) {\n            this.emitReserved(\"data\", data);\n            this.emitReserved(\"success\");\n            this.cleanup();\n        }\n    }\n    /**\n     * Aborts the request.\n     *\n     * @api public\n     */\n    abort() {\n        this.cleanup();\n    }\n}\nexports.Request = Request;\nRequest.requestsCount = 0;\nRequest.requests = {};\n/**\n * Aborts pending requests when unloading the window. This is needed to prevent\n * memory leaks (e.g. when using IE) and to ensure that no spurious error is\n * emitted.\n */\nif (typeof document !== \"undefined\") {\n    // @ts-ignore\n    if (typeof attachEvent === \"function\") {\n        // @ts-ignore\n        attachEvent(\"onunload\", unloadHandler);\n    }\n    else if (typeof addEventListener === \"function\") {\n        const terminationEvent = \"onpagehide\" in globalThis_js_1.globalThisShim ? \"pagehide\" : \"unload\";\n        addEventListener(terminationEvent, unloadHandler, false);\n    }\n}\nfunction unloadHandler() {\n    for (let i in Request.requests) {\n        if (Request.requests.hasOwnProperty(i)) {\n            Request.requests[i].abort();\n        }\n    }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}