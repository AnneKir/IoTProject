{"ast":null,"code":"import { __read, __spreadArray } from \"tslib\";\nimport { operate } from '../util/lift';\nimport { concatAll } from './concatAll';\nimport { popScheduler } from '../util/args';\nimport { from } from '../observable/from';\nexport function concat() {\n  var args = [];\n  for (var _i = 0; _i < arguments.length; _i++) {\n    args[_i] = arguments[_i];\n  }\n  var scheduler = popScheduler(args);\n  return operate(function (source, subscriber) {\n    concatAll()(from(__spreadArray([source], __read(args)), scheduler)).subscribe(subscriber);\n  });\n}","map":{"version":3,"mappings":";AACA,SAASA,OAAO,QAAQ,cAAc;AACtC,SAASC,SAAS,QAAQ,aAAa;AACvC,SAASC,YAAY,QAAQ,cAAc;AAC3C,SAASC,IAAI,QAAQ,oBAAoB;AAYzC,OAAM,SAAUC,MAAM;EAAO;OAAA,UAAc,EAAdC,qBAAc,EAAdA,IAAc;IAAdC;;EAC3B,IAAMC,SAAS,GAAGL,YAAY,CAACI,IAAI,CAAC;EACpC,OAAON,OAAO,CAAC,UAACQ,MAAM,EAAEC,UAAU;IAChCR,SAAS,EAAE,CAACE,IAAI,gBAAEK,MAAM,UAAKF,IAAI,IAAGC,SAAS,CAAC,CAAC,CAACG,SAAS,CAACD,UAAU,CAAC;EACvE,CAAC,CAAC;AACJ","names":["operate","concatAll","popScheduler","from","concat","_i","args","scheduler","source","subscriber","subscribe"],"sources":["C:\\Users\\Amali\\Desktop\\Building_the_IoT_w._P2P_and_Cloud_Computing\\IoTProject\\node_modules\\rxjs\\src\\internal\\operators\\concat.ts"],"sourcesContent":["import { ObservableInputTuple, OperatorFunction, SchedulerLike } from '../types';\nimport { operate } from '../util/lift';\nimport { concatAll } from './concatAll';\nimport { popScheduler } from '../util/args';\nimport { from } from '../observable/from';\n\n/** @deprecated Replaced with {@link concatWith}. Will be removed in v8. */\nexport function concat<T, A extends readonly unknown[]>(...sources: [...ObservableInputTuple<A>]): OperatorFunction<T, T | A[number]>;\n/** @deprecated Replaced with {@link concatWith}. Will be removed in v8. */\nexport function concat<T, A extends readonly unknown[]>(\n  ...sourcesAndScheduler: [...ObservableInputTuple<A>, SchedulerLike]\n): OperatorFunction<T, T | A[number]>;\n\n/**\n * @deprecated Replaced with {@link concatWith}. Will be removed in v8.\n */\nexport function concat<T, R>(...args: any[]): OperatorFunction<T, R> {\n  const scheduler = popScheduler(args);\n  return operate((source, subscriber) => {\n    concatAll()(from([source, ...args], scheduler)).subscribe(subscriber);\n  });\n}\n"]},"metadata":{},"sourceType":"module"}