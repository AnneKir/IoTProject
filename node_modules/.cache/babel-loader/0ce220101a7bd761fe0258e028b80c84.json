{"ast":null,"code":"import { __values } from \"tslib\";\nimport { Subject } from '../Subject';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\nexport function windowCount(windowSize, startWindowEvery) {\n  if (startWindowEvery === void 0) {\n    startWindowEvery = 0;\n  }\n  var startEvery = startWindowEvery > 0 ? startWindowEvery : windowSize;\n  return operate(function (source, subscriber) {\n    var windows = [new Subject()];\n    var starts = [];\n    var count = 0;\n    subscriber.next(windows[0].asObservable());\n    source.subscribe(createOperatorSubscriber(subscriber, function (value) {\n      var e_1, _a;\n      try {\n        for (var windows_1 = __values(windows), windows_1_1 = windows_1.next(); !windows_1_1.done; windows_1_1 = windows_1.next()) {\n          var window_1 = windows_1_1.value;\n          window_1.next(value);\n        }\n      } catch (e_1_1) {\n        e_1 = {\n          error: e_1_1\n        };\n      } finally {\n        try {\n          if (windows_1_1 && !windows_1_1.done && (_a = windows_1.return)) _a.call(windows_1);\n        } finally {\n          if (e_1) throw e_1.error;\n        }\n      }\n      var c = count - windowSize + 1;\n      if (c >= 0 && c % startEvery === 0) {\n        windows.shift().complete();\n      }\n      if (++count % startEvery === 0) {\n        var window_2 = new Subject();\n        windows.push(window_2);\n        subscriber.next(window_2.asObservable());\n      }\n    }, function () {\n      while (windows.length > 0) {\n        windows.shift().complete();\n      }\n      subscriber.complete();\n    }, function (err) {\n      while (windows.length > 0) {\n        windows.shift().error(err);\n      }\n      subscriber.error(err);\n    }, function () {\n      starts = null;\n      windows = null;\n    }));\n  });\n}","map":{"version":3,"mappings":";AACA,SAASA,OAAO,QAAQ,YAAY;AAEpC,SAASC,OAAO,QAAQ,cAAc;AACtC,SAASC,wBAAwB,QAAQ,sBAAsB;AAgE/D,OAAM,SAAUC,WAAW,CAAIC,UAAkB,EAAEC,gBAA4B;EAA5B;IAAAA,oBAA4B;EAAA;EAC7E,IAAMC,UAAU,GAAGD,gBAAgB,GAAG,CAAC,GAAGA,gBAAgB,GAAGD,UAAU;EAEvE,OAAOH,OAAO,CAAC,UAACM,MAAM,EAAEC,UAAU;IAChC,IAAIC,OAAO,GAAG,CAAC,IAAIT,OAAO,EAAK,CAAC;IAChC,IAAIU,MAAM,GAAa,EAAE;IACzB,IAAIC,KAAK,GAAG,CAAC;IAGbH,UAAU,CAACI,IAAI,CAACH,OAAO,CAAC,CAAC,CAAC,CAACI,YAAY,EAAE,CAAC;IAE1CN,MAAM,CAACO,SAAS,CACdZ,wBAAwB,CACtBM,UAAU,EACV,UAACO,KAAQ;;;QAIP,KAAqB,gCAAO,sFAAE;UAAzB,IAAMC,QAAM;UACfA,QAAM,CAACJ,IAAI,CAACG,KAAK,CAAC;;;;;;;;;;;;;MAOpB,IAAME,CAAC,GAAGN,KAAK,GAAGP,UAAU,GAAG,CAAC;MAChC,IAAIa,CAAC,IAAI,CAAC,IAAIA,CAAC,GAAGX,UAAU,KAAK,CAAC,EAAE;QAClCG,OAAO,CAACS,KAAK,EAAG,CAACC,QAAQ,EAAE;;MAQ7B,IAAI,EAAER,KAAK,GAAGL,UAAU,KAAK,CAAC,EAAE;QAC9B,IAAMc,QAAM,GAAG,IAAIpB,OAAO,EAAK;QAC/BS,OAAO,CAACY,IAAI,CAACD,QAAM,CAAC;QACpBZ,UAAU,CAACI,IAAI,CAACQ,QAAM,CAACP,YAAY,EAAE,CAAC;;IAE1C,CAAC,EACD;MACE,OAAOJ,OAAO,CAACa,MAAM,GAAG,CAAC,EAAE;QACzBb,OAAO,CAACS,KAAK,EAAG,CAACC,QAAQ,EAAE;;MAE7BX,UAAU,CAACW,QAAQ,EAAE;IACvB,CAAC,EACD,UAACI,GAAG;MACF,OAAOd,OAAO,CAACa,MAAM,GAAG,CAAC,EAAE;QACzBb,OAAO,CAACS,KAAK,EAAG,CAACM,KAAK,CAACD,GAAG,CAAC;;MAE7Bf,UAAU,CAACgB,KAAK,CAACD,GAAG,CAAC;IACvB,CAAC,EACD;MACEb,MAAM,GAAG,IAAK;MACdD,OAAO,GAAG,IAAK;IACjB,CAAC,CACF,CACF;EACH,CAAC,CAAC;AACJ","names":["Subject","operate","createOperatorSubscriber","windowCount","windowSize","startWindowEvery","startEvery","source","subscriber","windows","starts","count","next","asObservable","subscribe","value","window_1","c","shift","complete","window_2","push","length","err","error"],"sources":["../../../../src/internal/operators/windowCount.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}