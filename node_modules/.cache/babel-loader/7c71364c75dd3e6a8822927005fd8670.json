{"ast":null,"code":"import { __read, __spreadArray } from \"tslib\";\nimport { zip as zipStatic } from '../observable/zip';\nimport { operate } from '../util/lift';\nexport function zip() {\n  var sources = [];\n  for (var _i = 0; _i < arguments.length; _i++) {\n    sources[_i] = arguments[_i];\n  }\n  return operate(function (source, subscriber) {\n    zipStatic.apply(void 0, __spreadArray([source], __read(sources))).subscribe(subscriber);\n  });\n}","map":{"version":3,"mappings":";AAAA,SAASA,GAAG,IAAIC,SAAS,QAAQ,mBAAmB;AAEpD,SAASC,OAAO,QAAQ,cAAc;AAmBtC,OAAM,SAAUF,GAAG;EAAO;OAAA,UAAwE,EAAxEG,qBAAwE,EAAxEA,IAAwE;IAAxEC;;EACxB,OAAOF,OAAO,CAAC,UAACG,MAAM,EAAEC,UAAU;IAChCL,SAAS,8BAACI,MAA8B,UAAMD,OAAuC,IAAEG,SAAS,CAACD,UAAU,CAAC;EAC9G,CAAC,CAAC;AACJ","names":["zip","zipStatic","operate","_i","sources","source","subscriber","subscribe"],"sources":["C:\\Users\\Amali\\Desktop\\Building_the_IoT_w._P2P_and_Cloud_Computing\\IoTProject\\node_modules\\rxjs\\src\\internal\\operators\\zip.ts"],"sourcesContent":["import { zip as zipStatic } from '../observable/zip';\r\nimport { ObservableInput, ObservableInputTuple, OperatorFunction, Cons } from '../types';\r\nimport { operate } from '../util/lift';\r\n\r\n/** @deprecated Replaced with {@link zipWith}. Will be removed in v8. */\r\nexport function zip<T, A extends readonly unknown[]>(otherInputs: [...ObservableInputTuple<A>]): OperatorFunction<T, Cons<T, A>>;\r\n/** @deprecated Replaced with {@link zipWith}. Will be removed in v8. */\r\nexport function zip<T, A extends readonly unknown[], R>(\r\n  otherInputsAndProject: [...ObservableInputTuple<A>],\r\n  project: (...values: Cons<T, A>) => R\r\n): OperatorFunction<T, R>;\r\n/** @deprecated Replaced with {@link zipWith}. Will be removed in v8. */\r\nexport function zip<T, A extends readonly unknown[]>(...otherInputs: [...ObservableInputTuple<A>]): OperatorFunction<T, Cons<T, A>>;\r\n/** @deprecated Replaced with {@link zipWith}. Will be removed in v8. */\r\nexport function zip<T, A extends readonly unknown[], R>(\r\n  ...otherInputsAndProject: [...ObservableInputTuple<A>, (...values: Cons<T, A>) => R]\r\n): OperatorFunction<T, R>;\r\n\r\n/**\r\n * @deprecated Replaced with {@link zipWith}. Will be removed in v8.\r\n */\r\nexport function zip<T, R>(...sources: Array<ObservableInput<any> | ((...values: Array<any>) => R)>): OperatorFunction<T, any> {\r\n  return operate((source, subscriber) => {\r\n    zipStatic(source as ObservableInput<any>, ...(sources as Array<ObservableInput<any>>)).subscribe(subscriber);\r\n  });\r\n}\r\n"]},"metadata":{},"sourceType":"module"}