{"ast":null,"code":"\"use strict\";\n\nfunction validUrl(e) {\n  return /http(s)?:\\/\\/(\\w+:?\\w*@)?(\\S+)(:\\d+)?((?<=\\.)\\w+)+(\\/([\\w#!:.?+=&%@!\\-/])*)?/gi.test(e);\n}\nfunction validTypeImage(e) {\n  return /(?<=\\S+)\\.(jpg|png|jpeg)/gi.test(e);\n}\nfunction base64ToNode(e) {\n  return e.toString(\"base64\");\n}\nfunction readFileAndConvert(e) {\n  var r = require(\"fs\"),\n    t = require(\"path\");\n  return r.statSync(e).isFile() ? base64ToNode(r.readFileSync(t.resolve(e)).toString(\"base64\")) : null;\n}\nfunction isImage(e) {\n  return validTypeImage(e) ? Promise.resolve(readFileAndConvert(e)) : Promise.reject(\"[*] Occurent some error... [validTypeImage] == false\");\n}\nfunction imageToBase64(e) {\n  return validUrl(e) ? require(\"node-fetch\")(e).then(function (e) {\n    return e.buffer();\n  }).then(base64ToNode) : isImage(e);\n}\nmodule.exports = imageToBase64;","map":{"version":3,"names":["validUrl","e","test","validTypeImage","base64ToNode","toString","readFileAndConvert","r","require","t","statSync","isFile","readFileSync","resolve","isImage","Promise","reject","imageToBase64","then","buffer","module","exports"],"sources":["/Users/athallenberg/Dropbox/Kandidat/IoT/IoTProject/node_modules/image-to-base64/image-to-base64.min.js"],"sourcesContent":["\"use strict\";function validUrl(e){return/http(s)?:\\/\\/(\\w+:?\\w*@)?(\\S+)(:\\d+)?((?<=\\.)\\w+)+(\\/([\\w#!:.?+=&%@!\\-/])*)?/gi.test(e)}function validTypeImage(e){return/(?<=\\S+)\\.(jpg|png|jpeg)/gi.test(e)}function base64ToNode(e){return e.toString(\"base64\")}function readFileAndConvert(e){var r=require(\"fs\"),t=require(\"path\");return r.statSync(e).isFile()?base64ToNode(r.readFileSync(t.resolve(e)).toString(\"base64\")):null}function isImage(e){return validTypeImage(e)?Promise.resolve(readFileAndConvert(e)):Promise.reject(\"[*] Occurent some error... [validTypeImage] == false\")}function imageToBase64(e){return validUrl(e)?require(\"node-fetch\")(e).then(function(e){return e.buffer()}).then(base64ToNode):isImage(e)}module.exports=imageToBase64;\r\n"],"mappings":"AAAA,YAAY;;AAAC,SAASA,QAAQ,CAACC,CAAC,EAAC;EAAC,OAAM,gFAAgF,CAACC,IAAI,CAACD,CAAC,CAAC;AAAA;AAAC,SAASE,cAAc,CAACF,CAAC,EAAC;EAAC,OAAM,4BAA4B,CAACC,IAAI,CAACD,CAAC,CAAC;AAAA;AAAC,SAASG,YAAY,CAACH,CAAC,EAAC;EAAC,OAAOA,CAAC,CAACI,QAAQ,CAAC,QAAQ,CAAC;AAAA;AAAC,SAASC,kBAAkB,CAACL,CAAC,EAAC;EAAC,IAAIM,CAAC,GAACC,OAAO,CAAC,IAAI,CAAC;IAACC,CAAC,GAACD,OAAO,CAAC,MAAM,CAAC;EAAC,OAAOD,CAAC,CAACG,QAAQ,CAACT,CAAC,CAAC,CAACU,MAAM,EAAE,GAACP,YAAY,CAACG,CAAC,CAACK,YAAY,CAACH,CAAC,CAACI,OAAO,CAACZ,CAAC,CAAC,CAAC,CAACI,QAAQ,CAAC,QAAQ,CAAC,CAAC,GAAC,IAAI;AAAA;AAAC,SAASS,OAAO,CAACb,CAAC,EAAC;EAAC,OAAOE,cAAc,CAACF,CAAC,CAAC,GAACc,OAAO,CAACF,OAAO,CAACP,kBAAkB,CAACL,CAAC,CAAC,CAAC,GAACc,OAAO,CAACC,MAAM,CAAC,sDAAsD,CAAC;AAAA;AAAC,SAASC,aAAa,CAAChB,CAAC,EAAC;EAAC,OAAOD,QAAQ,CAACC,CAAC,CAAC,GAACO,OAAO,CAAC,YAAY,CAAC,CAACP,CAAC,CAAC,CAACiB,IAAI,CAAC,UAASjB,CAAC,EAAC;IAAC,OAAOA,CAAC,CAACkB,MAAM,EAAE;EAAA,CAAC,CAAC,CAACD,IAAI,CAACd,YAAY,CAAC,GAACU,OAAO,CAACb,CAAC,CAAC;AAAA;AAACmB,MAAM,CAACC,OAAO,GAACJ,aAAa"},"metadata":{},"sourceType":"script"}