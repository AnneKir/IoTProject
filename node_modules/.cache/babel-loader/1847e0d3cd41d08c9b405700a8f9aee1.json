{"ast":null,"code":"import { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\nexport function every(predicate, thisArg) {\n  return operate(function (source, subscriber) {\n    var index = 0;\n    source.subscribe(createOperatorSubscriber(subscriber, function (value) {\n      if (!predicate.call(thisArg, value, index++, source)) {\n        subscriber.next(false);\n        subscriber.complete();\n      }\n    }, function () {\n      subscriber.next(true);\n      subscriber.complete();\n    }));\n  });\n}","map":{"version":3,"mappings":"AAEA,SAASA,OAAO,QAAQ,cAAc;AACtC,SAASC,wBAAwB,QAAQ,sBAAsB;AAwC/D,OAAM,SAAUC,KAAK,CACnBC,SAAsE,EACtEC,OAAa;EAEb,OAAOJ,OAAO,CAAC,UAACK,MAAM,EAAEC,UAAU;IAChC,IAAIC,KAAK,GAAG,CAAC;IACbF,MAAM,CAACG,SAAS,CACdP,wBAAwB,CACtBK,UAAU,EACV,UAACG,KAAK;MACJ,IAAI,CAACN,SAAS,CAACO,IAAI,CAACN,OAAO,EAAEK,KAAK,EAAEF,KAAK,EAAE,EAAEF,MAAM,CAAC,EAAE;QACpDC,UAAU,CAACK,IAAI,CAAC,KAAK,CAAC;QACtBL,UAAU,CAACM,QAAQ,EAAE;;IAEzB,CAAC,EACD;MACEN,UAAU,CAACK,IAAI,CAAC,IAAI,CAAC;MACrBL,UAAU,CAACM,QAAQ,EAAE;IACvB,CAAC,CACF,CACF;EACH,CAAC,CAAC;AACJ","names":["operate","createOperatorSubscriber","every","predicate","thisArg","source","subscriber","index","subscribe","value","call","next","complete"],"sources":["C:\\Users\\Amali\\Desktop\\Building_the_IoT_w._P2P_and_Cloud_Computing\\IoTProject\\node_modules\\rxjs\\src\\internal\\operators\\every.ts"],"sourcesContent":["import { Observable } from '../Observable';\r\nimport { Falsy, OperatorFunction } from '../types';\r\nimport { operate } from '../util/lift';\r\nimport { createOperatorSubscriber } from './OperatorSubscriber';\r\n\r\nexport function every<T>(predicate: BooleanConstructor): OperatorFunction<T, Exclude<T, Falsy> extends never ? false : boolean>;\r\n/** @deprecated Use a closure instead of a `thisArg`. Signatures accepting a `thisArg` will be removed in v8. */\r\nexport function every<T>(\r\n  predicate: BooleanConstructor,\r\n  thisArg: any\r\n): OperatorFunction<T, Exclude<T, Falsy> extends never ? false : boolean>;\r\n/** @deprecated Use a closure instead of a `thisArg`. Signatures accepting a `thisArg` will be removed in v8. */\r\nexport function every<T, A>(\r\n  predicate: (this: A, value: T, index: number, source: Observable<T>) => boolean,\r\n  thisArg: A\r\n): OperatorFunction<T, boolean>;\r\nexport function every<T>(predicate: (value: T, index: number, source: Observable<T>) => boolean): OperatorFunction<T, boolean>;\r\n\r\n/**\r\n * Returns an Observable that emits whether or not every item of the source satisfies the condition specified.\r\n *\r\n * <span class=\"informal\">If all values pass predicate before the source completes, emits true before completion,\r\n * otherwise emit false, then complete.</span>\r\n *\r\n * ![](every.png)\r\n *\r\n * ## Example\r\n *\r\n * A simple example emitting true if all elements are less than 5, false otherwise\r\n *\r\n * ```ts\r\n * import { of, every } from 'rxjs';\r\n *\r\n * of(1, 2, 3, 4, 5, 6)\r\n *   .pipe(every(x => x < 5))\r\n *   .subscribe(x => console.log(x)); // -> false\r\n * ```\r\n *\r\n * @param {function} predicate A function for determining if an item meets a specified condition.\r\n * @param {any} [thisArg] Optional object to use for `this` in the callback.\r\n * @return A function that returns an Observable of booleans that determines if\r\n * all items of the source Observable meet the condition specified.\r\n */\r\nexport function every<T>(\r\n  predicate: (value: T, index: number, source: Observable<T>) => boolean,\r\n  thisArg?: any\r\n): OperatorFunction<T, boolean> {\r\n  return operate((source, subscriber) => {\r\n    let index = 0;\r\n    source.subscribe(\r\n      createOperatorSubscriber(\r\n        subscriber,\r\n        (value) => {\r\n          if (!predicate.call(thisArg, value, index++, source)) {\r\n            subscriber.next(false);\r\n            subscriber.complete();\r\n          }\r\n        },\r\n        () => {\r\n          subscriber.next(true);\r\n          subscriber.complete();\r\n        }\r\n      )\r\n    );\r\n  });\r\n}\r\n"]},"metadata":{},"sourceType":"module"}