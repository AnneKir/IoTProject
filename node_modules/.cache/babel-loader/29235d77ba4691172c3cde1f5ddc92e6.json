{"ast":null,"code":"import { distinctUntilChanged } from './distinctUntilChanged';\nexport function distinctUntilKeyChanged(key, compare) {\n  return distinctUntilChanged(function (x, y) {\n    return compare ? compare(x[key], y[key]) : x[key] === y[key];\n  });\n}","map":{"version":3,"mappings":"AAAA,SAASA,oBAAoB,QAAQ,wBAAwB;AAoE7D,OAAM,SAAUC,uBAAuB,CAAuBC,GAAM,EAAEC,OAAuC;EAC3G,OAAOH,oBAAoB,CAAC,UAACI,CAAI,EAAEC,CAAI;IAAK,cAAO,GAAGF,OAAO,CAACC,CAAC,CAACF,GAAG,CAAC,EAAEG,CAAC,CAACH,GAAG,CAAC,CAAC,GAAGE,CAAC,CAACF,GAAG,CAAC,KAAKG,CAAC,CAACH,GAAG,CAAC;EAArD,CAAqD,CAAC;AACpG","names":["distinctUntilChanged","distinctUntilKeyChanged","key","compare","x","y"],"sources":["../../../../src/internal/operators/distinctUntilKeyChanged.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}