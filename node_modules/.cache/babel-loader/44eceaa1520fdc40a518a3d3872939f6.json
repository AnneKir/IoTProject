{"ast":null,"code":"// https://github.com/lisajamhoury/simple-peer-wrapper\nimport wrtc from'wrtc';import SimplePeerWrapper from'simple-peer-wrapper';// in your client code - create a wrapper and connect to your server\nvar options={serverUrl:'http://localhost:8081',debugger:true,simplePeerOptions:{initiator:true,trickle:false,wrtc:wrtc}};var spw=new SimplePeerWrapper(options);// creates a socket connection to signaling server\nspw.connect();// initiates peer connection via socket connection\nexport function startServer(){var spw=new SimplePeerWrapper(options);console.log(\"ehek\");spw.connect();spw.on('connect',gotConnect);spw.on('data',gotData);}spw.on('connect',gotConnect);// document.getElementById(\"incoming\");\n// make sure you close the connection before you close the window\n// window.onbeforeunload = () => {\n//   spw.close();\n// };\n// a global variable to hold data\nvar partnerMouse;// when we receive data, call the gotData function\nspw.on('data',gotData);// this runs each time data is received\n// the incoming data is passed into the function\nfunction gotData(data){// put the incoming data somewhere to use later\npartnerMouse=data.data;console.log(\"got data: \"+partnerMouse.toString());}// document.querySelector()\nvar count=0;function gotConnect(){console.log('peer connection open');count++;spw.send(\"hej\"+count.toString());}spw.on('error',function(err){return console.log('error',err);});","map":{"version":3,"names":["wrtc","SimplePeerWrapper","options","serverUrl","debugger","simplePeerOptions","initiator","trickle","spw","connect","startServer","console","log","on","gotConnect","gotData","partnerMouse","data","toString","count","send","err"],"sources":["C:/Users/Amali/Desktop/Building_the_IoT_w._P2P_and_Cloud_Computing/IoTProject/src/first.js"],"sourcesContent":["// https://github.com/lisajamhoury/simple-peer-wrapper\r\n\r\nimport wrtc from 'wrtc';\r\n\r\nimport SimplePeerWrapper from 'simple-peer-wrapper';\r\n// in your client code - create a wrapper and connect to your server\r\nconst options = {\r\n  serverUrl: 'http://localhost:8081',\r\n  debugger: true,\r\n  simplePeerOptions: {\r\n    initiator: true,\r\n    trickle: false,\r\n    wrtc: wrtc\r\n  }\r\n};\r\n\r\nconst spw = new SimplePeerWrapper(options); // creates a socket connection to signaling server\r\nspw.connect();  // initiates peer connection via socket connection\r\n\r\nexport function startServer() {\r\n  const spw = new SimplePeerWrapper(options);\r\n  console.log(\"ehek\")\r\n  spw.connect();\r\n  spw.on('connect', gotConnect);\r\n  spw.on('data', gotData);\r\n}\r\n\r\nspw.on('connect', gotConnect);\r\n\r\n// document.getElementById(\"incoming\");\r\n\r\n// make sure you close the connection before you close the window\r\n// window.onbeforeunload = () => {\r\n//   spw.close();\r\n// };\r\n\r\n// a global variable to hold data\r\nlet partnerMouse;\r\n\r\n// when we receive data, call the gotData function\r\nspw.on('data', gotData);\r\n\r\n// this runs each time data is received\r\n// the incoming data is passed into the function\r\nfunction gotData(data) {\r\n  // put the incoming data somewhere to use later\r\n  partnerMouse = data.data;\r\n  console.log(\"got data: \" + partnerMouse.toString())\r\n}\r\n// document.querySelector()\r\n\r\nlet count = 0;\r\nfunction gotConnect() {\r\n  console.log('peer connection open');\r\n  count++;\r\n  spw.send(\"hej\" + count.toString());\r\n}\r\n\r\nspw.on('error', err => console.log('error', err))\r\n"],"mappings":"AAAA;AAEA,MAAOA,KAAI,KAAM,MAAM,CAEvB,MAAOC,kBAAiB,KAAM,qBAAqB,CACnD;AACA,GAAMC,QAAO,CAAG,CACdC,SAAS,CAAE,uBAAuB,CAClCC,QAAQ,CAAE,IAAI,CACdC,iBAAiB,CAAE,CACjBC,SAAS,CAAE,IAAI,CACfC,OAAO,CAAE,KAAK,CACdP,IAAI,CAAEA,IACR,CACF,CAAC,CAED,GAAMQ,IAAG,CAAG,GAAIP,kBAAiB,CAACC,OAAO,CAAC,CAAE;AAC5CM,GAAG,CAACC,OAAO,EAAE,CAAG;AAEhB,MAAO,SAASC,YAAW,EAAG,CAC5B,GAAMF,IAAG,CAAG,GAAIP,kBAAiB,CAACC,OAAO,CAAC,CAC1CS,OAAO,CAACC,GAAG,CAAC,MAAM,CAAC,CACnBJ,GAAG,CAACC,OAAO,EAAE,CACbD,GAAG,CAACK,EAAE,CAAC,SAAS,CAAEC,UAAU,CAAC,CAC7BN,GAAG,CAACK,EAAE,CAAC,MAAM,CAAEE,OAAO,CAAC,CACzB,CAEAP,GAAG,CAACK,EAAE,CAAC,SAAS,CAAEC,UAAU,CAAC,CAE7B;AAEA;AACA;AACA;AACA;AAEA;AACA,GAAIE,aAAY,CAEhB;AACAR,GAAG,CAACK,EAAE,CAAC,MAAM,CAAEE,OAAO,CAAC,CAEvB;AACA;AACA,QAASA,QAAO,CAACE,IAAI,CAAE,CACrB;AACAD,YAAY,CAAGC,IAAI,CAACA,IAAI,CACxBN,OAAO,CAACC,GAAG,CAAC,YAAY,CAAGI,YAAY,CAACE,QAAQ,EAAE,CAAC,CACrD,CACA;AAEA,GAAIC,MAAK,CAAG,CAAC,CACb,QAASL,WAAU,EAAG,CACpBH,OAAO,CAACC,GAAG,CAAC,sBAAsB,CAAC,CACnCO,KAAK,EAAE,CACPX,GAAG,CAACY,IAAI,CAAC,KAAK,CAAGD,KAAK,CAACD,QAAQ,EAAE,CAAC,CACpC,CAEAV,GAAG,CAACK,EAAE,CAAC,OAAO,CAAE,SAAAQ,GAAG,QAAIV,QAAO,CAACC,GAAG,CAAC,OAAO,CAAES,GAAG,CAAC,GAAC"},"metadata":{},"sourceType":"module"}