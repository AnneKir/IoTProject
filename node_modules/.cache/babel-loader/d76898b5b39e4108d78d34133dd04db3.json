{"ast":null,"code":"import { createErrorClass } from './createErrorClass';\nexport var UnsubscriptionError = createErrorClass(function (_super) {\n  return function UnsubscriptionErrorImpl(errors) {\n    _super(this);\n    this.message = errors ? errors.length + \" errors occurred during unsubscription:\\n\" + errors.map(function (err, i) {\n      return i + 1 + \") \" + err.toString();\n    }).join('\\n  ') : '';\n    this.name = 'UnsubscriptionError';\n    this.errors = errors;\n  };\n});","map":{"version":3,"mappings":"AAAA,SAASA,gBAAgB,QAAQ,oBAAoB;AAkBrD,OAAO,IAAMC,mBAAmB,GAA4BD,gBAAgB,CAC1E,UAACE,MAAM;EACL,gBAASC,uBAAuB,CAAYC,MAA0B;IACpEF,MAAM,CAAC,IAAI,CAAC;IACZ,IAAI,CAACG,OAAO,GAAGD,MAAM,GACdA,MAAM,CAACE,MAAM,iDACxBF,MAAM,CAACG,GAAG,CAAC,UAACC,GAAG,EAAEC,CAAC;MAAK,OAAGA,CAAC,GAAG,CAAC,UAAKD,GAAG,CAACE,QAAQ,EAAI;IAA7B,CAA6B,CAAC,CAACC,IAAI,CAAC,MAAM,CAAG,GAC5D,EAAE;IACN,IAAI,CAACC,IAAI,GAAG,qBAAqB;IACjC,IAAI,CAACR,MAAM,GAAGA,MAAM;EACtB,CAAC;AARD,CAQC,CACJ","names":["createErrorClass","UnsubscriptionError","_super","UnsubscriptionErrorImpl","errors","message","length","map","err","i","toString","join","name"],"sources":["C:\\Users\\Amali\\Desktop\\Building_the_IoT_w._P2P_and_Cloud_Computing\\IoTProject\\node_modules\\rxjs\\src\\internal\\util\\UnsubscriptionError.ts"],"sourcesContent":["import { createErrorClass } from './createErrorClass';\r\n\r\nexport interface UnsubscriptionError extends Error {\r\n  readonly errors: any[];\r\n}\r\n\r\nexport interface UnsubscriptionErrorCtor {\r\n  /**\r\n   * @deprecated Internal implementation detail. Do not construct error instances.\r\n   * Cannot be tagged as internal: https://github.com/ReactiveX/rxjs/issues/6269\r\n   */\r\n  new (errors: any[]): UnsubscriptionError;\r\n}\r\n\r\n/**\r\n * An error thrown when one or more errors have occurred during the\r\n * `unsubscribe` of a {@link Subscription}.\r\n */\r\nexport const UnsubscriptionError: UnsubscriptionErrorCtor = createErrorClass(\r\n  (_super) =>\r\n    function UnsubscriptionErrorImpl(this: any, errors: (Error | string)[]) {\r\n      _super(this);\r\n      this.message = errors\r\n        ? `${errors.length} errors occurred during unsubscription:\r\n${errors.map((err, i) => `${i + 1}) ${err.toString()}`).join('\\n  ')}`\r\n        : '';\r\n      this.name = 'UnsubscriptionError';\r\n      this.errors = errors;\r\n    }\r\n);\r\n"]},"metadata":{},"sourceType":"module"}