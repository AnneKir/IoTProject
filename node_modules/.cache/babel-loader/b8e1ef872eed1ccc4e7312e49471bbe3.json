{"ast":null,"code":"import { Observable } from '../Observable';\nimport { innerFrom } from '../observable/innerFrom';\nimport { Subject } from '../Subject';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber, OperatorSubscriber } from './OperatorSubscriber';\nexport function groupBy(keySelector, elementOrOptions, duration, connector) {\n  return operate(function (source, subscriber) {\n    var element;\n    if (!elementOrOptions || typeof elementOrOptions === 'function') {\n      element = elementOrOptions;\n    } else {\n      duration = elementOrOptions.duration, element = elementOrOptions.element, connector = elementOrOptions.connector;\n    }\n    var groups = new Map();\n    var notify = function (cb) {\n      groups.forEach(cb);\n      cb(subscriber);\n    };\n    var handleError = function (err) {\n      return notify(function (consumer) {\n        return consumer.error(err);\n      });\n    };\n    var activeGroups = 0;\n    var teardownAttempted = false;\n    var groupBySourceSubscriber = new OperatorSubscriber(subscriber, function (value) {\n      try {\n        var key_1 = keySelector(value);\n        var group_1 = groups.get(key_1);\n        if (!group_1) {\n          groups.set(key_1, group_1 = connector ? connector() : new Subject());\n          var grouped = createGroupedObservable(key_1, group_1);\n          subscriber.next(grouped);\n          if (duration) {\n            var durationSubscriber_1 = createOperatorSubscriber(group_1, function () {\n              group_1.complete();\n              durationSubscriber_1 === null || durationSubscriber_1 === void 0 ? void 0 : durationSubscriber_1.unsubscribe();\n            }, undefined, undefined, function () {\n              return groups.delete(key_1);\n            });\n            groupBySourceSubscriber.add(innerFrom(duration(grouped)).subscribe(durationSubscriber_1));\n          }\n        }\n        group_1.next(element ? element(value) : value);\n      } catch (err) {\n        handleError(err);\n      }\n    }, function () {\n      return notify(function (consumer) {\n        return consumer.complete();\n      });\n    }, handleError, function () {\n      return groups.clear();\n    }, function () {\n      teardownAttempted = true;\n      return activeGroups === 0;\n    });\n    source.subscribe(groupBySourceSubscriber);\n    function createGroupedObservable(key, groupSubject) {\n      var result = new Observable(function (groupSubscriber) {\n        activeGroups++;\n        var innerSub = groupSubject.subscribe(groupSubscriber);\n        return function () {\n          innerSub.unsubscribe();\n          --activeGroups === 0 && teardownAttempted && groupBySourceSubscriber.unsubscribe();\n        };\n      });\n      result.key = key;\n      return result;\n    }\n  });\n}","map":{"version":3,"mappings":"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","names":["Observable","innerFrom","Subject","operate","createOperatorSubscriber","OperatorSubscriber","groupBy","keySelector","elementOrOptions","duration","connector","source","subscriber","element","groups","Map","notify","cb","forEach","handleError","err","consumer","error","activeGroups","teardownAttempted","groupBySourceSubscriber","value","key_1","group_1","get","set","grouped","createGroupedObservable","next","durationSubscriber_1","complete","unsubscribe","undefined","delete","add","subscribe","clear","key","groupSubject","result","groupSubscriber","innerSub"],"sources":["../../../../src/internal/operators/groupBy.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}