{"ast":null,"code":"/*! queue-microtask. MIT License. Feross Aboukhadijeh <https://feross.org/opensource> */\nlet promise;\nmodule.exports = typeof queueMicrotask === 'function' ? queueMicrotask.bind(typeof window !== 'undefined' ? window : global)\n// reuse resolved promise, and allocate it lazily\n: cb => (promise || (promise = Promise.resolve())).then(cb).catch(err => setTimeout(() => {\n  throw err;\n}, 0));","map":{"version":3,"names":["promise","module","exports","queueMicrotask","bind","window","global","cb","Promise","resolve","then","catch","err","setTimeout"],"sources":["C:/Users/annek/Documents/Github/IoTProject/node_modules/queue-microtask/index.js"],"sourcesContent":["/*! queue-microtask. MIT License. Feross Aboukhadijeh <https://feross.org/opensource> */\r\nlet promise\r\n\r\nmodule.exports = typeof queueMicrotask === 'function'\r\n  ? queueMicrotask.bind(typeof window !== 'undefined' ? window : global)\r\n  // reuse resolved promise, and allocate it lazily\r\n  : cb => (promise || (promise = Promise.resolve()))\r\n    .then(cb)\r\n    .catch(err => setTimeout(() => { throw err }, 0))\r\n"],"mappings":"AAAA;AACA,IAAIA,OAAO;AAEXC,MAAM,CAACC,OAAO,GAAG,OAAOC,cAAc,KAAK,UAAU,GACjDA,cAAc,CAACC,IAAI,CAAC,OAAOC,MAAM,KAAK,WAAW,GAAGA,MAAM,GAAGC,MAAM;AACrE;AAAA,EACEC,EAAE,IAAI,CAACP,OAAO,KAAKA,OAAO,GAAGQ,OAAO,CAACC,OAAO,EAAE,CAAC,EAC9CC,IAAI,CAACH,EAAE,CAAC,CACRI,KAAK,CAACC,GAAG,IAAIC,UAAU,CAAC,MAAM;EAAE,MAAMD,GAAG;AAAC,CAAC,EAAE,CAAC,CAAC,CAAC"},"metadata":{},"sourceType":"script"}