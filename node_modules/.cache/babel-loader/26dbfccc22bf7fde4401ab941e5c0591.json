{"ast":null,"code":"\"use strict\";\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.WS = void 0;\nconst transport_js_1 = require(\"../transport.js\");\nconst parseqs_js_1 = require(\"../contrib/parseqs.js\");\nconst yeast_js_1 = require(\"../contrib/yeast.js\");\nconst util_js_1 = require(\"../util.js\");\nconst websocket_constructor_js_1 = require(\"./websocket-constructor.js\");\nconst debug_1 = __importDefault(require(\"debug\")); // debug()\nconst engine_io_parser_1 = require(\"engine.io-parser\");\nconst debug = (0, debug_1.default)(\"engine.io-client:websocket\"); // debug()\n// detect ReactNative environment\nconst isReactNative = typeof navigator !== \"undefined\" && typeof navigator.product === \"string\" && navigator.product.toLowerCase() === \"reactnative\";\nclass WS extends transport_js_1.Transport {\n  /**\r\n   * WebSocket transport constructor.\r\n   *\r\n   * @api {Object} connection options\r\n   * @api public\r\n   */\n  constructor(opts) {\n    super(opts);\n    this.supportsBinary = !opts.forceBase64;\n  }\n  /**\r\n   * Transport name.\r\n   *\r\n   * @api public\r\n   */\n  get name() {\n    return \"websocket\";\n  }\n  /**\r\n   * Opens socket.\r\n   *\r\n   * @api private\r\n   */\n  doOpen() {\n    if (!this.check()) {\n      // let probe timeout\n      return;\n    }\n    const uri = this.uri();\n    const protocols = this.opts.protocols;\n    // React Native only supports the 'headers' option, and will print a warning if anything else is passed\n    const opts = isReactNative ? {} : (0, util_js_1.pick)(this.opts, \"agent\", \"perMessageDeflate\", \"pfx\", \"key\", \"passphrase\", \"cert\", \"ca\", \"ciphers\", \"rejectUnauthorized\", \"localAddress\", \"protocolVersion\", \"origin\", \"maxPayload\", \"family\", \"checkServerIdentity\");\n    if (this.opts.extraHeaders) {\n      opts.headers = this.opts.extraHeaders;\n    }\n    try {\n      this.ws = websocket_constructor_js_1.usingBrowserWebSocket && !isReactNative ? protocols ? new websocket_constructor_js_1.WebSocket(uri, protocols) : new websocket_constructor_js_1.WebSocket(uri) : new websocket_constructor_js_1.WebSocket(uri, protocols, opts);\n    } catch (err) {\n      return this.emitReserved(\"error\", err);\n    }\n    this.ws.binaryType = this.socket.binaryType || websocket_constructor_js_1.defaultBinaryType;\n    this.addEventListeners();\n  }\n  /**\r\n   * Adds event listeners to the socket\r\n   *\r\n   * @api private\r\n   */\n  addEventListeners() {\n    this.ws.onopen = () => {\n      if (this.opts.autoUnref) {\n        this.ws._socket.unref();\n      }\n      this.onOpen();\n    };\n    this.ws.onclose = closeEvent => this.onClose({\n      description: \"websocket connection closed\",\n      context: closeEvent\n    });\n    this.ws.onmessage = ev => this.onData(ev.data);\n    this.ws.onerror = e => this.onError(\"websocket error\", e);\n  }\n  /**\r\n   * Writes data to socket.\r\n   *\r\n   * @param {Array} array of packets.\r\n   * @api private\r\n   */\n  write(packets) {\n    this.writable = false;\n    // encodePacket efficient as it uses WS framing\n    // no need for encodePayload\n    for (let i = 0; i < packets.length; i++) {\n      const packet = packets[i];\n      const lastPacket = i === packets.length - 1;\n      (0, engine_io_parser_1.encodePacket)(packet, this.supportsBinary, data => {\n        // always create a new object (GH-437)\n        const opts = {};\n        if (!websocket_constructor_js_1.usingBrowserWebSocket) {\n          if (packet.options) {\n            opts.compress = packet.options.compress;\n          }\n          if (this.opts.perMessageDeflate) {\n            const len =\n            // @ts-ignore\n            \"string\" === typeof data ? Buffer.byteLength(data) : data.length;\n            if (len < this.opts.perMessageDeflate.threshold) {\n              opts.compress = false;\n            }\n          }\n        }\n        // Sometimes the websocket has already been closed but the browser didn't\n        // have a chance of informing us about it yet, in that case send will\n        // throw an error\n        try {\n          if (websocket_constructor_js_1.usingBrowserWebSocket) {\n            // TypeError is thrown when passing the second argument on Safari\n            this.ws.send(data);\n          } else {\n            this.ws.send(data, opts);\n          }\n        } catch (e) {\n          debug(\"websocket closed before onclose event\");\n        }\n        if (lastPacket) {\n          // fake drain\n          // defer to next tick to allow Socket to clear writeBuffer\n          (0, websocket_constructor_js_1.nextTick)(() => {\n            this.writable = true;\n            this.emitReserved(\"drain\");\n          }, this.setTimeoutFn);\n        }\n      });\n    }\n  }\n  /**\r\n   * Closes socket.\r\n   *\r\n   * @api private\r\n   */\n  doClose() {\n    if (typeof this.ws !== \"undefined\") {\n      this.ws.close();\n      this.ws = null;\n    }\n  }\n  /**\r\n   * Generates uri for connection.\r\n   *\r\n   * @api private\r\n   */\n  uri() {\n    let query = this.query || {};\n    const schema = this.opts.secure ? \"wss\" : \"ws\";\n    let port = \"\";\n    // avoid port if default for schema\n    if (this.opts.port && (\"wss\" === schema && Number(this.opts.port) !== 443 || \"ws\" === schema && Number(this.opts.port) !== 80)) {\n      port = \":\" + this.opts.port;\n    }\n    // append timestamp to URI\n    if (this.opts.timestampRequests) {\n      query[this.opts.timestampParam] = (0, yeast_js_1.yeast)();\n    }\n    // communicate binary support capabilities\n    if (!this.supportsBinary) {\n      query.b64 = 1;\n    }\n    const encodedQuery = (0, parseqs_js_1.encode)(query);\n    const ipv6 = this.opts.hostname.indexOf(\":\") !== -1;\n    return schema + \"://\" + (ipv6 ? \"[\" + this.opts.hostname + \"]\" : this.opts.hostname) + port + this.opts.path + (encodedQuery.length ? \"?\" + encodedQuery : \"\");\n  }\n  /**\r\n   * Feature detection for WebSocket.\r\n   *\r\n   * @return {Boolean} whether this transport is available.\r\n   * @api public\r\n   */\n  check() {\n    return !!websocket_constructor_js_1.WebSocket;\n  }\n}\nexports.WS = WS;","map":{"version":3,"names":["__importDefault","mod","__esModule","Object","defineProperty","exports","value","WS","transport_js_1","require","parseqs_js_1","yeast_js_1","util_js_1","websocket_constructor_js_1","debug_1","engine_io_parser_1","debug","default","isReactNative","navigator","product","toLowerCase","Transport","constructor","opts","supportsBinary","forceBase64","name","doOpen","check","uri","protocols","pick","extraHeaders","headers","ws","usingBrowserWebSocket","WebSocket","err","emitReserved","binaryType","socket","defaultBinaryType","addEventListeners","onopen","autoUnref","_socket","unref","onOpen","onclose","closeEvent","onClose","description","context","onmessage","ev","onData","data","onerror","e","onError","write","packets","writable","i","length","packet","lastPacket","encodePacket","options","compress","perMessageDeflate","len","Buffer","byteLength","threshold","send","nextTick","setTimeoutFn","doClose","close","query","schema","secure","port","Number","timestampRequests","timestampParam","yeast","b64","encodedQuery","encode","ipv6","hostname","indexOf","path"],"sources":["C:/Users/annek/Documents/Github/IoTProject/node_modules/engine.io-client/build/cjs/transports/websocket.js"],"sourcesContent":["\"use strict\";\r\nvar __importDefault = (this && this.__importDefault) || function (mod) {\r\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.WS = void 0;\r\nconst transport_js_1 = require(\"../transport.js\");\r\nconst parseqs_js_1 = require(\"../contrib/parseqs.js\");\r\nconst yeast_js_1 = require(\"../contrib/yeast.js\");\r\nconst util_js_1 = require(\"../util.js\");\r\nconst websocket_constructor_js_1 = require(\"./websocket-constructor.js\");\r\nconst debug_1 = __importDefault(require(\"debug\")); // debug()\r\nconst engine_io_parser_1 = require(\"engine.io-parser\");\r\nconst debug = (0, debug_1.default)(\"engine.io-client:websocket\"); // debug()\r\n// detect ReactNative environment\r\nconst isReactNative = typeof navigator !== \"undefined\" &&\r\n    typeof navigator.product === \"string\" &&\r\n    navigator.product.toLowerCase() === \"reactnative\";\r\nclass WS extends transport_js_1.Transport {\r\n    /**\r\n     * WebSocket transport constructor.\r\n     *\r\n     * @api {Object} connection options\r\n     * @api public\r\n     */\r\n    constructor(opts) {\r\n        super(opts);\r\n        this.supportsBinary = !opts.forceBase64;\r\n    }\r\n    /**\r\n     * Transport name.\r\n     *\r\n     * @api public\r\n     */\r\n    get name() {\r\n        return \"websocket\";\r\n    }\r\n    /**\r\n     * Opens socket.\r\n     *\r\n     * @api private\r\n     */\r\n    doOpen() {\r\n        if (!this.check()) {\r\n            // let probe timeout\r\n            return;\r\n        }\r\n        const uri = this.uri();\r\n        const protocols = this.opts.protocols;\r\n        // React Native only supports the 'headers' option, and will print a warning if anything else is passed\r\n        const opts = isReactNative\r\n            ? {}\r\n            : (0, util_js_1.pick)(this.opts, \"agent\", \"perMessageDeflate\", \"pfx\", \"key\", \"passphrase\", \"cert\", \"ca\", \"ciphers\", \"rejectUnauthorized\", \"localAddress\", \"protocolVersion\", \"origin\", \"maxPayload\", \"family\", \"checkServerIdentity\");\r\n        if (this.opts.extraHeaders) {\r\n            opts.headers = this.opts.extraHeaders;\r\n        }\r\n        try {\r\n            this.ws =\r\n                websocket_constructor_js_1.usingBrowserWebSocket && !isReactNative\r\n                    ? protocols\r\n                        ? new websocket_constructor_js_1.WebSocket(uri, protocols)\r\n                        : new websocket_constructor_js_1.WebSocket(uri)\r\n                    : new websocket_constructor_js_1.WebSocket(uri, protocols, opts);\r\n        }\r\n        catch (err) {\r\n            return this.emitReserved(\"error\", err);\r\n        }\r\n        this.ws.binaryType = this.socket.binaryType || websocket_constructor_js_1.defaultBinaryType;\r\n        this.addEventListeners();\r\n    }\r\n    /**\r\n     * Adds event listeners to the socket\r\n     *\r\n     * @api private\r\n     */\r\n    addEventListeners() {\r\n        this.ws.onopen = () => {\r\n            if (this.opts.autoUnref) {\r\n                this.ws._socket.unref();\r\n            }\r\n            this.onOpen();\r\n        };\r\n        this.ws.onclose = closeEvent => this.onClose({\r\n            description: \"websocket connection closed\",\r\n            context: closeEvent\r\n        });\r\n        this.ws.onmessage = ev => this.onData(ev.data);\r\n        this.ws.onerror = e => this.onError(\"websocket error\", e);\r\n    }\r\n    /**\r\n     * Writes data to socket.\r\n     *\r\n     * @param {Array} array of packets.\r\n     * @api private\r\n     */\r\n    write(packets) {\r\n        this.writable = false;\r\n        // encodePacket efficient as it uses WS framing\r\n        // no need for encodePayload\r\n        for (let i = 0; i < packets.length; i++) {\r\n            const packet = packets[i];\r\n            const lastPacket = i === packets.length - 1;\r\n            (0, engine_io_parser_1.encodePacket)(packet, this.supportsBinary, data => {\r\n                // always create a new object (GH-437)\r\n                const opts = {};\r\n                if (!websocket_constructor_js_1.usingBrowserWebSocket) {\r\n                    if (packet.options) {\r\n                        opts.compress = packet.options.compress;\r\n                    }\r\n                    if (this.opts.perMessageDeflate) {\r\n                        const len = \r\n                        // @ts-ignore\r\n                        \"string\" === typeof data ? Buffer.byteLength(data) : data.length;\r\n                        if (len < this.opts.perMessageDeflate.threshold) {\r\n                            opts.compress = false;\r\n                        }\r\n                    }\r\n                }\r\n                // Sometimes the websocket has already been closed but the browser didn't\r\n                // have a chance of informing us about it yet, in that case send will\r\n                // throw an error\r\n                try {\r\n                    if (websocket_constructor_js_1.usingBrowserWebSocket) {\r\n                        // TypeError is thrown when passing the second argument on Safari\r\n                        this.ws.send(data);\r\n                    }\r\n                    else {\r\n                        this.ws.send(data, opts);\r\n                    }\r\n                }\r\n                catch (e) {\r\n                    debug(\"websocket closed before onclose event\");\r\n                }\r\n                if (lastPacket) {\r\n                    // fake drain\r\n                    // defer to next tick to allow Socket to clear writeBuffer\r\n                    (0, websocket_constructor_js_1.nextTick)(() => {\r\n                        this.writable = true;\r\n                        this.emitReserved(\"drain\");\r\n                    }, this.setTimeoutFn);\r\n                }\r\n            });\r\n        }\r\n    }\r\n    /**\r\n     * Closes socket.\r\n     *\r\n     * @api private\r\n     */\r\n    doClose() {\r\n        if (typeof this.ws !== \"undefined\") {\r\n            this.ws.close();\r\n            this.ws = null;\r\n        }\r\n    }\r\n    /**\r\n     * Generates uri for connection.\r\n     *\r\n     * @api private\r\n     */\r\n    uri() {\r\n        let query = this.query || {};\r\n        const schema = this.opts.secure ? \"wss\" : \"ws\";\r\n        let port = \"\";\r\n        // avoid port if default for schema\r\n        if (this.opts.port &&\r\n            ((\"wss\" === schema && Number(this.opts.port) !== 443) ||\r\n                (\"ws\" === schema && Number(this.opts.port) !== 80))) {\r\n            port = \":\" + this.opts.port;\r\n        }\r\n        // append timestamp to URI\r\n        if (this.opts.timestampRequests) {\r\n            query[this.opts.timestampParam] = (0, yeast_js_1.yeast)();\r\n        }\r\n        // communicate binary support capabilities\r\n        if (!this.supportsBinary) {\r\n            query.b64 = 1;\r\n        }\r\n        const encodedQuery = (0, parseqs_js_1.encode)(query);\r\n        const ipv6 = this.opts.hostname.indexOf(\":\") !== -1;\r\n        return (schema +\r\n            \"://\" +\r\n            (ipv6 ? \"[\" + this.opts.hostname + \"]\" : this.opts.hostname) +\r\n            port +\r\n            this.opts.path +\r\n            (encodedQuery.length ? \"?\" + encodedQuery : \"\"));\r\n    }\r\n    /**\r\n     * Feature detection for WebSocket.\r\n     *\r\n     * @return {Boolean} whether this transport is available.\r\n     * @api public\r\n     */\r\n    check() {\r\n        return !!websocket_constructor_js_1.WebSocket;\r\n    }\r\n}\r\nexports.WS = WS;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}