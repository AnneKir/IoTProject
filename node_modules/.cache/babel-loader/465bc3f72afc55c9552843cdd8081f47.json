{"ast":null,"code":"import { Observable } from '../Observable';\nimport { isFunction } from './isFunction';\nexport function isObservable(obj) {\n  return !!obj && (obj instanceof Observable || isFunction(obj.lift) && isFunction(obj.subscribe));\n}","map":{"version":3,"mappings":"AACA,SAASA,UAAU,QAAQ,eAAe;AAC1C,SAASC,UAAU,QAAQ,cAAc;AAMzC,OAAM,SAAUC,YAAY,CAACC,GAAQ;EAGnC,OAAO,CAAC,CAACA,GAAG,KAAKA,GAAG,YAAYH,UAAU,IAAKC,UAAU,CAACE,GAAG,CAACC,IAAI,CAAC,IAAIH,UAAU,CAACE,GAAG,CAACE,SAAS,CAAE,CAAC;AACpG","names":["Observable","isFunction","isObservable","obj","lift","subscribe"],"sources":["C:\\Users\\Amali\\Desktop\\Building_the_IoT_w._P2P_and_Cloud_Computing\\IoTProject\\node_modules\\rxjs\\src\\internal\\util\\isObservable.ts"],"sourcesContent":["/** prettier */\r\nimport { Observable } from '../Observable';\r\nimport { isFunction } from './isFunction';\r\n\r\n/**\r\n * Tests to see if the object is an RxJS {@link Observable}\r\n * @param obj the object to test\r\n */\r\nexport function isObservable(obj: any): obj is Observable<unknown> {\r\n  // The !! is to ensure that this publicly exposed function returns\r\n  // `false` if something like `null` or `0` is passed.\r\n  return !!obj && (obj instanceof Observable || (isFunction(obj.lift) && isFunction(obj.subscribe)));\r\n}\r\n"]},"metadata":{},"sourceType":"module"}