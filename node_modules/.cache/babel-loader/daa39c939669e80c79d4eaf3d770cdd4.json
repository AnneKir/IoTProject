{"ast":null,"code":"import { __read, __spreadArray } from \"tslib\";\nexport var intervalProvider = {\n  setInterval: function (_setInterval) {\n    function setInterval(_x, _x2) {\n      return _setInterval.apply(this, arguments);\n    }\n    setInterval.toString = function () {\n      return _setInterval.toString();\n    };\n    return setInterval;\n  }(function (handler, timeout) {\n    var args = [];\n    for (var _i = 2; _i < arguments.length; _i++) {\n      args[_i - 2] = arguments[_i];\n    }\n    var delegate = intervalProvider.delegate;\n    if (delegate === null || delegate === void 0 ? void 0 : delegate.setInterval) {\n      return delegate.setInterval.apply(delegate, __spreadArray([handler, timeout], __read(args)));\n    }\n    return setInterval.apply(void 0, __spreadArray([handler, timeout], __read(args)));\n  }),\n  clearInterval: function (_clearInterval) {\n    function clearInterval(_x3) {\n      return _clearInterval.apply(this, arguments);\n    }\n    clearInterval.toString = function () {\n      return _clearInterval.toString();\n    };\n    return clearInterval;\n  }(function (handle) {\n    var delegate = intervalProvider.delegate;\n    return ((delegate === null || delegate === void 0 ? void 0 : delegate.clearInterval) || clearInterval)(handle);\n  }),\n  delegate: undefined\n};","map":{"version":3,"mappings":";AAeA,OAAO,IAAMA,gBAAgB,GAAqB;EAGhDC,WAAW;IAAA;MAAA;IAAA;IAAA;MAAA;IAAA;IAAA;EAAA,EAAX,UAAYC,OAAmB,EAAEC,OAAgB;IAAE;SAAA,UAAO,EAAPC,qBAAO,EAAPA,IAAO;MAAPC;;IACzC,YAAQ,GAAKL,gBAAgB,SAArB;IAChB,IAAIM,QAAQ,aAARA,QAAQ,uBAARA,QAAQ,CAAEL,WAAW,EAAE;MACzB,OAAOK,QAAQ,CAACL,WAAW,OAApBK,QAAQ,iBAAaJ,OAAO,EAAEC,OAAO,UAAKE,IAAI;;IAEvD,OAAOJ,WAAW,8BAACC,OAAO,EAAEC,OAAO,UAAKE,IAAI;EAC9C,CAAC;EACDE,aAAa;IAAA;MAAA;IAAA;IAAA;MAAA;IAAA;IAAA;EAAA,EAAb,UAAcC,MAAM;IACV,YAAQ,GAAKR,gBAAgB,SAArB;IAChB,OAAO,CAAC,SAAQ,aAARM,QAAQ,uBAARA,QAAQ,CAAEC,aAAa,KAAIA,aAAa,EAAEC,MAAa,CAAC;EAClE,CAAC;EACDF,QAAQ,EAAEG;CACX","names":["intervalProvider","setInterval","handler","timeout","_i","args","delegate","clearInterval","handle","undefined"],"sources":["C:\\Users\\Amali\\Desktop\\Building_the_IoT_w._P2P_and_Cloud_Computing\\IoTProject\\node_modules\\rxjs\\src\\internal\\scheduler\\intervalProvider.ts"],"sourcesContent":["import type { TimerHandle } from './timerHandle';\r\ntype SetIntervalFunction = (handler: () => void, timeout?: number, ...args: any[]) => TimerHandle;\r\ntype ClearIntervalFunction = (handle: TimerHandle) => void;\r\n\r\ninterface IntervalProvider {\r\n  setInterval: SetIntervalFunction;\r\n  clearInterval: ClearIntervalFunction;\r\n  delegate:\r\n    | {\r\n        setInterval: SetIntervalFunction;\r\n        clearInterval: ClearIntervalFunction;\r\n      }\r\n    | undefined;\r\n}\r\n\r\nexport const intervalProvider: IntervalProvider = {\r\n  // When accessing the delegate, use the variable rather than `this` so that\r\n  // the functions can be called without being bound to the provider.\r\n  setInterval(handler: () => void, timeout?: number, ...args) {\r\n    const { delegate } = intervalProvider;\r\n    if (delegate?.setInterval) {\r\n      return delegate.setInterval(handler, timeout, ...args);\r\n    }\r\n    return setInterval(handler, timeout, ...args);\r\n  },\r\n  clearInterval(handle) {\r\n    const { delegate } = intervalProvider;\r\n    return (delegate?.clearInterval || clearInterval)(handle as any);\r\n  },\r\n  delegate: undefined,\r\n};\r\n"]},"metadata":{},"sourceType":"module"}