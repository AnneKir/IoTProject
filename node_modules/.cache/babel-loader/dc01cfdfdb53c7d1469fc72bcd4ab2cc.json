{"ast":null,"code":"import { __extends } from \"tslib\";\nimport { Subject } from './Subject';\nvar BehaviorSubject = function (_super) {\n  __extends(BehaviorSubject, _super);\n  function BehaviorSubject(_value) {\n    var _this = _super.call(this) || this;\n    _this._value = _value;\n    return _this;\n  }\n  Object.defineProperty(BehaviorSubject.prototype, \"value\", {\n    get: function () {\n      return this.getValue();\n    },\n    enumerable: false,\n    configurable: true\n  });\n  BehaviorSubject.prototype._subscribe = function (subscriber) {\n    var subscription = _super.prototype._subscribe.call(this, subscriber);\n    !subscription.closed && subscriber.next(this._value);\n    return subscription;\n  };\n  BehaviorSubject.prototype.getValue = function () {\n    var _a = this,\n      hasError = _a.hasError,\n      thrownError = _a.thrownError,\n      _value = _a._value;\n    if (hasError) {\n      throw thrownError;\n    }\n    this._throwIfClosed();\n    return _value;\n  };\n  BehaviorSubject.prototype.next = function (value) {\n    _super.prototype.next.call(this, this._value = value);\n  };\n  return BehaviorSubject;\n}(Subject);\nexport { BehaviorSubject };","map":{"version":3,"mappings":";AAAA,SAASA,OAAO,QAAQ,WAAW;AAUnC;EAAwCC;EACtC,yBAAoBC,MAAS;IAA7B,YACEC,iBAAO;IADWC,YAAM,GAANF,MAAM;;EAE1B;EAEAG,sBAAIC,kCAAK;SAAT;MACE,OAAO,IAAI,CAACC,QAAQ,EAAE;IACxB,CAAC;;;;EAGSD,oCAAU,GAApB,UAAqBE,UAAyB;IAC5C,IAAMC,YAAY,GAAGN,iBAAMO,UAAU,YAACF,UAAU,CAAC;IACjD,CAACC,YAAY,CAACE,MAAM,IAAIH,UAAU,CAACI,IAAI,CAAC,IAAI,CAACV,MAAM,CAAC;IACpD,OAAOO,YAAY;EACrB,CAAC;EAEDH,kCAAQ,GAAR;IACQ,SAAoC,IAAI;MAAtCO,QAAQ;MAAEC,WAAW;MAAEZ,MAAM,YAAS;IAC9C,IAAIW,QAAQ,EAAE;MACZ,MAAMC,WAAW;;IAEnB,IAAI,CAACC,cAAc,EAAE;IACrB,OAAOb,MAAM;EACf,CAAC;EAEDI,8BAAI,GAAJ,UAAKU,KAAQ;IACXb,iBAAMS,IAAI,YAAE,IAAI,CAACV,MAAM,GAAGc,KAAK,CAAE;EACnC,CAAC;EACH,sBAAC;AAAD,CAAC,CA5BuChB,OAAO","names":["Subject","__extends","_value","_super","_this","Object","BehaviorSubject","getValue","subscriber","subscription","_subscribe","closed","next","hasError","thrownError","_throwIfClosed","value"],"sources":["C:\\Users\\Amali\\Desktop\\Building_the_IoT_w._P2P_and_Cloud_Computing\\IoTProject\\node_modules\\rxjs\\src\\internal\\BehaviorSubject.ts"],"sourcesContent":["import { Subject } from './Subject';\r\nimport { Subscriber } from './Subscriber';\r\nimport { Subscription } from './Subscription';\r\n\r\n/**\r\n * A variant of Subject that requires an initial value and emits its current\r\n * value whenever it is subscribed to.\r\n *\r\n * @class BehaviorSubject<T>\r\n */\r\nexport class BehaviorSubject<T> extends Subject<T> {\r\n  constructor(private _value: T) {\r\n    super();\r\n  }\r\n\r\n  get value(): T {\r\n    return this.getValue();\r\n  }\r\n\r\n  /** @internal */\r\n  protected _subscribe(subscriber: Subscriber<T>): Subscription {\r\n    const subscription = super._subscribe(subscriber);\r\n    !subscription.closed && subscriber.next(this._value);\r\n    return subscription;\r\n  }\r\n\r\n  getValue(): T {\r\n    const { hasError, thrownError, _value } = this;\r\n    if (hasError) {\r\n      throw thrownError;\r\n    }\r\n    this._throwIfClosed();\r\n    return _value;\r\n  }\r\n\r\n  next(value: T): void {\r\n    super.next((this._value = value));\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}