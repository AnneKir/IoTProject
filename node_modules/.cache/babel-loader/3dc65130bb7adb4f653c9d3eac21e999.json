{"ast":null,"code":"'use strict';\n\nconst net = require('net');\nconst debug = require('debug')('mqttjs:tcp');\n\n/*\n  variables port and host can be removed since\n  you have all required information in opts object\n*/\nfunction streamBuilder(client, opts) {\n  opts.port = opts.port || 1883;\n  opts.hostname = opts.hostname || opts.host || 'localhost';\n  const port = opts.port;\n  const host = opts.hostname;\n  debug('port %d and host %s', port, host);\n  return net.createConnection(port, host);\n}\nmodule.exports = streamBuilder;","map":{"version":3,"names":["net","require","debug","streamBuilder","client","opts","port","hostname","host","createConnection","module","exports"],"sources":["C:/Users/Amali/Desktop/Building_the_IoT_w._P2P_and_Cloud_Computing/IoTProject/node_modules/mqtt/lib/connect/tcp.js"],"sourcesContent":["'use strict'\nconst net = require('net')\nconst debug = require('debug')('mqttjs:tcp')\n\n/*\n  variables port and host can be removed since\n  you have all required information in opts object\n*/\nfunction streamBuilder (client, opts) {\n  opts.port = opts.port || 1883\n  opts.hostname = opts.hostname || opts.host || 'localhost'\n\n  const port = opts.port\n  const host = opts.hostname\n\n  debug('port %d and host %s', port, host)\n  return net.createConnection(port, host)\n}\n\nmodule.exports = streamBuilder\n"],"mappings":"AAAA,YAAY;;AACZ,MAAMA,GAAG,GAAGC,OAAO,CAAC,KAAK,CAAC;AAC1B,MAAMC,KAAK,GAAGD,OAAO,CAAC,OAAO,CAAC,CAAC,YAAY,CAAC;;AAE5C;AACA;AACA;AACA;AACA,SAASE,aAAa,CAAEC,MAAM,EAAEC,IAAI,EAAE;EACpCA,IAAI,CAACC,IAAI,GAAGD,IAAI,CAACC,IAAI,IAAI,IAAI;EAC7BD,IAAI,CAACE,QAAQ,GAAGF,IAAI,CAACE,QAAQ,IAAIF,IAAI,CAACG,IAAI,IAAI,WAAW;EAEzD,MAAMF,IAAI,GAAGD,IAAI,CAACC,IAAI;EACtB,MAAME,IAAI,GAAGH,IAAI,CAACE,QAAQ;EAE1BL,KAAK,CAAC,qBAAqB,EAAEI,IAAI,EAAEE,IAAI,CAAC;EACxC,OAAOR,GAAG,CAACS,gBAAgB,CAACH,IAAI,EAAEE,IAAI,CAAC;AACzC;AAEAE,MAAM,CAACC,OAAO,GAAGR,aAAa"},"metadata":{},"sourceType":"script"}