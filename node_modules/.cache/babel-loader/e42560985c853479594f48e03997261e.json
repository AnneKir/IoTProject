{"ast":null,"code":"/*!\r\n * uid-safe\r\n * Copyright(c) 2014 Jonathan Ong\r\n * Copyright(c) 2015-2017 Douglas Christopher Wilson\r\n * MIT Licensed\r\n */\n\n'use strict';\n\n/**\r\n * Module dependencies.\r\n * @private\r\n */\nvar randomBytes = require('random-bytes');\n\n/**\r\n * Module variables.\r\n * @private\r\n */\n\nvar EQUAL_END_REGEXP = /=+$/;\nvar PLUS_GLOBAL_REGEXP = /\\+/g;\nvar SLASH_GLOBAL_REGEXP = /\\//g;\n\n/**\r\n * Module exports.\r\n * @public\r\n */\n\nmodule.exports = uid;\nmodule.exports.sync = uidSync;\n\n/**\r\n * Create a unique ID.\r\n *\r\n * @param {number} length\r\n * @param {function} [callback]\r\n * @return {Promise}\r\n * @public\r\n */\n\nfunction uid(length, callback) {\n  // validate callback is a function, if provided\n  if (callback !== undefined && typeof callback !== 'function') {\n    throw new TypeError('argument callback must be a function');\n  }\n\n  // require the callback without promises\n  if (!callback && !global.Promise) {\n    throw new TypeError('argument callback is required');\n  }\n  if (callback) {\n    // classic callback style\n    return generateUid(length, callback);\n  }\n  return new Promise(function executor(resolve, reject) {\n    generateUid(length, function onUid(err, str) {\n      if (err) return reject(err);\n      resolve(str);\n    });\n  });\n}\n\n/**\r\n * Create a unique ID sync.\r\n *\r\n * @param {number} length\r\n * @return {string}\r\n * @public\r\n */\n\nfunction uidSync(length) {\n  return toString(randomBytes.sync(length));\n}\n\n/**\r\n * Generate a unique ID string.\r\n *\r\n * @param {number} length\r\n * @param {function} callback\r\n * @private\r\n */\n\nfunction generateUid(length, callback) {\n  randomBytes(length, function (err, buf) {\n    if (err) return callback(err);\n    callback(null, toString(buf));\n  });\n}\n\n/**\r\n * Change a Buffer into a string.\r\n *\r\n * @param {Buffer} buf\r\n * @return {string}\r\n * @private\r\n */\n\nfunction toString(buf) {\n  return buf.toString('base64').replace(EQUAL_END_REGEXP, '').replace(PLUS_GLOBAL_REGEXP, '-').replace(SLASH_GLOBAL_REGEXP, '_');\n}","map":{"version":3,"names":["randomBytes","require","EQUAL_END_REGEXP","PLUS_GLOBAL_REGEXP","SLASH_GLOBAL_REGEXP","module","exports","uid","sync","uidSync","length","callback","undefined","TypeError","global","Promise","generateUid","executor","resolve","reject","onUid","err","str","toString","buf","replace"],"sources":["C:/Users/Amali/Desktop/Building_the_IoT_w._P2P_and_Cloud_Computing/IoTProject/node_modules/uid-safe/index.js"],"sourcesContent":["/*!\r\n * uid-safe\r\n * Copyright(c) 2014 Jonathan Ong\r\n * Copyright(c) 2015-2017 Douglas Christopher Wilson\r\n * MIT Licensed\r\n */\r\n\r\n'use strict'\r\n\r\n/**\r\n * Module dependencies.\r\n * @private\r\n */\r\n\r\nvar randomBytes = require('random-bytes')\r\n\r\n/**\r\n * Module variables.\r\n * @private\r\n */\r\n\r\nvar EQUAL_END_REGEXP = /=+$/\r\nvar PLUS_GLOBAL_REGEXP = /\\+/g\r\nvar SLASH_GLOBAL_REGEXP = /\\//g\r\n\r\n/**\r\n * Module exports.\r\n * @public\r\n */\r\n\r\nmodule.exports = uid\r\nmodule.exports.sync = uidSync\r\n\r\n/**\r\n * Create a unique ID.\r\n *\r\n * @param {number} length\r\n * @param {function} [callback]\r\n * @return {Promise}\r\n * @public\r\n */\r\n\r\nfunction uid (length, callback) {\r\n  // validate callback is a function, if provided\r\n  if (callback !== undefined && typeof callback !== 'function') {\r\n    throw new TypeError('argument callback must be a function')\r\n  }\r\n\r\n  // require the callback without promises\r\n  if (!callback && !global.Promise) {\r\n    throw new TypeError('argument callback is required')\r\n  }\r\n\r\n  if (callback) {\r\n    // classic callback style\r\n    return generateUid(length, callback)\r\n  }\r\n\r\n  return new Promise(function executor (resolve, reject) {\r\n    generateUid(length, function onUid (err, str) {\r\n      if (err) return reject(err)\r\n      resolve(str)\r\n    })\r\n  })\r\n}\r\n\r\n/**\r\n * Create a unique ID sync.\r\n *\r\n * @param {number} length\r\n * @return {string}\r\n * @public\r\n */\r\n\r\nfunction uidSync (length) {\r\n  return toString(randomBytes.sync(length))\r\n}\r\n\r\n/**\r\n * Generate a unique ID string.\r\n *\r\n * @param {number} length\r\n * @param {function} callback\r\n * @private\r\n */\r\n\r\nfunction generateUid (length, callback) {\r\n  randomBytes(length, function (err, buf) {\r\n    if (err) return callback(err)\r\n    callback(null, toString(buf))\r\n  })\r\n}\r\n\r\n/**\r\n * Change a Buffer into a string.\r\n *\r\n * @param {Buffer} buf\r\n * @return {string}\r\n * @private\r\n */\r\n\r\nfunction toString (buf) {\r\n  return buf.toString('base64')\r\n    .replace(EQUAL_END_REGEXP, '')\r\n    .replace(PLUS_GLOBAL_REGEXP, '-')\r\n    .replace(SLASH_GLOBAL_REGEXP, '_')\r\n}\r\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;;AAEA,YAAY;;AAEZ;AACA;AACA;AACA;AAEA,IAAIA,WAAW,GAAGC,OAAO,CAAC,cAAc,CAAC;;AAEzC;AACA;AACA;AACA;;AAEA,IAAIC,gBAAgB,GAAG,KAAK;AAC5B,IAAIC,kBAAkB,GAAG,KAAK;AAC9B,IAAIC,mBAAmB,GAAG,KAAK;;AAE/B;AACA;AACA;AACA;;AAEAC,MAAM,CAACC,OAAO,GAAGC,GAAG;AACpBF,MAAM,CAACC,OAAO,CAACE,IAAI,GAAGC,OAAO;;AAE7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAASF,GAAG,CAAEG,MAAM,EAAEC,QAAQ,EAAE;EAC9B;EACA,IAAIA,QAAQ,KAAKC,SAAS,IAAI,OAAOD,QAAQ,KAAK,UAAU,EAAE;IAC5D,MAAM,IAAIE,SAAS,CAAC,sCAAsC,CAAC;EAC7D;;EAEA;EACA,IAAI,CAACF,QAAQ,IAAI,CAACG,MAAM,CAACC,OAAO,EAAE;IAChC,MAAM,IAAIF,SAAS,CAAC,+BAA+B,CAAC;EACtD;EAEA,IAAIF,QAAQ,EAAE;IACZ;IACA,OAAOK,WAAW,CAACN,MAAM,EAAEC,QAAQ,CAAC;EACtC;EAEA,OAAO,IAAII,OAAO,CAAC,SAASE,QAAQ,CAAEC,OAAO,EAAEC,MAAM,EAAE;IACrDH,WAAW,CAACN,MAAM,EAAE,SAASU,KAAK,CAAEC,GAAG,EAAEC,GAAG,EAAE;MAC5C,IAAID,GAAG,EAAE,OAAOF,MAAM,CAACE,GAAG,CAAC;MAC3BH,OAAO,CAACI,GAAG,CAAC;IACd,CAAC,CAAC;EACJ,CAAC,CAAC;AACJ;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAASb,OAAO,CAAEC,MAAM,EAAE;EACxB,OAAOa,QAAQ,CAACvB,WAAW,CAACQ,IAAI,CAACE,MAAM,CAAC,CAAC;AAC3C;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAASM,WAAW,CAAEN,MAAM,EAAEC,QAAQ,EAAE;EACtCX,WAAW,CAACU,MAAM,EAAE,UAAUW,GAAG,EAAEG,GAAG,EAAE;IACtC,IAAIH,GAAG,EAAE,OAAOV,QAAQ,CAACU,GAAG,CAAC;IAC7BV,QAAQ,CAAC,IAAI,EAAEY,QAAQ,CAACC,GAAG,CAAC,CAAC;EAC/B,CAAC,CAAC;AACJ;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAASD,QAAQ,CAAEC,GAAG,EAAE;EACtB,OAAOA,GAAG,CAACD,QAAQ,CAAC,QAAQ,CAAC,CAC1BE,OAAO,CAACvB,gBAAgB,EAAE,EAAE,CAAC,CAC7BuB,OAAO,CAACtB,kBAAkB,EAAE,GAAG,CAAC,CAChCsB,OAAO,CAACrB,mBAAmB,EAAE,GAAG,CAAC;AACtC"},"metadata":{},"sourceType":"script"}