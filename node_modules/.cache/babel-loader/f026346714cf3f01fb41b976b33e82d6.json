{"ast":null,"code":"var xor = require('buffer-xor');\nfunction getBlock(self) {\n  self._prev = self._cipher.encryptBlock(self._prev);\n  return self._prev;\n}\nexports.encrypt = function (self, chunk) {\n  while (self._cache.length < chunk.length) {\n    self._cache = Buffer.concat([self._cache, getBlock(self)]);\n  }\n  var pad = self._cache.slice(0, chunk.length);\n  self._cache = self._cache.slice(chunk.length);\n  return xor(chunk, pad);\n};","map":{"version":3,"names":["xor","require","getBlock","self","_prev","_cipher","encryptBlock","exports","encrypt","chunk","_cache","length","Buffer","concat","pad","slice"],"sources":["C:/Users/Amali/Desktop/Building_the_IoT_w._P2P_and_Cloud_Computing/IoTProject/node_modules/browserify-aes/modes/ofb.js"],"sourcesContent":["var xor = require('buffer-xor')\r\n\r\nfunction getBlock (self) {\r\n  self._prev = self._cipher.encryptBlock(self._prev)\r\n  return self._prev\r\n}\r\n\r\nexports.encrypt = function (self, chunk) {\r\n  while (self._cache.length < chunk.length) {\r\n    self._cache = Buffer.concat([self._cache, getBlock(self)])\r\n  }\r\n\r\n  var pad = self._cache.slice(0, chunk.length)\r\n  self._cache = self._cache.slice(chunk.length)\r\n  return xor(chunk, pad)\r\n}\r\n"],"mappings":"AAAA,IAAIA,GAAG,GAAGC,OAAO,CAAC,YAAY,CAAC;AAE/B,SAASC,QAAQ,CAAEC,IAAI,EAAE;EACvBA,IAAI,CAACC,KAAK,GAAGD,IAAI,CAACE,OAAO,CAACC,YAAY,CAACH,IAAI,CAACC,KAAK,CAAC;EAClD,OAAOD,IAAI,CAACC,KAAK;AACnB;AAEAG,OAAO,CAACC,OAAO,GAAG,UAAUL,IAAI,EAAEM,KAAK,EAAE;EACvC,OAAON,IAAI,CAACO,MAAM,CAACC,MAAM,GAAGF,KAAK,CAACE,MAAM,EAAE;IACxCR,IAAI,CAACO,MAAM,GAAGE,MAAM,CAACC,MAAM,CAAC,CAACV,IAAI,CAACO,MAAM,EAAER,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC;EAC5D;EAEA,IAAIW,GAAG,GAAGX,IAAI,CAACO,MAAM,CAACK,KAAK,CAAC,CAAC,EAAEN,KAAK,CAACE,MAAM,CAAC;EAC5CR,IAAI,CAACO,MAAM,GAAGP,IAAI,CAACO,MAAM,CAACK,KAAK,CAACN,KAAK,CAACE,MAAM,CAAC;EAC7C,OAAOX,GAAG,CAACS,KAAK,EAAEK,GAAG,CAAC;AACxB,CAAC"},"metadata":{},"sourceType":"script"}