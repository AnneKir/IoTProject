{"ast":null,"code":"/*!\n * random-bytes\n * Copyright(c) 2016 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict';\n\n/**\n * Module dependencies.\n * @private\n */\nvar crypto = require('crypto');\n\n/**\n * Module variables.\n * @private\n */\n\nvar generateAttempts = crypto.randomBytes === crypto.pseudoRandomBytes ? 1 : 3;\n\n/**\n * Module exports.\n * @public\n */\n\nmodule.exports = randomBytes;\nmodule.exports.sync = randomBytesSync;\n\n/**\n * Generates strong pseudo-random bytes.\n *\n * @param {number} size\n * @param {function} [callback]\n * @return {Promise}\n * @public\n */\n\nfunction randomBytes(size, callback) {\n  // validate callback is a function, if provided\n  if (callback !== undefined && typeof callback !== 'function') {\n    throw new TypeError('argument callback must be a function');\n  }\n\n  // require the callback without promises\n  if (!callback && !global.Promise) {\n    throw new TypeError('argument callback is required');\n  }\n  if (callback) {\n    // classic callback style\n    return generateRandomBytes(size, generateAttempts, callback);\n  }\n  return new Promise(function executor(resolve, reject) {\n    generateRandomBytes(size, generateAttempts, function onRandomBytes(err, str) {\n      if (err) return reject(err);\n      resolve(str);\n    });\n  });\n}\n\n/**\n * Generates strong pseudo-random bytes sync.\n *\n * @param {number} size\n * @return {Buffer}\n * @public\n */\n\nfunction randomBytesSync(size) {\n  var err = null;\n  for (var i = 0; i < generateAttempts; i++) {\n    try {\n      return crypto.randomBytes(size);\n    } catch (e) {\n      err = e;\n    }\n  }\n  throw err;\n}\n\n/**\n * Generates strong pseudo-random bytes.\n *\n * @param {number} size\n * @param {number} attempts\n * @param {function} callback\n * @private\n */\n\nfunction generateRandomBytes(size, attempts, callback) {\n  crypto.randomBytes(size, function onRandomBytes(err, buf) {\n    if (!err) return callback(null, buf);\n    if (! --attempts) return callback(err);\n    setTimeout(generateRandomBytes.bind(null, size, attempts, callback), 10);\n  });\n}","map":{"version":3,"names":["crypto","require","generateAttempts","randomBytes","pseudoRandomBytes","module","exports","sync","randomBytesSync","size","callback","undefined","TypeError","global","Promise","generateRandomBytes","executor","resolve","reject","onRandomBytes","err","str","i","e","attempts","buf","setTimeout","bind"],"sources":["C:/Users/Amali/Desktop/Building_the_IoT_w._P2P_and_Cloud_Computing/IoTProject/node_modules/random-bytes/index.js"],"sourcesContent":["/*!\n * random-bytes\n * Copyright(c) 2016 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict'\n\n/**\n * Module dependencies.\n * @private\n */\n\nvar crypto = require('crypto')\n\n/**\n * Module variables.\n * @private\n */\n\nvar generateAttempts = crypto.randomBytes === crypto.pseudoRandomBytes ? 1 : 3\n\n/**\n * Module exports.\n * @public\n */\n\nmodule.exports = randomBytes\nmodule.exports.sync = randomBytesSync\n\n/**\n * Generates strong pseudo-random bytes.\n *\n * @param {number} size\n * @param {function} [callback]\n * @return {Promise}\n * @public\n */\n\nfunction randomBytes(size, callback) {\n  // validate callback is a function, if provided\n  if (callback !== undefined && typeof callback !== 'function') {\n    throw new TypeError('argument callback must be a function')\n  }\n\n  // require the callback without promises\n  if (!callback && !global.Promise) {\n    throw new TypeError('argument callback is required')\n  }\n\n  if (callback) {\n    // classic callback style\n    return generateRandomBytes(size, generateAttempts, callback)\n  }\n\n  return new Promise(function executor(resolve, reject) {\n    generateRandomBytes(size, generateAttempts, function onRandomBytes(err, str) {\n      if (err) return reject(err)\n      resolve(str)\n    })\n  })\n}\n\n/**\n * Generates strong pseudo-random bytes sync.\n *\n * @param {number} size\n * @return {Buffer}\n * @public\n */\n\nfunction randomBytesSync(size) {\n  var err = null\n\n  for (var i = 0; i < generateAttempts; i++) {\n    try {\n      return crypto.randomBytes(size)\n    } catch (e) {\n      err = e\n    }\n  }\n\n  throw err\n}\n\n/**\n * Generates strong pseudo-random bytes.\n *\n * @param {number} size\n * @param {number} attempts\n * @param {function} callback\n * @private\n */\n\nfunction generateRandomBytes(size, attempts, callback) {\n  crypto.randomBytes(size, function onRandomBytes(err, buf) {\n    if (!err) return callback(null, buf)\n    if (!--attempts) return callback(err)\n    setTimeout(generateRandomBytes.bind(null, size, attempts, callback), 10)\n  })\n}\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;;AAEA,YAAY;;AAEZ;AACA;AACA;AACA;AAEA,IAAIA,MAAM,GAAGC,OAAO,CAAC,QAAQ,CAAC;;AAE9B;AACA;AACA;AACA;;AAEA,IAAIC,gBAAgB,GAAGF,MAAM,CAACG,WAAW,KAAKH,MAAM,CAACI,iBAAiB,GAAG,CAAC,GAAG,CAAC;;AAE9E;AACA;AACA;AACA;;AAEAC,MAAM,CAACC,OAAO,GAAGH,WAAW;AAC5BE,MAAM,CAACC,OAAO,CAACC,IAAI,GAAGC,eAAe;;AAErC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAASL,WAAW,CAACM,IAAI,EAAEC,QAAQ,EAAE;EACnC;EACA,IAAIA,QAAQ,KAAKC,SAAS,IAAI,OAAOD,QAAQ,KAAK,UAAU,EAAE;IAC5D,MAAM,IAAIE,SAAS,CAAC,sCAAsC,CAAC;EAC7D;;EAEA;EACA,IAAI,CAACF,QAAQ,IAAI,CAACG,MAAM,CAACC,OAAO,EAAE;IAChC,MAAM,IAAIF,SAAS,CAAC,+BAA+B,CAAC;EACtD;EAEA,IAAIF,QAAQ,EAAE;IACZ;IACA,OAAOK,mBAAmB,CAACN,IAAI,EAAEP,gBAAgB,EAAEQ,QAAQ,CAAC;EAC9D;EAEA,OAAO,IAAII,OAAO,CAAC,SAASE,QAAQ,CAACC,OAAO,EAAEC,MAAM,EAAE;IACpDH,mBAAmB,CAACN,IAAI,EAAEP,gBAAgB,EAAE,SAASiB,aAAa,CAACC,GAAG,EAAEC,GAAG,EAAE;MAC3E,IAAID,GAAG,EAAE,OAAOF,MAAM,CAACE,GAAG,CAAC;MAC3BH,OAAO,CAACI,GAAG,CAAC;IACd,CAAC,CAAC;EACJ,CAAC,CAAC;AACJ;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAASb,eAAe,CAACC,IAAI,EAAE;EAC7B,IAAIW,GAAG,GAAG,IAAI;EAEd,KAAK,IAAIE,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGpB,gBAAgB,EAAEoB,CAAC,EAAE,EAAE;IACzC,IAAI;MACF,OAAOtB,MAAM,CAACG,WAAW,CAACM,IAAI,CAAC;IACjC,CAAC,CAAC,OAAOc,CAAC,EAAE;MACVH,GAAG,GAAGG,CAAC;IACT;EACF;EAEA,MAAMH,GAAG;AACX;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAASL,mBAAmB,CAACN,IAAI,EAAEe,QAAQ,EAAEd,QAAQ,EAAE;EACrDV,MAAM,CAACG,WAAW,CAACM,IAAI,EAAE,SAASU,aAAa,CAACC,GAAG,EAAEK,GAAG,EAAE;IACxD,IAAI,CAACL,GAAG,EAAE,OAAOV,QAAQ,CAAC,IAAI,EAAEe,GAAG,CAAC;IACpC,IAAI,CAAC,GAAED,QAAQ,EAAE,OAAOd,QAAQ,CAACU,GAAG,CAAC;IACrCM,UAAU,CAACX,mBAAmB,CAACY,IAAI,CAAC,IAAI,EAAElB,IAAI,EAAEe,QAAQ,EAAEd,QAAQ,CAAC,EAAE,EAAE,CAAC;EAC1E,CAAC,CAAC;AACJ"},"metadata":{},"sourceType":"script"}