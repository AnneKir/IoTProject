"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const orderClause_1 = require("./orderClause");
const no_decorator_exception_1 = require("../exceptions/no-decorator-exception");
const __1 = require("..");
const select_1 = require("./select/select");
const order_by_1 = require("./order-by/order-by");
const group_by_1 = require("./group-by/group-by");
class TsQ {
    constructor() {
        this._orderby = new __1.Stack();
    }
    select(...fields) {
        this._select = select_1.select(fields, this._from, this._method);
        return this;
    }
    static from(from) {
        let tsq = new TsQ();
        tsq._from = from;
        try {
            tsq._method = from.prototype._tsq_conf;
        }
        catch (e) {
            throw new no_decorator_exception_1.NoDecoratorException('TsQ decorator is missing from class ' + from.constructor.name);
        }
        return tsq;
    }
    where(f) {
        this._where = f;
        return this;
    }
    order_by(field, direction = 'asc') {
        this._orderby.stack(new orderClause_1.OrderClause(field, direction));
        return this;
    }
    group_by(field) {
        this._groupby = field;
        return this;
    }
    fetch() {
        this
            .fromProcess()
            .whereProcess()
            .orderByProcess()
            .selectProcess()
            .groupByProcess();
        return this._from;
    }
    /**
     * Gets the data from class based on decorator configuration.
     */
    fromProcess() {
        this._from = this._from[this._method]();
        return this;
    }
    /**
     * Filters data according to the calback provided in "where" clause.
     */
    whereProcess() {
        if (this._where)
            this._from = this._from.filter(this._where);
        return this;
    }
    /**
     * Orders data
     */
    orderByProcess() {
        this._from = order_by_1.orderBy(this._from, this._orderby);
        return this;
    }
    /**
     * Filters on provided fields list
     */
    selectProcess() {
        if (this._select) {
            this._from = select_1.selectFilter(this._from, this._select);
            this._select = null;
        }
        return this;
    }
    /**
     * Groups data by provided groups list
     */
    groupByProcess() {
        if (this._groupby)
            this._from = group_by_1.groupBy(this._from, this._groupby);
        return this;
    }
}
exports.TsQ = TsQ;
//# sourceMappingURL=tsQ.js.map