"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const reflect_1 = require("../util/reflect");
function orderBy(from, orderby) {
    while (!orderby.empty()) {
        let c = orderby.unstack();
        from = from.sort((a, b) => {
            let sort;
            if (typeof a[c.field] === 'number' || a[c.field] instanceof Date)
                sort = c.direction.toLowerCase() === 'asc' ? a[c.field] - b[c.field] : b[c.field] - a[c.field];
            if (typeof a[c.field] === 'string')
                sort = c.direction.toLowerCase() === 'asc' ? a[c.field].localeCompare(b[c.field]) : b[c.field].localeCompare(a[c.field]);
            if (typeof a[c.field] === 'object') {
                let aPropertiesMap;
                let bPropertiesMap;
                aPropertiesMap = reflect_1.getObjectMap(a[c.field], '');
                bPropertiesMap = reflect_1.getObjectMap(b[c.field], '');
                let aCount = 0;
                let bCount = 0;
                aPropertiesMap.keySet().toArray().forEach((key) => {
                    if (typeof aPropertiesMap.get(key) === 'number')
                        (aPropertiesMap.get(key) - bPropertiesMap.get(key)) > 0 ? bCount++ : aCount++;
                    if (typeof aPropertiesMap.get(key) === 'string')
                        sort = aPropertiesMap.get(key).localeCompare(bPropertiesMap.get(key)) > 0 ? bCount++ : aCount++;
                });
                sort = c.direction.toLowerCase() === 'asc' ? aCount > bCount ? 1 : -1 : aCount > bCount ? -1 : 1;
            }
            return sort;
        });
    }
    return from;
}
exports.orderBy = orderBy;
//# sourceMappingURL=order-by.js.map