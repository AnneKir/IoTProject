"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const capacity_queue_1 = require("./capacity-queue");
const capacity_full_exception_1 = require("../../../exceptions/capacity-full-exception");
describe('enqueue', function () {
    it('should enqueue 1 element', function () {
        const queue = new capacity_queue_1.CapacityQueue(3);
        queue.enqueue(1);
        expect(queue.length()).toEqual(1);
        expect(queue.isFull()).toBe(false);
    });
    it('should enqueue 2 element', function () {
        const queue = new capacity_queue_1.CapacityQueue(3);
        queue.enqueue(1);
        queue.enqueue(1);
        expect(queue.length()).toEqual(2);
        expect(queue.isFull()).toBe(false);
    });
    it('should return CapacityFullException', function () {
        const queue = new capacity_queue_1.CapacityQueue(3);
        queue.enqueue(1);
        queue.enqueue(1);
        queue.enqueue(1);
        expect(() => queue.enqueue(1)).toThrow(new capacity_full_exception_1.CapacityFullException('Capacity Full'));
        expect(queue.isFull()).toBe(true);
    });
});
describe('capacity', function () {
    it('should return capacity', function () {
        const queue = new capacity_queue_1.CapacityQueue(3);
        expect(queue.capacity()).toEqual(3);
    });
});
describe('is full', function () {
    it('should be full', function () {
        const queue = new capacity_queue_1.CapacityQueue(3);
        queue.enqueue(1);
        queue.enqueue(1);
        queue.enqueue(1);
        expect(queue.length()).toEqual(3);
        expect(queue.isFull()).toBe(true);
    });
});
//# sourceMappingURL=capacity-queue.spec.js.map