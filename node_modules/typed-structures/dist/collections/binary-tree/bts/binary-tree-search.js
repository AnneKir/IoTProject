"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const b_node_1 = require("../utils/node/b-node");
class BinaryTreeSearch {
    constructor() {
        this._root = undefined;
    }
    root() {
        return this._root;
    }
    add(item) {
        if (this._root == null) {
            this._root = this.create(item);
            return true;
        }
        else
            return this._root.add(item);
    }
    remove(item) {
        if (this._root === undefined)
            return false;
        else {
            if (this.root().data == item) {
                const temp = this.create(item);
                temp.left = this._root;
                const result = this._root.remove(temp, item);
                this._root = temp.left;
                return result;
            }
            else {
                return this._root.remove(undefined, item);
            }
        }
    }
    find(root, item) {
        if (root === undefined) {
            return undefined;
        }
        else {
            if (item < root.data) {
                return this.find(root.left, item);
            }
            else if (item > root.data) {
                return this.find(root.right, item);
            }
            else {
                return root.data;
            }
        }
    }
    create(item) {
        return new b_node_1.BNode(item);
    }
}
exports.BinaryTreeSearch = BinaryTreeSearch;
//# sourceMappingURL=binary-tree-search.js.map